{
	"id": "5cec3e9fc5518db34910db138153ab44",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/crowdsale-contracts/Crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\ncontract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 public _token;\r\n\r\n    // Address where funds are collected\r\n    address payable public _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 public _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 public _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param rate_ Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param wallet_ Address where collected funds will be forwarded to\r\n     * @param token_ Address of the token being sold\r\n     */\r\n    constructor (uint256 rate_, address payable wallet_, IERC20 token_) {\r\n        require(rate_ > 0, \"Crowdsale: rate is 0\");\r\n        require(wallet_ != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(token_) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = rate_;\r\n        _wallet = wallet_;\r\n        _token = token_;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    receive () external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n        this;\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dd5080a27cb2a5f7a19273b85540ad69095fb48207154251e87d6f6e4b71741464736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd5080a27cb2a5f7a19273b85540ad69095fb48207154251e87d6f6e4b71741464736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD POP DUP1 LOG2 PUSH29 0xB2A5F7A19273B85540AD69095FB48207154251E87D6F6E4B7174146473 PUSH16 0x6C634300080E00330000000000000000 ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd5080a27cb2a5f7a19273b85540ad69095fb48207154251e87d6f6e4b71741464736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD POP DUP1 LOG2 PUSH29 0xB2A5F7A19273B85540AD69095FB48207154251E87D6F6E4B7174146473 PUSH16 0x6C634300080E00330000000000000000 ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd5080a27cb2a5f7a19273b85540ad69095fb48207154251e87d6f6e4b71741464736f6c634300080e0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/crowdsale-contracts/Crowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ec009440bc2ee622a039bfd15bc54efe545b00b412d79786efa1ac7877236d864736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ec009440bc2ee622a039bfd15bc54efe545b00b412d79786efa1ac7877236d864736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xC0 MULMOD DIFFICULTY SIGNEXTEND 0xC2 0xEE PUSH3 0x2A039B REVERT ISZERO 0xBC SLOAD 0xEF 0xE5 GASLIMIT 0xB0 SIGNEXTEND COINBASE 0x2D PUSH26 0x786EFA1AC7877236D864736F6C634300080E0033000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ec009440bc2ee622a039bfd15bc54efe545b00b412d79786efa1ac7877236d864736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xC0 MULMOD DIFFICULTY SIGNEXTEND 0xC2 0xEE PUSH3 0x2A039B REVERT ISZERO 0xBC SLOAD 0xEF 0xE5 GASLIMIT 0xB0 SIGNEXTEND COINBASE 0x2D PUSH26 0x786EFA1AC7877236D864736F6C634300080E0033000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ec009440bc2ee622a039bfd15bc54efe545b00b412d79786efa1ac7877236d864736f6c634300080e0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/crowdsale-contracts/Crowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/crowdsale-contracts/Crowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/crowdsale-contracts/Crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rate_",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "wallet_",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"rate_": "Number of token units a buyer gets per wei",
									"token_": "Address of the token being sold",
									"wallet_": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:8030  contract Crowdsale is Context, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2529:2909  constructor (uint256 rate_, address payable wallet_, IERC20 token_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2624:2625  0 */\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2616:2621  rate_ */\n  dup4\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2616:2625  rate_ > 0 */\n  gt\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2608:2650  require(rate_ > 0, \"Crowdsale: rate is 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2688:2689  0 */\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2669:2690  wallet_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2669:2676  wallet_ */\n  dup3\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2669:2690  wallet_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2661:2732  require(wallet_ != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2778:2779  0 */\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2751:2780  address(token_) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2759:2765  token_ */\n  dup2\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2751:2780  address(token_) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2743:2821  require(address(token_) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2842:2847  rate_ */\n  dup3\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2834:2839  _rate */\n  0x03\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2834:2847  _rate = rate_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2868:2875  wallet_ */\n  dup2\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2858:2865  _wallet */\n  0x02\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2858:2875  _wallet = wallet_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2895:2901  token_ */\n  dup1\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2886:2892  _token */\n  0x01\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2886:2901  _token = token_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2529:2909  constructor (uint256 rate_, address payable wallet_, IERC20 token_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:8030  contract Crowdsale is Context, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_22:\n    /* \"#utility.yul\":490:514   */\n  tag_45\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_46:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_23:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_48\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_22\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_24:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_25:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_51\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_26:\n    /* \"#utility.yul\":1017:1049   */\n  tag_53\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_54:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_27:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_56\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_28:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_58\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_29:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_60\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_28\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_30:\n    /* \"#utility.yul\":1550:1588   */\n  tag_62\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_63:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_31:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_65\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_30\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2503   */\ntag_3:\n    /* \"#utility.yul\":1906:1912   */\n  0x00\n    /* \"#utility.yul\":1914:1920   */\n  dup1\n    /* \"#utility.yul\":1922:1928   */\n  0x00\n    /* \"#utility.yul\":1971:1973   */\n  0x60\n    /* \"#utility.yul\":1959:1968   */\n  dup5\n    /* \"#utility.yul\":1950:1957   */\n  dup7\n    /* \"#utility.yul\":1946:1969   */\n  sub\n    /* \"#utility.yul\":1942:1974   */\n  slt\n    /* \"#utility.yul\":1939:2058   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1977:2056   */\n  tag_68\n  tag_19\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1939:2058   */\ntag_67:\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2122:2186   */\n  tag_69\n    /* \"#utility.yul\":2178:2185   */\n  dup7\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2158:2167   */\n  dup8\n    /* \"#utility.yul\":2154:2176   */\n  add\n    /* \"#utility.yul\":2122:2186   */\n  tag_23\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2112:2186   */\n  swap4\n  pop\n    /* \"#utility.yul\":2068:2196   */\n  pop\n    /* \"#utility.yul\":2235:2237   */\n  0x20\n    /* \"#utility.yul\":2261:2333   */\n  tag_70\n    /* \"#utility.yul\":2325:2332   */\n  dup7\n    /* \"#utility.yul\":2316:2322   */\n  dup3\n    /* \"#utility.yul\":2305:2314   */\n  dup8\n    /* \"#utility.yul\":2301:2323   */\n  add\n    /* \"#utility.yul\":2261:2333   */\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2251:2333   */\n  swap3\n  pop\n    /* \"#utility.yul\":2206:2343   */\n  pop\n    /* \"#utility.yul\":2382:2384   */\n  0x40\n    /* \"#utility.yul\":2408:2486   */\n  tag_71\n    /* \"#utility.yul\":2478:2485   */\n  dup7\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2458:2467   */\n  dup8\n    /* \"#utility.yul\":2454:2476   */\n  add\n    /* \"#utility.yul\":2408:2486   */\n  tag_31\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2398:2486   */\n  swap2\n  pop\n    /* \"#utility.yul\":2353:2496   */\n  pop\n    /* \"#utility.yul\":1796:2503   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2509:2678   */\ntag_32:\n    /* \"#utility.yul\":2593:2604   */\n  0x00\n    /* \"#utility.yul\":2627:2633   */\n  dup3\n    /* \"#utility.yul\":2622:2625   */\n  dup3\n    /* \"#utility.yul\":2615:2634   */\n  mstore\n    /* \"#utility.yul\":2667:2671   */\n  0x20\n    /* \"#utility.yul\":2662:2665   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2643:2672   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2678   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2684:2854   */\ntag_33:\n    /* \"#utility.yul\":2824:2846   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":2820:2821   */\n  0x00\n    /* \"#utility.yul\":2812:2818   */\n  dup3\n    /* \"#utility.yul\":2808:2822   */\n  add\n    /* \"#utility.yul\":2801:2847   */\n  mstore\n    /* \"#utility.yul\":2684:2854   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2860:3226   */\ntag_34:\n    /* \"#utility.yul\":3002:3005   */\n  0x00\n    /* \"#utility.yul\":3023:3090   */\n  tag_75\n    /* \"#utility.yul\":3087:3089   */\n  0x14\n    /* \"#utility.yul\":3082:3085   */\n  dup4\n    /* \"#utility.yul\":3023:3090   */\n  tag_32\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3016:3090   */\n  swap2\n  pop\n    /* \"#utility.yul\":3099:3192   */\n  tag_76\n    /* \"#utility.yul\":3188:3191   */\n  dup3\n    /* \"#utility.yul\":3099:3192   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3217:3219   */\n  0x20\n    /* \"#utility.yul\":3212:3215   */\n  dup3\n    /* \"#utility.yul\":3208:3220   */\n  add\n    /* \"#utility.yul\":3201:3220   */\n  swap1\n  pop\n    /* \"#utility.yul\":2860:3226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3651   */\ntag_10:\n    /* \"#utility.yul\":3398:3402   */\n  0x00\n    /* \"#utility.yul\":3436:3438   */\n  0x20\n    /* \"#utility.yul\":3425:3434   */\n  dup3\n    /* \"#utility.yul\":3421:3439   */\n  add\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3485:3494   */\n  dup2\n    /* \"#utility.yul\":3479:3483   */\n  dup2\n    /* \"#utility.yul\":3475:3495   */\n  sub\n    /* \"#utility.yul\":3471:3472   */\n  0x00\n    /* \"#utility.yul\":3460:3469   */\n  dup4\n    /* \"#utility.yul\":3456:3473   */\n  add\n    /* \"#utility.yul\":3449:3496   */\n  mstore\n    /* \"#utility.yul\":3513:3644   */\n  tag_78\n    /* \"#utility.yul\":3639:3643   */\n  dup2\n    /* \"#utility.yul\":3513:3644   */\n  tag_34\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3505:3644   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3651   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3657:3881   */\ntag_35:\n    /* \"#utility.yul\":3797:3831   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":3793:3794   */\n  0x00\n    /* \"#utility.yul\":3785:3791   */\n  dup3\n    /* \"#utility.yul\":3781:3795   */\n  add\n    /* \"#utility.yul\":3774:3832   */\n  mstore\n    /* \"#utility.yul\":3866:3873   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3861:3863   */\n  0x20\n    /* \"#utility.yul\":3853:3859   */\n  dup3\n    /* \"#utility.yul\":3849:3864   */\n  add\n    /* \"#utility.yul\":3842:3874   */\n  mstore\n    /* \"#utility.yul\":3657:3881   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4253   */\ntag_36:\n    /* \"#utility.yul\":4029:4032   */\n  0x00\n    /* \"#utility.yul\":4050:4117   */\n  tag_81\n    /* \"#utility.yul\":4114:4116   */\n  0x25\n    /* \"#utility.yul\":4109:4112   */\n  dup4\n    /* \"#utility.yul\":4050:4117   */\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4043:4117   */\n  swap2\n  pop\n    /* \"#utility.yul\":4126:4219   */\n  tag_82\n    /* \"#utility.yul\":4215:4218   */\n  dup3\n    /* \"#utility.yul\":4126:4219   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4244:4246   */\n  0x40\n    /* \"#utility.yul\":4239:4242   */\n  dup3\n    /* \"#utility.yul\":4235:4247   */\n  add\n    /* \"#utility.yul\":4228:4247   */\n  swap1\n  pop\n    /* \"#utility.yul\":3887:4253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4678   */\ntag_13:\n    /* \"#utility.yul\":4425:4429   */\n  0x00\n    /* \"#utility.yul\":4463:4465   */\n  0x20\n    /* \"#utility.yul\":4452:4461   */\n  dup3\n    /* \"#utility.yul\":4448:4466   */\n  add\n    /* \"#utility.yul\":4440:4466   */\n  swap1\n  pop\n    /* \"#utility.yul\":4512:4521   */\n  dup2\n    /* \"#utility.yul\":4506:4510   */\n  dup2\n    /* \"#utility.yul\":4502:4522   */\n  sub\n    /* \"#utility.yul\":4498:4499   */\n  0x00\n    /* \"#utility.yul\":4487:4496   */\n  dup4\n    /* \"#utility.yul\":4483:4500   */\n  add\n    /* \"#utility.yul\":4476:4523   */\n  mstore\n    /* \"#utility.yul\":4540:4671   */\n  tag_84\n    /* \"#utility.yul\":4666:4670   */\n  dup2\n    /* \"#utility.yul\":4540:4671   */\n  tag_36\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4532:4671   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4684:4907   */\ntag_37:\n    /* \"#utility.yul\":4824:4858   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4820:4821   */\n  0x00\n    /* \"#utility.yul\":4812:4818   */\n  dup3\n    /* \"#utility.yul\":4808:4822   */\n  add\n    /* \"#utility.yul\":4801:4859   */\n  mstore\n    /* \"#utility.yul\":4893:4899   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4888:4890   */\n  0x20\n    /* \"#utility.yul\":4880:4886   */\n  dup3\n    /* \"#utility.yul\":4876:4891   */\n  add\n    /* \"#utility.yul\":4869:4900   */\n  mstore\n    /* \"#utility.yul\":4684:4907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:5279   */\ntag_38:\n    /* \"#utility.yul\":5055:5058   */\n  0x00\n    /* \"#utility.yul\":5076:5143   */\n  tag_87\n    /* \"#utility.yul\":5140:5142   */\n  0x24\n    /* \"#utility.yul\":5135:5138   */\n  dup4\n    /* \"#utility.yul\":5076:5143   */\n  tag_32\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":5069:5143   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5245   */\n  tag_88\n    /* \"#utility.yul\":5241:5244   */\n  dup3\n    /* \"#utility.yul\":5152:5245   */\n  tag_37\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5270:5272   */\n  0x40\n    /* \"#utility.yul\":5265:5268   */\n  dup3\n    /* \"#utility.yul\":5261:5273   */\n  add\n    /* \"#utility.yul\":5254:5273   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:5279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5285:5704   */\ntag_16:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5538:5547   */\n  dup2\n    /* \"#utility.yul\":5532:5536   */\n  dup2\n    /* \"#utility.yul\":5528:5548   */\n  sub\n    /* \"#utility.yul\":5524:5525   */\n  0x00\n    /* \"#utility.yul\":5513:5522   */\n  dup4\n    /* \"#utility.yul\":5509:5526   */\n  add\n    /* \"#utility.yul\":5502:5549   */\n  mstore\n    /* \"#utility.yul\":5566:5697   */\n  tag_90\n    /* \"#utility.yul\":5692:5696   */\n  dup2\n    /* \"#utility.yul\":5566:5697   */\n  tag_38\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":5558:5697   */\n  swap1\n  pop\n    /* \"#utility.yul\":5285:5704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:8030  contract Crowdsale is Context, ReentrancyGuard {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:8030  contract Crowdsale is Context, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83bebced\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x83bebced\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x94a5aa8d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xecd0c0c3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x2c4e722e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x610757e4\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3245:3268  buyTokens(_msgSender()) */\n      tag_15\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3255:3267  _msgSender() */\n      tag_16\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3255:3265  _msgSender */\n      tag_17\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3255:3267  _msgSender() */\n      jump\t// in\n    tag_16:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3245:3254  buyTokens */\n      tag_18\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3245:3268  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_15:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:8030  contract Crowdsale is Context, ReentrancyGuard {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3678:3755  function rate() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3823:3910  function weiRaised() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3499:3588  function wallet() public view returns (address payable) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1293:1323  address payable public _wallet */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1620:1640  uint256 public _rate */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1678:1703  uint256 public _weiRaised */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4175:4797  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_18\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1222:1242  IERC20 public _token */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3340:3418  function token() public view returns (IERC20) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4175:4797  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4254:4271  uint256 weiAmount */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4274:4283  msg.value */\n      callvalue\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4254:4283  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4294:4338  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_63\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4315:4326  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4328:4337  weiAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4294:4314  _preValidatePurchase */\n      tag_64\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4294:4338  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4400:4414  uint256 tokens */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4417:4443  _getTokenAmount(weiAmount) */\n      tag_65\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4433:4442  weiAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4417:4432  _getTokenAmount */\n      tag_66\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4417:4443  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4400:4443  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4494:4519  _weiRaised.add(weiAmount) */\n      tag_67\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4509:4518  weiAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4494:4504  _weiRaised */\n      sload(0x04)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4494:4508  _weiRaised.add */\n      tag_68\n      swap1\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4494:4519  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4481:4491  _weiRaised */\n      0x04\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4481:4519  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4532:4569  _processPurchase(beneficiary, tokens) */\n      tag_69\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4549:4560  beneficiary */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4562:4568  tokens */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4532:4548  _processPurchase */\n      tag_70\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4532:4569  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4615:4626  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4585:4646  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4601:4613  _msgSender() */\n      tag_71\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4601:4611  _msgSender */\n      tag_17\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4601:4613  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4585:4646  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4628:4637  weiAmount */\n      dup5\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4639:4645  tokens */\n      dup5\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4585:4646  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4659:4705  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_74\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4682:4693  beneficiary */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4695:4704  weiAmount */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4659:4681  _updatePurchasingState */\n      tag_75\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4659:4705  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4718:4733  _forwardFunds() */\n      tag_76\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4718:4731  _forwardFunds */\n      tag_77\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4718:4733  _forwardFunds() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4744:4789  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_78\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4766:4777  beneficiary */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4779:4788  weiAmount */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4744:4765  _postValidatePurchase */\n      tag_79\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4744:4789  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4243:4797  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4175:4797  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3678:3755  function rate() public view returns (uint256) {... */\n    tag_21:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3715:3722  uint256 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3742:3747  _rate */\n      sload(0x03)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3735:3747  return _rate */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3678:3755  function rate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3823:3910  function weiRaised() public view returns (uint256) {... */\n    tag_26:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3865:3872  uint256 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3892:3902  _weiRaised */\n      sload(0x04)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3885:3902  return _weiRaised */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3823:3910  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3499:3588  function wallet() public view returns (address payable) {... */\n    tag_30:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3538:3553  address payable */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3573:3580  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3566:3580  return _wallet */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3499:3588  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1293:1323  address payable public _wallet */\n    tag_35:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1620:1640  uint256 public _rate */\n    tag_39:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1678:1703  uint256 public _weiRaised */\n    tag_43:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1222:1242  IERC20 public _token */\n    tag_50:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3340:3418  function token() public view returns (IERC20) {... */\n    tag_55:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3378:3384  IERC20 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3404:3410  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3397:3410  return _token */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3340:3418  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5350:5738  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_64:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5484:5485  0 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5461:5486  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5461:5472  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5461:5486  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5453:5533  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5565:5566  0 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5552:5561  weiAmount */\n      dup2\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5552:5566  weiAmount != 0 */\n      sub\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5544:5596  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5350:5738  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7733:7855  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {... */\n    tag_66:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7800:7807  uint256 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7827:7847  weiAmount.mul(_rate) */\n      tag_92\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7841:7846  _rate */\n      sload(0x03)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7827:7836  weiAmount */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7827:7840  weiAmount.mul */\n      tag_93\n      swap1\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7827:7847  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7820:7847  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7733:7855  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6916:7052  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n    tag_70:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7004:7044  _deliverTokens(beneficiary, tokenAmount) */\n      tag_98\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7019:7030  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7032:7043  tokenAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7004:7018  _deliverTokens */\n      tag_99\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7004:7044  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6916:7052  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7330:7477  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {... */\n    tag_75:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7947:8027  function _forwardFunds() internal {... */\n    tag_77:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7992:7999  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7992:8008  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7992:8019  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":8009:8018  msg.value */\n      callvalue\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7992:8019  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7947:8027  function _forwardFunds() internal {... */\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6041:6207  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {... */\n    tag_79:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6495:6642  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_99:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6589:6634  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_109\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6609:6620  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6622:6633  tokenAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6589:6595  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6589:6608  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_110\n      swap1\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6589:6634  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6495:6642  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_118\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_141\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_140)\n    tag_141:\n      0x60\n      swap2\n      pop\n    tag_140:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_142\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_145)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_145:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_152:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_153:\n        /* \"#utility.yul\":177:201   */\n      tag_196\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_152\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_23:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_198\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_153\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_154:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:678   */\n    tag_155:\n        /* \"#utility.yul\":619:626   */\n      0x00\n        /* \"#utility.yul\":648:672   */\n      tag_201\n        /* \"#utility.yul\":666:671   */\n      dup3\n        /* \"#utility.yul\":648:672   */\n      tag_154\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":637:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:826   */\n    tag_156:\n        /* \"#utility.yul\":787:819   */\n      tag_203\n        /* \"#utility.yul\":813:818   */\n      dup2\n        /* \"#utility.yul\":787:819   */\n      tag_155\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":782:785   */\n      dup3\n        /* \"#utility.yul\":775:820   */\n      mstore\n        /* \"#utility.yul\":684:826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":832:1086   */\n    tag_32:\n        /* \"#utility.yul\":941:945   */\n      0x00\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":968:977   */\n      dup3\n        /* \"#utility.yul\":964:982   */\n      add\n        /* \"#utility.yul\":956:982   */\n      swap1\n      pop\n        /* \"#utility.yul\":992:1079   */\n      tag_205\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1065:1074   */\n      dup4\n        /* \"#utility.yul\":1061:1078   */\n      add\n        /* \"#utility.yul\":1052:1058   */\n      dup5\n        /* \"#utility.yul\":992:1079   */\n      tag_156\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":832:1086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1290   */\n    tag_158:\n        /* \"#utility.yul\":1282:1283   */\n      0x00\n        /* \"#utility.yul\":1279:1280   */\n      dup1\n        /* \"#utility.yul\":1272:1284   */\n      revert\n        /* \"#utility.yul\":1419:1515   */\n    tag_160:\n        /* \"#utility.yul\":1456:1463   */\n      0x00\n        /* \"#utility.yul\":1485:1509   */\n      tag_210\n        /* \"#utility.yul\":1503:1508   */\n      dup3\n        /* \"#utility.yul\":1485:1509   */\n      tag_154\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1474:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1521:1643   */\n    tag_161:\n        /* \"#utility.yul\":1594:1618   */\n      tag_212\n        /* \"#utility.yul\":1612:1617   */\n      dup2\n        /* \"#utility.yul\":1594:1618   */\n      tag_160\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1587:1592   */\n      dup2\n        /* \"#utility.yul\":1584:1619   */\n      eq\n        /* \"#utility.yul\":1574:1637   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1633:1634   */\n      0x00\n        /* \"#utility.yul\":1630:1631   */\n      dup1\n        /* \"#utility.yul\":1623:1635   */\n      revert\n        /* \"#utility.yul\":1574:1637   */\n    tag_213:\n        /* \"#utility.yul\":1521:1643   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1649:1788   */\n    tag_162:\n        /* \"#utility.yul\":1695:1700   */\n      0x00\n        /* \"#utility.yul\":1733:1739   */\n      dup2\n        /* \"#utility.yul\":1720:1740   */\n      calldataload\n        /* \"#utility.yul\":1711:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1749:1782   */\n      tag_215\n        /* \"#utility.yul\":1776:1781   */\n      dup2\n        /* \"#utility.yul\":1749:1782   */\n      tag_161\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1649:1788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1794:2123   */\n    tag_47:\n        /* \"#utility.yul\":1853:1859   */\n      0x00\n        /* \"#utility.yul\":1902:1904   */\n      0x20\n        /* \"#utility.yul\":1890:1899   */\n      dup3\n        /* \"#utility.yul\":1881:1888   */\n      dup5\n        /* \"#utility.yul\":1877:1900   */\n      sub\n        /* \"#utility.yul\":1873:1905   */\n      slt\n        /* \"#utility.yul\":1870:1989   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1908:1987   */\n      tag_218\n      tag_158\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1870:1989   */\n    tag_217:\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2053:2106   */\n      tag_219\n        /* \"#utility.yul\":2098:2105   */\n      dup5\n        /* \"#utility.yul\":2089:2095   */\n      dup3\n        /* \"#utility.yul\":2078:2087   */\n      dup6\n        /* \"#utility.yul\":2074:2096   */\n      add\n        /* \"#utility.yul\":2053:2106   */\n      tag_162\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2043:2106   */\n      swap2\n      pop\n        /* \"#utility.yul\":1999:2116   */\n      pop\n        /* \"#utility.yul\":1794:2123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2129:2189   */\n    tag_163:\n        /* \"#utility.yul\":2157:2160   */\n      0x00\n        /* \"#utility.yul\":2178:2183   */\n      dup2\n        /* \"#utility.yul\":2171:2183   */\n      swap1\n      pop\n        /* \"#utility.yul\":2129:2189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2195:2337   */\n    tag_164:\n        /* \"#utility.yul\":2245:2254   */\n      0x00\n        /* \"#utility.yul\":2278:2331   */\n      tag_222\n        /* \"#utility.yul\":2296:2330   */\n      tag_223\n        /* \"#utility.yul\":2305:2329   */\n      tag_224\n        /* \"#utility.yul\":2323:2328   */\n      dup5\n        /* \"#utility.yul\":2305:2329   */\n      tag_154\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2296:2330   */\n      tag_163\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2278:2331   */\n      tag_154\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2265:2331   */\n      swap1\n      pop\n        /* \"#utility.yul\":2195:2337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2469   */\n    tag_165:\n        /* \"#utility.yul\":2393:2402   */\n      0x00\n        /* \"#utility.yul\":2426:2463   */\n      tag_226\n        /* \"#utility.yul\":2457:2462   */\n      dup3\n        /* \"#utility.yul\":2426:2463   */\n      tag_164\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2413:2463   */\n      swap1\n      pop\n        /* \"#utility.yul\":2343:2469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2475:2615   */\n    tag_166:\n        /* \"#utility.yul\":2539:2548   */\n      0x00\n        /* \"#utility.yul\":2572:2609   */\n      tag_228\n        /* \"#utility.yul\":2603:2608   */\n      dup3\n        /* \"#utility.yul\":2572:2609   */\n      tag_165\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2559:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2475:2615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2621:2780   */\n    tag_167:\n        /* \"#utility.yul\":2722:2773   */\n      tag_230\n        /* \"#utility.yul\":2767:2772   */\n      dup2\n        /* \"#utility.yul\":2722:2773   */\n      tag_166\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2717:2720   */\n      dup3\n        /* \"#utility.yul\":2710:2774   */\n      mstore\n        /* \"#utility.yul\":2621:2780   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:3036   */\n    tag_52:\n        /* \"#utility.yul\":2893:2897   */\n      0x00\n        /* \"#utility.yul\":2931:2933   */\n      0x20\n        /* \"#utility.yul\":2920:2929   */\n      dup3\n        /* \"#utility.yul\":2916:2934   */\n      add\n        /* \"#utility.yul\":2908:2934   */\n      swap1\n      pop\n        /* \"#utility.yul\":2944:3029   */\n      tag_232\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3015:3024   */\n      dup4\n        /* \"#utility.yul\":3011:3028   */\n      add\n        /* \"#utility.yul\":3002:3008   */\n      dup5\n        /* \"#utility.yul\":2944:3029   */\n      tag_167\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2786:3036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3042:3211   */\n    tag_168:\n        /* \"#utility.yul\":3126:3137   */\n      0x00\n        /* \"#utility.yul\":3160:3166   */\n      dup3\n        /* \"#utility.yul\":3155:3158   */\n      dup3\n        /* \"#utility.yul\":3148:3167   */\n      mstore\n        /* \"#utility.yul\":3200:3204   */\n      0x20\n        /* \"#utility.yul\":3195:3198   */\n      dup3\n        /* \"#utility.yul\":3191:3205   */\n      add\n        /* \"#utility.yul\":3176:3205   */\n      swap1\n      pop\n        /* \"#utility.yul\":3042:3211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3217:3398   */\n    tag_169:\n        /* \"#utility.yul\":3357:3390   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3353:3354   */\n      0x00\n        /* \"#utility.yul\":3345:3351   */\n      dup3\n        /* \"#utility.yul\":3341:3355   */\n      add\n        /* \"#utility.yul\":3334:3391   */\n      mstore\n        /* \"#utility.yul\":3217:3398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3404:3770   */\n    tag_170:\n        /* \"#utility.yul\":3546:3549   */\n      0x00\n        /* \"#utility.yul\":3567:3634   */\n      tag_236\n        /* \"#utility.yul\":3631:3633   */\n      0x1f\n        /* \"#utility.yul\":3626:3629   */\n      dup4\n        /* \"#utility.yul\":3567:3634   */\n      tag_168\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3560:3634   */\n      swap2\n      pop\n        /* \"#utility.yul\":3643:3736   */\n      tag_237\n        /* \"#utility.yul\":3732:3735   */\n      dup3\n        /* \"#utility.yul\":3643:3736   */\n      tag_169\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3761:3763   */\n      0x20\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3752:3764   */\n      add\n        /* \"#utility.yul\":3745:3764   */\n      swap1\n      pop\n        /* \"#utility.yul\":3404:3770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3776:4195   */\n    tag_61:\n        /* \"#utility.yul\":3942:3946   */\n      0x00\n        /* \"#utility.yul\":3980:3982   */\n      0x20\n        /* \"#utility.yul\":3969:3978   */\n      dup3\n        /* \"#utility.yul\":3965:3983   */\n      add\n        /* \"#utility.yul\":3957:3983   */\n      swap1\n      pop\n        /* \"#utility.yul\":4029:4038   */\n      dup2\n        /* \"#utility.yul\":4023:4027   */\n      dup2\n        /* \"#utility.yul\":4019:4039   */\n      sub\n        /* \"#utility.yul\":4015:4016   */\n      0x00\n        /* \"#utility.yul\":4004:4013   */\n      dup4\n        /* \"#utility.yul\":4000:4017   */\n      add\n        /* \"#utility.yul\":3993:4040   */\n      mstore\n        /* \"#utility.yul\":4057:4188   */\n      tag_239\n        /* \"#utility.yul\":4183:4187   */\n      dup2\n        /* \"#utility.yul\":4057:4188   */\n      tag_170\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4049:4188   */\n      swap1\n      pop\n        /* \"#utility.yul\":3776:4195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4201:4533   */\n    tag_73:\n        /* \"#utility.yul\":4322:4326   */\n      0x00\n        /* \"#utility.yul\":4360:4362   */\n      0x40\n        /* \"#utility.yul\":4349:4358   */\n      dup3\n        /* \"#utility.yul\":4345:4363   */\n      add\n        /* \"#utility.yul\":4337:4363   */\n      swap1\n      pop\n        /* \"#utility.yul\":4373:4444   */\n      tag_241\n        /* \"#utility.yul\":4441:4442   */\n      0x00\n        /* \"#utility.yul\":4430:4439   */\n      dup4\n        /* \"#utility.yul\":4426:4443   */\n      add\n        /* \"#utility.yul\":4417:4423   */\n      dup6\n        /* \"#utility.yul\":4373:4444   */\n      tag_153\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4454:4526   */\n      tag_242\n        /* \"#utility.yul\":4522:4524   */\n      0x20\n        /* \"#utility.yul\":4511:4520   */\n      dup4\n        /* \"#utility.yul\":4507:4525   */\n      add\n        /* \"#utility.yul\":4498:4504   */\n      dup5\n        /* \"#utility.yul\":4454:4526   */\n      tag_153\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4201:4533   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4539:4768   */\n    tag_171:\n        /* \"#utility.yul\":4679:4713   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":4675:4676   */\n      0x00\n        /* \"#utility.yul\":4667:4673   */\n      dup3\n        /* \"#utility.yul\":4663:4677   */\n      add\n        /* \"#utility.yul\":4656:4714   */\n      mstore\n        /* \"#utility.yul\":4748:4760   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4743:4745   */\n      0x20\n        /* \"#utility.yul\":4735:4741   */\n      dup3\n        /* \"#utility.yul\":4731:4746   */\n      add\n        /* \"#utility.yul\":4724:4761   */\n      mstore\n        /* \"#utility.yul\":4539:4768   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4774:5140   */\n    tag_172:\n        /* \"#utility.yul\":4916:4919   */\n      0x00\n        /* \"#utility.yul\":4937:5004   */\n      tag_245\n        /* \"#utility.yul\":5001:5003   */\n      0x2a\n        /* \"#utility.yul\":4996:4999   */\n      dup4\n        /* \"#utility.yul\":4937:5004   */\n      tag_168\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4930:5004   */\n      swap2\n      pop\n        /* \"#utility.yul\":5013:5106   */\n      tag_246\n        /* \"#utility.yul\":5102:5105   */\n      dup3\n        /* \"#utility.yul\":5013:5106   */\n      tag_171\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5131:5133   */\n      0x40\n        /* \"#utility.yul\":5126:5129   */\n      dup3\n        /* \"#utility.yul\":5122:5134   */\n      add\n        /* \"#utility.yul\":5115:5134   */\n      swap1\n      pop\n        /* \"#utility.yul\":4774:5140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5146:5565   */\n    tag_87:\n        /* \"#utility.yul\":5312:5316   */\n      0x00\n        /* \"#utility.yul\":5350:5352   */\n      0x20\n        /* \"#utility.yul\":5339:5348   */\n      dup3\n        /* \"#utility.yul\":5335:5353   */\n      add\n        /* \"#utility.yul\":5327:5353   */\n      swap1\n      pop\n        /* \"#utility.yul\":5399:5408   */\n      dup2\n        /* \"#utility.yul\":5393:5397   */\n      dup2\n        /* \"#utility.yul\":5389:5409   */\n      sub\n        /* \"#utility.yul\":5385:5386   */\n      0x00\n        /* \"#utility.yul\":5374:5383   */\n      dup4\n        /* \"#utility.yul\":5370:5387   */\n      add\n        /* \"#utility.yul\":5363:5410   */\n      mstore\n        /* \"#utility.yul\":5427:5558   */\n      tag_248\n        /* \"#utility.yul\":5553:5557   */\n      dup2\n        /* \"#utility.yul\":5427:5558   */\n      tag_172\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5419:5558   */\n      swap1\n      pop\n        /* \"#utility.yul\":5146:5565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5571:5746   */\n    tag_173:\n        /* \"#utility.yul\":5711:5738   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":5707:5708   */\n      0x00\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5695:5709   */\n      add\n        /* \"#utility.yul\":5688:5739   */\n      mstore\n        /* \"#utility.yul\":5571:5746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5752:6118   */\n    tag_174:\n        /* \"#utility.yul\":5894:5897   */\n      0x00\n        /* \"#utility.yul\":5915:5982   */\n      tag_251\n        /* \"#utility.yul\":5979:5981   */\n      0x19\n        /* \"#utility.yul\":5974:5977   */\n      dup4\n        /* \"#utility.yul\":5915:5982   */\n      tag_168\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5908:5982   */\n      swap2\n      pop\n        /* \"#utility.yul\":5991:6084   */\n      tag_252\n        /* \"#utility.yul\":6080:6083   */\n      dup3\n        /* \"#utility.yul\":5991:6084   */\n      tag_173\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6109:6111   */\n      0x20\n        /* \"#utility.yul\":6104:6107   */\n      dup3\n        /* \"#utility.yul\":6100:6112   */\n      add\n        /* \"#utility.yul\":6093:6112   */\n      swap1\n      pop\n        /* \"#utility.yul\":5752:6118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6124:6543   */\n    tag_90:\n        /* \"#utility.yul\":6290:6294   */\n      0x00\n        /* \"#utility.yul\":6328:6330   */\n      0x20\n        /* \"#utility.yul\":6317:6326   */\n      dup3\n        /* \"#utility.yul\":6313:6331   */\n      add\n        /* \"#utility.yul\":6305:6331   */\n      swap1\n      pop\n        /* \"#utility.yul\":6377:6386   */\n      dup2\n        /* \"#utility.yul\":6371:6375   */\n      dup2\n        /* \"#utility.yul\":6367:6387   */\n      sub\n        /* \"#utility.yul\":6363:6364   */\n      0x00\n        /* \"#utility.yul\":6352:6361   */\n      dup4\n        /* \"#utility.yul\":6348:6365   */\n      add\n        /* \"#utility.yul\":6341:6388   */\n      mstore\n        /* \"#utility.yul\":6405:6536   */\n      tag_254\n        /* \"#utility.yul\":6531:6535   */\n      dup2\n        /* \"#utility.yul\":6405:6536   */\n      tag_174\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6397:6536   */\n      swap1\n      pop\n        /* \"#utility.yul\":6124:6543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6549:6729   */\n    tag_175:\n        /* \"#utility.yul\":6597:6674   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6594:6595   */\n      0x00\n        /* \"#utility.yul\":6587:6675   */\n      mstore\n        /* \"#utility.yul\":6694:6698   */\n      0x11\n        /* \"#utility.yul\":6691:6692   */\n      0x04\n        /* \"#utility.yul\":6684:6699   */\n      mstore\n        /* \"#utility.yul\":6718:6722   */\n      0x24\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6708:6723   */\n      revert\n        /* \"#utility.yul\":6735:7040   */\n    tag_96:\n        /* \"#utility.yul\":6775:6778   */\n      0x00\n        /* \"#utility.yul\":6794:6814   */\n      tag_257\n        /* \"#utility.yul\":6812:6813   */\n      dup3\n        /* \"#utility.yul\":6794:6814   */\n      tag_152\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6789:6814   */\n      swap2\n      pop\n        /* \"#utility.yul\":6828:6848   */\n      tag_258\n        /* \"#utility.yul\":6846:6847   */\n      dup4\n        /* \"#utility.yul\":6828:6848   */\n      tag_152\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6823:6848   */\n      swap3\n      pop\n        /* \"#utility.yul\":6982:6983   */\n      dup3\n        /* \"#utility.yul\":6914:6980   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6910:6984   */\n      sub\n        /* \"#utility.yul\":6907:6908   */\n      dup3\n        /* \"#utility.yul\":6904:6985   */\n      gt\n        /* \"#utility.yul\":6901:7008   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":6988:7006   */\n      tag_260\n      tag_175\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6901:7008   */\n    tag_259:\n        /* \"#utility.yul\":7032:7033   */\n      dup3\n        /* \"#utility.yul\":7029:7030   */\n      dup3\n        /* \"#utility.yul\":7025:7034   */\n      add\n        /* \"#utility.yul\":7018:7034   */\n      swap1\n      pop\n        /* \"#utility.yul\":6735:7040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7046:7394   */\n    tag_107:\n        /* \"#utility.yul\":7086:7093   */\n      0x00\n        /* \"#utility.yul\":7109:7129   */\n      tag_262\n        /* \"#utility.yul\":7127:7128   */\n      dup3\n        /* \"#utility.yul\":7109:7129   */\n      tag_152\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7104:7129   */\n      swap2\n      pop\n        /* \"#utility.yul\":7143:7163   */\n      tag_263\n        /* \"#utility.yul\":7161:7162   */\n      dup4\n        /* \"#utility.yul\":7143:7163   */\n      tag_152\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":7138:7163   */\n      swap3\n      pop\n        /* \"#utility.yul\":7331:7332   */\n      dup2\n        /* \"#utility.yul\":7263:7329   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7259:7333   */\n      div\n        /* \"#utility.yul\":7256:7257   */\n      dup4\n        /* \"#utility.yul\":7253:7334   */\n      gt\n        /* \"#utility.yul\":7248:7249   */\n      dup3\n        /* \"#utility.yul\":7241:7250   */\n      iszero\n        /* \"#utility.yul\":7234:7251   */\n      iszero\n        /* \"#utility.yul\":7230:7335   */\n      and\n        /* \"#utility.yul\":7227:7358   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":7338:7356   */\n      tag_265\n      tag_175\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7227:7358   */\n    tag_264:\n        /* \"#utility.yul\":7386:7387   */\n      dup3\n        /* \"#utility.yul\":7383:7384   */\n      dup3\n        /* \"#utility.yul\":7379:7388   */\n      mul\n        /* \"#utility.yul\":7368:7388   */\n      swap1\n      pop\n        /* \"#utility.yul\":7046:7394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7400:7518   */\n    tag_176:\n        /* \"#utility.yul\":7487:7511   */\n      tag_267\n        /* \"#utility.yul\":7505:7510   */\n      dup2\n        /* \"#utility.yul\":7487:7511   */\n      tag_160\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7482:7485   */\n      dup3\n        /* \"#utility.yul\":7475:7512   */\n      mstore\n        /* \"#utility.yul\":7400:7518   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7524:7856   */\n    tag_114:\n        /* \"#utility.yul\":7645:7649   */\n      0x00\n        /* \"#utility.yul\":7683:7685   */\n      0x40\n        /* \"#utility.yul\":7672:7681   */\n      dup3\n        /* \"#utility.yul\":7668:7686   */\n      add\n        /* \"#utility.yul\":7660:7686   */\n      swap1\n      pop\n        /* \"#utility.yul\":7696:7767   */\n      tag_269\n        /* \"#utility.yul\":7764:7765   */\n      0x00\n        /* \"#utility.yul\":7753:7762   */\n      dup4\n        /* \"#utility.yul\":7749:7766   */\n      add\n        /* \"#utility.yul\":7740:7746   */\n      dup6\n        /* \"#utility.yul\":7696:7767   */\n      tag_176\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7777:7849   */\n      tag_270\n        /* \"#utility.yul\":7845:7847   */\n      0x20\n        /* \"#utility.yul\":7834:7843   */\n      dup4\n        /* \"#utility.yul\":7830:7848   */\n      add\n        /* \"#utility.yul\":7821:7827   */\n      dup5\n        /* \"#utility.yul\":7777:7849   */\n      tag_153\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7524:7856   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7862:7952   */\n    tag_177:\n        /* \"#utility.yul\":7896:7903   */\n      0x00\n        /* \"#utility.yul\":7939:7944   */\n      dup2\n        /* \"#utility.yul\":7932:7945   */\n      iszero\n        /* \"#utility.yul\":7925:7946   */\n      iszero\n        /* \"#utility.yul\":7914:7946   */\n      swap1\n      pop\n        /* \"#utility.yul\":7862:7952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7958:8074   */\n    tag_178:\n        /* \"#utility.yul\":8028:8049   */\n      tag_273\n        /* \"#utility.yul\":8043:8048   */\n      dup2\n        /* \"#utility.yul\":8028:8049   */\n      tag_177\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8021:8026   */\n      dup2\n        /* \"#utility.yul\":8018:8050   */\n      eq\n        /* \"#utility.yul\":8008:8068   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":8064:8065   */\n      0x00\n        /* \"#utility.yul\":8061:8062   */\n      dup1\n        /* \"#utility.yul\":8054:8066   */\n      revert\n        /* \"#utility.yul\":8008:8068   */\n    tag_274:\n        /* \"#utility.yul\":7958:8074   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8080:8217   */\n    tag_179:\n        /* \"#utility.yul\":8134:8139   */\n      0x00\n        /* \"#utility.yul\":8165:8171   */\n      dup2\n        /* \"#utility.yul\":8159:8172   */\n      mload\n        /* \"#utility.yul\":8150:8172   */\n      swap1\n      pop\n        /* \"#utility.yul\":8181:8211   */\n      tag_276\n        /* \"#utility.yul\":8205:8210   */\n      dup2\n        /* \"#utility.yul\":8181:8211   */\n      tag_178\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8080:8217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8223:8568   */\n    tag_121:\n        /* \"#utility.yul\":8290:8296   */\n      0x00\n        /* \"#utility.yul\":8339:8341   */\n      0x20\n        /* \"#utility.yul\":8327:8336   */\n      dup3\n        /* \"#utility.yul\":8318:8325   */\n      dup5\n        /* \"#utility.yul\":8314:8337   */\n      sub\n        /* \"#utility.yul\":8310:8342   */\n      slt\n        /* \"#utility.yul\":8307:8426   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":8345:8424   */\n      tag_279\n      tag_158\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8307:8426   */\n    tag_278:\n        /* \"#utility.yul\":8465:8466   */\n      0x00\n        /* \"#utility.yul\":8490:8551   */\n      tag_280\n        /* \"#utility.yul\":8543:8550   */\n      dup5\n        /* \"#utility.yul\":8534:8540   */\n      dup3\n        /* \"#utility.yul\":8523:8532   */\n      dup6\n        /* \"#utility.yul\":8519:8541   */\n      add\n        /* \"#utility.yul\":8490:8551   */\n      tag_179\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8480:8551   */\n      swap2\n      pop\n        /* \"#utility.yul\":8436:8561   */\n      pop\n        /* \"#utility.yul\":8223:8568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8574:8803   */\n    tag_180:\n        /* \"#utility.yul\":8714:8748   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8710:8711   */\n      0x00\n        /* \"#utility.yul\":8702:8708   */\n      dup3\n        /* \"#utility.yul\":8698:8712   */\n      add\n        /* \"#utility.yul\":8691:8749   */\n      mstore\n        /* \"#utility.yul\":8783:8795   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8778:8780   */\n      0x20\n        /* \"#utility.yul\":8770:8776   */\n      dup3\n        /* \"#utility.yul\":8766:8781   */\n      add\n        /* \"#utility.yul\":8759:8796   */\n      mstore\n        /* \"#utility.yul\":8574:8803   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8809:9175   */\n    tag_181:\n        /* \"#utility.yul\":8951:8954   */\n      0x00\n        /* \"#utility.yul\":8972:9039   */\n      tag_283\n        /* \"#utility.yul\":9036:9038   */\n      0x2a\n        /* \"#utility.yul\":9031:9034   */\n      dup4\n        /* \"#utility.yul\":8972:9039   */\n      tag_168\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8965:9039   */\n      swap2\n      pop\n        /* \"#utility.yul\":9048:9141   */\n      tag_284\n        /* \"#utility.yul\":9137:9140   */\n      dup3\n        /* \"#utility.yul\":9048:9141   */\n      tag_180\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":9166:9168   */\n      0x40\n        /* \"#utility.yul\":9161:9164   */\n      dup3\n        /* \"#utility.yul\":9157:9169   */\n      add\n        /* \"#utility.yul\":9150:9169   */\n      swap1\n      pop\n        /* \"#utility.yul\":8809:9175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9181:9600   */\n    tag_124:\n        /* \"#utility.yul\":9347:9351   */\n      0x00\n        /* \"#utility.yul\":9385:9387   */\n      0x20\n        /* \"#utility.yul\":9374:9383   */\n      dup3\n        /* \"#utility.yul\":9370:9388   */\n      add\n        /* \"#utility.yul\":9362:9388   */\n      swap1\n      pop\n        /* \"#utility.yul\":9434:9443   */\n      dup2\n        /* \"#utility.yul\":9428:9432   */\n      dup2\n        /* \"#utility.yul\":9424:9444   */\n      sub\n        /* \"#utility.yul\":9420:9421   */\n      0x00\n        /* \"#utility.yul\":9409:9418   */\n      dup4\n        /* \"#utility.yul\":9405:9422   */\n      add\n        /* \"#utility.yul\":9398:9445   */\n      mstore\n        /* \"#utility.yul\":9462:9593   */\n      tag_286\n        /* \"#utility.yul\":9588:9592   */\n      dup2\n        /* \"#utility.yul\":9462:9593   */\n      tag_181\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9454:9593   */\n      swap1\n      pop\n        /* \"#utility.yul\":9181:9600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9606:9831   */\n    tag_182:\n        /* \"#utility.yul\":9746:9780   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":9742:9743   */\n      0x00\n        /* \"#utility.yul\":9734:9740   */\n      dup3\n        /* \"#utility.yul\":9730:9744   */\n      add\n        /* \"#utility.yul\":9723:9781   */\n      mstore\n        /* \"#utility.yul\":9815:9823   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9810:9812   */\n      0x20\n        /* \"#utility.yul\":9802:9808   */\n      dup3\n        /* \"#utility.yul\":9798:9813   */\n      add\n        /* \"#utility.yul\":9791:9824   */\n      mstore\n        /* \"#utility.yul\":9606:9831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:10203   */\n    tag_183:\n        /* \"#utility.yul\":9979:9982   */\n      0x00\n        /* \"#utility.yul\":10000:10067   */\n      tag_289\n        /* \"#utility.yul\":10064:10066   */\n      0x26\n        /* \"#utility.yul\":10059:10062   */\n      dup4\n        /* \"#utility.yul\":10000:10067   */\n      tag_168\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9993:10067   */\n      swap2\n      pop\n        /* \"#utility.yul\":10076:10169   */\n      tag_290\n        /* \"#utility.yul\":10165:10168   */\n      dup3\n        /* \"#utility.yul\":10076:10169   */\n      tag_182\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":10194:10196   */\n      0x40\n        /* \"#utility.yul\":10189:10192   */\n      dup3\n        /* \"#utility.yul\":10185:10197   */\n      add\n        /* \"#utility.yul\":10178:10197   */\n      swap1\n      pop\n        /* \"#utility.yul\":9837:10203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10209:10628   */\n    tag_131:\n        /* \"#utility.yul\":10375:10379   */\n      0x00\n        /* \"#utility.yul\":10413:10415   */\n      0x20\n        /* \"#utility.yul\":10402:10411   */\n      dup3\n        /* \"#utility.yul\":10398:10416   */\n      add\n        /* \"#utility.yul\":10390:10416   */\n      swap1\n      pop\n        /* \"#utility.yul\":10462:10471   */\n      dup2\n        /* \"#utility.yul\":10456:10460   */\n      dup2\n        /* \"#utility.yul\":10452:10472   */\n      sub\n        /* \"#utility.yul\":10448:10449   */\n      0x00\n        /* \"#utility.yul\":10437:10446   */\n      dup4\n        /* \"#utility.yul\":10433:10450   */\n      add\n        /* \"#utility.yul\":10426:10473   */\n      mstore\n        /* \"#utility.yul\":10490:10621   */\n      tag_292\n        /* \"#utility.yul\":10616:10620   */\n      dup2\n        /* \"#utility.yul\":10490:10621   */\n      tag_183\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10482:10621   */\n      swap1\n      pop\n        /* \"#utility.yul\":10209:10628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10634:10813   */\n    tag_184:\n        /* \"#utility.yul\":10774:10805   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":10770:10771   */\n      0x00\n        /* \"#utility.yul\":10762:10768   */\n      dup3\n        /* \"#utility.yul\":10758:10772   */\n      add\n        /* \"#utility.yul\":10751:10806   */\n      mstore\n        /* \"#utility.yul\":10634:10813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:11185   */\n    tag_185:\n        /* \"#utility.yul\":10961:10964   */\n      0x00\n        /* \"#utility.yul\":10982:11049   */\n      tag_295\n        /* \"#utility.yul\":11046:11048   */\n      0x1d\n        /* \"#utility.yul\":11041:11044   */\n      dup4\n        /* \"#utility.yul\":10982:11049   */\n      tag_168\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10975:11049   */\n      swap2\n      pop\n        /* \"#utility.yul\":11058:11151   */\n      tag_296\n        /* \"#utility.yul\":11147:11150   */\n      dup3\n        /* \"#utility.yul\":11058:11151   */\n      tag_184\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11176:11178   */\n      0x20\n        /* \"#utility.yul\":11171:11174   */\n      dup3\n        /* \"#utility.yul\":11167:11179   */\n      add\n        /* \"#utility.yul\":11160:11179   */\n      swap1\n      pop\n        /* \"#utility.yul\":10819:11185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11191:11610   */\n    tag_136:\n        /* \"#utility.yul\":11357:11361   */\n      0x00\n        /* \"#utility.yul\":11395:11397   */\n      0x20\n        /* \"#utility.yul\":11384:11393   */\n      dup3\n        /* \"#utility.yul\":11380:11398   */\n      add\n        /* \"#utility.yul\":11372:11398   */\n      swap1\n      pop\n        /* \"#utility.yul\":11444:11453   */\n      dup2\n        /* \"#utility.yul\":11438:11442   */\n      dup2\n        /* \"#utility.yul\":11434:11454   */\n      sub\n        /* \"#utility.yul\":11430:11431   */\n      0x00\n        /* \"#utility.yul\":11419:11428   */\n      dup4\n        /* \"#utility.yul\":11415:11432   */\n      add\n        /* \"#utility.yul\":11408:11455   */\n      mstore\n        /* \"#utility.yul\":11472:11603   */\n      tag_298\n        /* \"#utility.yul\":11598:11602   */\n      dup2\n        /* \"#utility.yul\":11472:11603   */\n      tag_185\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":11464:11603   */\n      swap1\n      pop\n        /* \"#utility.yul\":11191:11610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11616:11714   */\n    tag_186:\n        /* \"#utility.yul\":11667:11673   */\n      0x00\n        /* \"#utility.yul\":11701:11706   */\n      dup2\n        /* \"#utility.yul\":11695:11707   */\n      mload\n        /* \"#utility.yul\":11685:11707   */\n      swap1\n      pop\n        /* \"#utility.yul\":11616:11714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11720:11867   */\n    tag_187:\n        /* \"#utility.yul\":11821:11832   */\n      0x00\n        /* \"#utility.yul\":11858:11861   */\n      dup2\n        /* \"#utility.yul\":11843:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11720:11867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11873:12180   */\n    tag_188:\n        /* \"#utility.yul\":11941:11942   */\n      0x00\n        /* \"#utility.yul\":11951:12064   */\n    tag_302:\n        /* \"#utility.yul\":11965:11971   */\n      dup4\n        /* \"#utility.yul\":11962:11963   */\n      dup2\n        /* \"#utility.yul\":11959:11972   */\n      lt\n        /* \"#utility.yul\":11951:12064   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":12050:12051   */\n      dup1\n        /* \"#utility.yul\":12045:12048   */\n      dup3\n        /* \"#utility.yul\":12041:12052   */\n      add\n        /* \"#utility.yul\":12035:12053   */\n      mload\n        /* \"#utility.yul\":12031:12032   */\n      dup2\n        /* \"#utility.yul\":12026:12029   */\n      dup5\n        /* \"#utility.yul\":12022:12033   */\n      add\n        /* \"#utility.yul\":12015:12054   */\n      mstore\n        /* \"#utility.yul\":11987:11989   */\n      0x20\n        /* \"#utility.yul\":11984:11985   */\n      dup2\n        /* \"#utility.yul\":11980:11990   */\n      add\n        /* \"#utility.yul\":11975:11990   */\n      swap1\n      pop\n        /* \"#utility.yul\":11951:12064   */\n      jump(tag_302)\n    tag_304:\n        /* \"#utility.yul\":12082:12088   */\n      dup4\n        /* \"#utility.yul\":12079:12080   */\n      dup2\n        /* \"#utility.yul\":12076:12089   */\n      gt\n        /* \"#utility.yul\":12073:12174   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":12162:12163   */\n      0x00\n        /* \"#utility.yul\":12153:12159   */\n      dup5\n        /* \"#utility.yul\":12148:12151   */\n      dup5\n        /* \"#utility.yul\":12144:12160   */\n      add\n        /* \"#utility.yul\":12137:12164   */\n      mstore\n        /* \"#utility.yul\":12073:12174   */\n    tag_305:\n        /* \"#utility.yul\":11922:12180   */\n      pop\n        /* \"#utility.yul\":11873:12180   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12186:12559   */\n    tag_189:\n        /* \"#utility.yul\":12290:12293   */\n      0x00\n        /* \"#utility.yul\":12318:12356   */\n      tag_307\n        /* \"#utility.yul\":12350:12355   */\n      dup3\n        /* \"#utility.yul\":12318:12356   */\n      tag_186\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":12372:12460   */\n      tag_308\n        /* \"#utility.yul\":12453:12459   */\n      dup2\n        /* \"#utility.yul\":12448:12451   */\n      dup6\n        /* \"#utility.yul\":12372:12460   */\n      tag_187\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":12365:12460   */\n      swap4\n      pop\n        /* \"#utility.yul\":12469:12521   */\n      tag_309\n        /* \"#utility.yul\":12514:12520   */\n      dup2\n        /* \"#utility.yul\":12509:12512   */\n      dup6\n        /* \"#utility.yul\":12502:12506   */\n      0x20\n        /* \"#utility.yul\":12495:12500   */\n      dup7\n        /* \"#utility.yul\":12491:12507   */\n      add\n        /* \"#utility.yul\":12469:12521   */\n      tag_188\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":12546:12552   */\n      dup1\n        /* \"#utility.yul\":12541:12544   */\n      dup5\n        /* \"#utility.yul\":12537:12553   */\n      add\n        /* \"#utility.yul\":12530:12553   */\n      swap2\n      pop\n        /* \"#utility.yul\":12294:12559   */\n      pop\n        /* \"#utility.yul\":12186:12559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12565:12836   */\n    tag_138:\n        /* \"#utility.yul\":12695:12698   */\n      0x00\n        /* \"#utility.yul\":12717:12810   */\n      tag_311\n        /* \"#utility.yul\":12806:12809   */\n      dup3\n        /* \"#utility.yul\":12797:12803   */\n      dup5\n        /* \"#utility.yul\":12717:12810   */\n      tag_189\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":12710:12810   */\n      swap2\n      pop\n        /* \"#utility.yul\":12827:12830   */\n      dup2\n        /* \"#utility.yul\":12820:12830   */\n      swap1\n      pop\n        /* \"#utility.yul\":12565:12836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12842:12941   */\n    tag_190:\n        /* \"#utility.yul\":12894:12900   */\n      0x00\n        /* \"#utility.yul\":12928:12933   */\n      dup2\n        /* \"#utility.yul\":12922:12934   */\n      mload\n        /* \"#utility.yul\":12912:12934   */\n      swap1\n      pop\n        /* \"#utility.yul\":12842:12941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12947:13049   */\n    tag_191:\n        /* \"#utility.yul\":12988:12994   */\n      0x00\n        /* \"#utility.yul\":13039:13041   */\n      0x1f\n        /* \"#utility.yul\":13035:13042   */\n      not\n        /* \"#utility.yul\":13030:13032   */\n      0x1f\n        /* \"#utility.yul\":13023:13028   */\n      dup4\n        /* \"#utility.yul\":13019:13033   */\n      add\n        /* \"#utility.yul\":13015:13043   */\n      and\n        /* \"#utility.yul\":13005:13043   */\n      swap1\n      pop\n        /* \"#utility.yul\":12947:13049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13055:13419   */\n    tag_192:\n        /* \"#utility.yul\":13143:13146   */\n      0x00\n        /* \"#utility.yul\":13171:13210   */\n      tag_315\n        /* \"#utility.yul\":13204:13209   */\n      dup3\n        /* \"#utility.yul\":13171:13210   */\n      tag_190\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":13226:13297   */\n      tag_316\n        /* \"#utility.yul\":13290:13296   */\n      dup2\n        /* \"#utility.yul\":13285:13288   */\n      dup6\n        /* \"#utility.yul\":13226:13297   */\n      tag_168\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":13219:13297   */\n      swap4\n      pop\n        /* \"#utility.yul\":13306:13358   */\n      tag_317\n        /* \"#utility.yul\":13351:13357   */\n      dup2\n        /* \"#utility.yul\":13346:13349   */\n      dup6\n        /* \"#utility.yul\":13339:13343   */\n      0x20\n        /* \"#utility.yul\":13332:13337   */\n      dup7\n        /* \"#utility.yul\":13328:13344   */\n      add\n        /* \"#utility.yul\":13306:13358   */\n      tag_188\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":13383:13412   */\n      tag_318\n        /* \"#utility.yul\":13405:13411   */\n      dup2\n        /* \"#utility.yul\":13383:13412   */\n      tag_191\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":13378:13381   */\n      dup5\n        /* \"#utility.yul\":13374:13413   */\n      add\n        /* \"#utility.yul\":13367:13413   */\n      swap2\n      pop\n        /* \"#utility.yul\":13147:13419   */\n      pop\n        /* \"#utility.yul\":13055:13419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13425:13738   */\n    tag_151:\n        /* \"#utility.yul\":13538:13542   */\n      0x00\n        /* \"#utility.yul\":13576:13578   */\n      0x20\n        /* \"#utility.yul\":13565:13574   */\n      dup3\n        /* \"#utility.yul\":13561:13579   */\n      add\n        /* \"#utility.yul\":13553:13579   */\n      swap1\n      pop\n        /* \"#utility.yul\":13625:13634   */\n      dup2\n        /* \"#utility.yul\":13619:13623   */\n      dup2\n        /* \"#utility.yul\":13615:13635   */\n      sub\n        /* \"#utility.yul\":13611:13612   */\n      0x00\n        /* \"#utility.yul\":13600:13609   */\n      dup4\n        /* \"#utility.yul\":13596:13613   */\n      add\n        /* \"#utility.yul\":13589:13636   */\n      mstore\n        /* \"#utility.yul\":13653:13731   */\n      tag_320\n        /* \"#utility.yul\":13726:13730   */\n      dup2\n        /* \"#utility.yul\":13717:13723   */\n      dup5\n        /* \"#utility.yul\":13653:13731   */\n      tag_192\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":13645:13731   */\n      swap1\n      pop\n        /* \"#utility.yul\":13425:13738   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c8161e6139f96bb9097f46fc165d808acc8cb49bd35ee0923db1060b9db53d2364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1063": {
									"entryPoint": null,
									"id": 1063,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$117_fromMemory": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$117_fromMemory": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$117": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$117": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5707:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:7",
														"type": ""
													}
												],
												"src": "694:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "861:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "871:7:7",
														"type": ""
													}
												],
												"src": "826:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "987:87:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1052:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:51:7"
															},
															"nodeType": "YulIf",
															"src": "997:71:7"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "980:5:7",
														"type": ""
													}
												],
												"src": "936:138:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1161:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:7"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1129:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1137:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1145:5:7",
														"type": ""
													}
												],
												"src": "1080:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1290:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1300:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1272:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1282:7:7",
														"type": ""
													}
												],
												"src": "1245:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$117",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1388:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1398:7:7",
														"type": ""
													}
												],
												"src": "1347:110:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1520:93:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1591:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$117",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:57:7"
															},
															"nodeType": "YulIf",
															"src": "1530:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$117",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1513:5:7",
														"type": ""
													}
												],
												"src": "1463:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1696:94:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1706:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$117",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$117_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1674:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1682:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1690:5:7",
														"type": ""
													}
												],
												"src": "1619:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:574:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1975:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1977:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1977:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:32:7"
															},
															"nodeType": "YulIf",
															"src": "1939:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2068:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2083:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2087:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2112:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2122:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2112:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2206:137:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2251:82:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2305:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2316:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2301:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2325:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2261:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2261:72:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2353:143:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2368:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2382:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2372:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2398:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$117_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2408:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2398:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$117_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1883:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1894:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1906:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1914:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1922:6:7",
														"type": ""
													}
												],
												"src": "1796:707:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2643:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2662:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2643:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2577:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2582:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2593:11:7",
														"type": ""
													}
												],
												"src": "2509:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2824:22:7",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2801:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2782:6:7",
														"type": ""
													}
												],
												"src": "2684:170:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3006:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3016:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3087:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3023:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nodeType": "YulIdentifier",
																	"src": "3099:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3099:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3201:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2994:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3002:3:7",
														"type": ""
													}
												],
												"src": "2860:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3403:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3413:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3471:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3456:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3479:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3449:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3505:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3513:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3383:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3398:4:7",
														"type": ""
													}
												],
												"src": "3232:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3763:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3793:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3797:34:7",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3774:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3861:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:15:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3866:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3842:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3755:6:7",
														"type": ""
													}
												],
												"src": "3657:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4033:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4043:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4109:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4050:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nodeType": "YulIdentifier",
																	"src": "4126:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4228:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4239:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4021:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4029:3:7",
														"type": ""
													}
												],
												"src": "3887:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4498:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4483:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4506:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4502:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4476:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4532:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4540:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4532:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4410:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4425:4:7",
														"type": ""
													}
												],
												"src": "4259:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4790:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4812:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4824:34:7",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4880:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4888:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:15:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4893:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4869:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4782:6:7",
														"type": ""
													}
												],
												"src": "4684:223:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5059:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5069:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5076:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5241:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nodeType": "YulIdentifier",
																	"src": "5152:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5152:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5254:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5261:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5047:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5055:3:7",
														"type": ""
													}
												],
												"src": "4913:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5466:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5532:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5528:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5502:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5558:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5692:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5566:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5436:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5451:4:7",
														"type": ""
													}
												],
												"src": "5285:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$117(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$117(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$117(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$117_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$117(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$117_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$117_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200155c3803806200155c8339818101604052810190620000379190620002f9565b60016000819055506000831162000085576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007c90620003b6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ee906200044e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000169576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016090620004e6565b60405180910390fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000508565b600080fd5b6000819050919050565b620002158162000200565b81146200022157600080fd5b50565b60008151905062000235816200020a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000268826200023b565b9050919050565b6200027a816200025b565b81146200028657600080fd5b50565b6000815190506200029a816200026f565b92915050565b6000620002ad826200023b565b9050919050565b6000620002c182620002a0565b9050919050565b620002d381620002b4565b8114620002df57600080fd5b50565b600081519050620002f381620002c8565b92915050565b600080600060608486031215620003155762000314620001fb565b5b6000620003258682870162000224565b9350506020620003388682870162000289565b92505060406200034b86828701620002e2565b9150509250925092565b600082825260208201905092915050565b7f43726f776473616c653a20726174652069732030000000000000000000000000600082015250565b60006200039e60148362000355565b9150620003ab8262000366565b602082019050919050565b60006020820190508181036000830152620003d1816200038f565b9050919050565b7f43726f776473616c653a2077616c6c657420697320746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006200043660258362000355565b91506200044382620003d8565b604082019050919050565b60006020820190508181036000830152620004698162000427565b9050919050565b7f43726f776473616c653a20746f6b656e20697320746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000620004ce60248362000355565b9150620004db8262000470565b604082019050919050565b600060208201905081810360008301526200050181620004bf565b9050919050565b61104480620005186000396000f3fe60806040526004361061008a5760003560e01c806383bebced1161005957806383bebced1461015257806394a5aa8d1461017d578063ec8ac4d8146101a8578063ecd0c0c3146101c4578063fc0c546a146101ef576100a1565b80632c4e722e146100a65780634042b66f146100d1578063521eb273146100fc578063610757e414610127576100a1565b366100a15761009f61009a61021a565b610222565b005b600080fd5b3480156100b257600080fd5b506100bb610347565b6040516100c891906108f5565b60405180910390f35b3480156100dd57600080fd5b506100e6610351565b6040516100f391906108f5565b60405180910390f35b34801561010857600080fd5b5061011161035b565b60405161011e9190610951565b60405180910390f35b34801561013357600080fd5b5061013c610385565b6040516101499190610951565b60405180910390f35b34801561015e57600080fd5b506101676103ab565b60405161017491906108f5565b60405180910390f35b34801561018957600080fd5b506101926103b1565b60405161019f91906108f5565b60405180910390f35b6101c260048036038101906101bd91906109af565b610222565b005b3480156101d057600080fd5b506101d96103b7565b6040516101e69190610a3b565b60405180910390f35b3480156101fb57600080fd5b506102046103dd565b6040516102119190610a3b565b60405180910390f35b600033905090565b600260005403610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610ab3565b60405180910390fd5b6002600081905550600034905061027e8282610407565b6000610289826104bd565b90506102a0826004546104db90919063ffffffff16565b6004819055506102b083826104f1565b8273ffffffffffffffffffffffffffffffffffffffff166102cf61021a565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051610316929190610ad3565b60405180910390a361032883836104ff565b610330610503565b61033a838361056e565b5050600160008190555050565b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d90610b6e565b60405180910390fd5b600081036104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610bda565b60405180910390fd5b5050565b60006104d46003548361057290919063ffffffff16565b9050919050565b600081836104e99190610c29565b905092915050565b6104fb8282610588565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561056b573d6000803e3d6000fd5b50565b5050565b600081836105809190610c7f565b905092915050565b6105d58282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105d99092919063ffffffff16565b5050565b61065a8363a9059cbb60e01b84846040516024016105f8929190610ce8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061065f565b505050565b60006106c1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107269092919063ffffffff16565b905060008151111561072157808060200190518101906106e19190610d49565b610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790610de8565b60405180910390fd5b5b505050565b6060610735848460008561073e565b90509392505050565b606082471015610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90610e7a565b60405180910390fd5b61078c85610852565b6107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290610ee6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516107f49190610f80565b60006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b5091509150610846828286610875565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610885578290506108d5565b6000835111156108985782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cc9190610fec565b60405180910390fd5b9392505050565b6000819050919050565b6108ef816108dc565b82525050565b600060208201905061090a60008301846108e6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061093b82610910565b9050919050565b61094b81610930565b82525050565b60006020820190506109666000830184610942565b92915050565b600080fd5b600061097c82610910565b9050919050565b61098c81610971565b811461099757600080fd5b50565b6000813590506109a981610983565b92915050565b6000602082840312156109c5576109c461096c565b5b60006109d38482850161099a565b91505092915050565b6000819050919050565b6000610a016109fc6109f784610910565b6109dc565b610910565b9050919050565b6000610a13826109e6565b9050919050565b6000610a2582610a08565b9050919050565b610a3581610a1a565b82525050565b6000602082019050610a506000830184610a2c565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610a9d601f83610a56565b9150610aa882610a67565b602082019050919050565b60006020820190508181036000830152610acc81610a90565b9050919050565b6000604082019050610ae860008301856108e6565b610af560208301846108e6565b9392505050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000610b58602a83610a56565b9150610b6382610afc565b604082019050919050565b60006020820190508181036000830152610b8781610b4b565b9050919050565b7f43726f776473616c653a20776569416d6f756e74206973203000000000000000600082015250565b6000610bc4601983610a56565b9150610bcf82610b8e565b602082019050919050565b60006020820190508181036000830152610bf381610bb7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c34826108dc565b9150610c3f836108dc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7457610c73610bfa565b5b828201905092915050565b6000610c8a826108dc565b9150610c95836108dc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cce57610ccd610bfa565b5b828202905092915050565b610ce281610971565b82525050565b6000604082019050610cfd6000830185610cd9565b610d0a60208301846108e6565b9392505050565b60008115159050919050565b610d2681610d11565b8114610d3157600080fd5b50565b600081519050610d4381610d1d565b92915050565b600060208284031215610d5f57610d5e61096c565b5b6000610d6d84828501610d34565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610dd2602a83610a56565b9150610ddd82610d76565b604082019050919050565b60006020820190508181036000830152610e0181610dc5565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610e64602683610a56565b9150610e6f82610e08565b604082019050919050565b60006020820190508181036000830152610e9381610e57565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610ed0601d83610a56565b9150610edb82610e9a565b602082019050919050565b60006020820190508181036000830152610eff81610ec3565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610f3a578082015181840152602081019050610f1f565b83811115610f49576000848401525b50505050565b6000610f5a82610f06565b610f648185610f11565b9350610f74818560208601610f1c565b80840191505092915050565b6000610f8c8284610f4f565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000610fbe82610f97565b610fc88185610a56565b9350610fd8818560208601610f1c565b610fe181610fa2565b840191505092915050565b600060208201905081810360008301526110068184610fb3565b90509291505056fea2646970667358221220c8161e6139f96bb9097f46fc165d808acc8cb49bd35ee0923db1060b9db53d2364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x155C CODESIZE SUB DUP1 PUSH3 0x155C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEE SWAP1 PUSH3 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x160 SWAP1 PUSH3 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x508 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x215 DUP2 PUSH3 0x200 JUMP JUMPDEST DUP2 EQ PUSH3 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x235 DUP2 PUSH3 0x20A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x268 DUP3 PUSH3 0x23B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x27A DUP2 PUSH3 0x25B JUMP JUMPDEST DUP2 EQ PUSH3 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x29A DUP2 PUSH3 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AD DUP3 PUSH3 0x23B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C1 DUP3 PUSH3 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D3 DUP2 PUSH3 0x2B4 JUMP JUMPDEST DUP2 EQ PUSH3 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F3 DUP2 PUSH3 0x2C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x315 JUMPI PUSH3 0x314 PUSH3 0x1FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x325 DUP7 DUP3 DUP8 ADD PUSH3 0x224 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x338 DUP7 DUP3 DUP8 ADD PUSH3 0x289 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x34B DUP7 DUP3 DUP8 ADD PUSH3 0x2E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x39E PUSH1 0x14 DUP4 PUSH3 0x355 JUMP JUMPDEST SWAP2 POP PUSH3 0x3AB DUP3 PUSH3 0x366 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x3D1 DUP2 PUSH3 0x38F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x436 PUSH1 0x25 DUP4 PUSH3 0x355 JUMP JUMPDEST SWAP2 POP PUSH3 0x443 DUP3 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x469 DUP2 PUSH3 0x427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CE PUSH1 0x24 DUP4 PUSH3 0x355 JUMP JUMPDEST SWAP2 POP PUSH3 0x4DB DUP3 PUSH3 0x470 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x501 DUP2 PUSH3 0x4BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1044 DUP1 PUSH3 0x518 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83BEBCED GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x83BEBCED EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x94A5AA8D EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xECD0C0C3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1EF JUMPI PUSH2 0xA1 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x610757E4 EQ PUSH2 0x127 JUMPI PUSH2 0xA1 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA1 JUMPI PUSH2 0x9F PUSH2 0x9A PUSH2 0x21A JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x27E DUP3 DUP3 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289 DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP PUSH2 0x2A0 DUP3 PUSH1 0x4 SLOAD PUSH2 0x4DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x2B0 DUP4 DUP3 PUSH2 0x4F1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CF PUSH2 0x21A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP3 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x328 DUP4 DUP4 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x330 PUSH2 0x503 JUMP JUMPDEST PUSH2 0x33A DUP4 DUP4 PUSH2 0x56E JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4 PUSH1 0x3 SLOAD DUP4 PUSH2 0x572 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FB DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D5 DUP3 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5F8 SWAP3 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x65F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x726 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x721 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x717 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x735 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x73E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C DUP6 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7F4 SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x836 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x846 DUP3 DUP3 DUP7 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x885 JUMPI DUP3 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x898 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EF DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x90A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP3 PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94B DUP2 PUSH2 0x930 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x966 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x942 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP3 PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x971 JUMP JUMPDEST DUP2 EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A9 DUP2 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x9C4 PUSH2 0x96C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D3 DUP5 DUP3 DUP6 ADD PUSH2 0x99A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA01 PUSH2 0x9FC PUSH2 0x9F7 DUP5 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA13 DUP3 PUSH2 0x9E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA25 DUP3 PUSH2 0xA08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9D PUSH1 0x1F DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA8 DUP3 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACC DUP2 PUSH2 0xA90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB58 PUSH1 0x2A DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xB63 DUP3 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB87 DUP2 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 PUSH1 0x19 DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCF DUP3 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBF3 DUP2 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC34 DUP3 PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP PUSH2 0xC3F DUP4 PUSH2 0x8DC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC73 PUSH2 0xBFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8A DUP3 PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP PUSH2 0xC95 DUP4 PUSH2 0x8DC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0xBFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0x971 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0xD0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD26 DUP2 PUSH2 0xD11 JUMP JUMPDEST DUP2 EQ PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD43 DUP2 PUSH2 0xD1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0x96C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6D DUP5 DUP3 DUP6 ADD PUSH2 0xD34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD2 PUSH1 0x2A DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDD DUP3 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE01 DUP2 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE64 PUSH1 0x26 DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6F DUP3 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE93 DUP2 PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED0 PUSH1 0x1D DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDB DUP3 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEFF DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5A DUP3 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0xF64 DUP2 DUP6 PUSH2 0xF11 JUMP JUMPDEST SWAP4 POP PUSH2 0xF74 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8C DUP3 DUP5 PUSH2 0xF4F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBE DUP3 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0xFC8 DUP2 DUP6 PUSH2 0xA56 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0xFA2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1006 DUP2 DUP5 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 AND 0x1E PUSH2 0x39F9 PUSH12 0xB9097F46FC165D808ACC8CB4 SWAP12 0xD3 0x5E 0xE0 SWAP3 RETURNDATASIZE 0xB1 MOD SIGNEXTEND SWAP14 0xB5 RETURNDATASIZE 0x23 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "1071:6959:6:-:0;;;2529:380;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;2624:1:6;2616:5;:9;2608:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2688:1;2669:21;;:7;:21;;;2661:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2778:1;2751:29;;2759:6;2751:29;;;2743:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:5;2834;:13;;;;2868:7;2858;;:17;;;;;;;;;;;;;;;;;;2895:6;2886;;:15;;;;;;;;;;;;;;;;;;2529:380;;;1071:6959;;88:117:7;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:707::-;1906:6;1914;1922;1971:2;1959:9;1950:7;1946:23;1942:32;1939:119;;;1977:79;;:::i;:::-;1939:119;2097:1;2122:64;2178:7;2169:6;2158:9;2154:22;2122:64;:::i;:::-;2112:74;;2068:128;2235:2;2261:72;2325:7;2316:6;2305:9;2301:22;2261:72;:::i;:::-;2251:82;;2206:137;2382:2;2408:78;2478:7;2469:6;2458:9;2454:22;2408:78;:::i;:::-;2398:88;;2353:143;1796:707;;;;;:::o;2509:169::-;2593:11;2627:6;2622:3;2615:19;2667:4;2662:3;2658:14;2643:29;;2509:169;;;;:::o;2684:170::-;2824:22;2820:1;2812:6;2808:14;2801:46;2684:170;:::o;2860:366::-;3002:3;3023:67;3087:2;3082:3;3023:67;:::i;:::-;3016:74;;3099:93;3188:3;3099:93;:::i;:::-;3217:2;3212:3;3208:12;3201:19;;2860:366;;;:::o;3232:419::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3485:9;3479:4;3475:20;3471:1;3460:9;3456:17;3449:47;3513:131;3639:4;3513:131;:::i;:::-;3505:139;;3232:419;;;:::o;3657:224::-;3797:34;3793:1;3785:6;3781:14;3774:58;3866:7;3861:2;3853:6;3849:15;3842:32;3657:224;:::o;3887:366::-;4029:3;4050:67;4114:2;4109:3;4050:67;:::i;:::-;4043:74;;4126:93;4215:3;4126:93;:::i;:::-;4244:2;4239:3;4235:12;4228:19;;3887:366;;;:::o;4259:419::-;4425:4;4463:2;4452:9;4448:18;4440:26;;4512:9;4506:4;4502:20;4498:1;4487:9;4483:17;4476:47;4540:131;4666:4;4540:131;:::i;:::-;4532:139;;4259:419;;;:::o;4684:223::-;4824:34;4820:1;4812:6;4808:14;4801:58;4893:6;4888:2;4880:6;4876:15;4869:31;4684:223;:::o;4913:366::-;5055:3;5076:67;5140:2;5135:3;5076:67;:::i;:::-;5069:74;;5152:93;5241:3;5152:93;:::i;:::-;5270:2;5265:3;5261:12;5254:19;;4913:366;;;:::o;5285:419::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5538:9;5532:4;5528:20;5524:1;5513:9;5509:17;5502:47;5566:131;5692:4;5566:131;:::i;:::-;5558:139;;5285:419;;;:::o;1071:6959:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_340": {
									"entryPoint": 1631,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deliverTokens_1223": {
									"entryPoint": 1416,
									"id": 1223,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_1272": {
									"entryPoint": 1283,
									"id": 1272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_1260": {
									"entryPoint": 1213,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_648": {
									"entryPoint": 538,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_postValidatePurchase_1207": {
									"entryPoint": 1390,
									"id": 1207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1196": {
									"entryPoint": 1031,
									"id": 1196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_1237": {
									"entryPoint": 1265,
									"id": 1237,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_rate_996": {
									"entryPoint": 939,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_token_992": {
									"entryPoint": 951,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_updatePurchasingState_1246": {
									"entryPoint": 1279,
									"id": 1246,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_wallet_994": {
									"entryPoint": 901,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_weiRaised_998": {
									"entryPoint": 945,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_834": {
									"entryPoint": 1243,
									"id": 834,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_1168": {
									"entryPoint": 546,
									"id": 1168,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_500": {
									"entryPoint": 1854,
									"id": 500,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_430": {
									"entryPoint": 1830,
									"id": 430,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_359": {
									"entryPoint": 2130,
									"id": 359,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_864": {
									"entryPoint": 1394,
									"id": 864,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rate_1101": {
									"entryPoint": 839,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_148": {
									"entryPoint": 1497,
									"id": 148,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_1083": {
									"entryPoint": 989,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResult_635": {
									"entryPoint": 2165,
									"id": 635,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@wallet_1092": {
									"entryPoint": 859,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_1110": {
									"entryPoint": 849,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3304,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13741:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:7",
														"type": ""
													}
												],
												"src": "442:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "609:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "619:7:7",
														"type": ""
													}
												],
												"src": "574:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "782:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "813:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "787:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:45:7"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "760:3:7",
														"type": ""
													}
												],
												"src": "684:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:140:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "968:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "979:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "956:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1052:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1065:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1076:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "992:59:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:87:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "992:87:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "918:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "930:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "941:4:7",
														"type": ""
													}
												],
												"src": "832:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1132:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1142:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1152:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1142:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1125:6:7",
														"type": ""
													}
												],
												"src": "1092:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1173:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1402:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1296:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1464:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1474:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1503:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1485:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1485:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1474:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1446:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1456:7:7",
														"type": ""
													}
												],
												"src": "1419:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1564:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1621:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1630:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1633:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1623:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1623:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1623:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1587:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1612:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1594:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1594:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1584:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1584:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:43:7"
															},
															"nodeType": "YulIf",
															"src": "1574:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1557:5:7",
														"type": ""
													}
												],
												"src": "1521:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1733:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1720:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1711:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1776:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1749:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1749:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1679:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1687:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1695:5:7",
														"type": ""
													}
												],
												"src": "1649:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1906:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1908:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1908:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1908:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1890:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1873:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:32:7"
															},
															"nodeType": "YulIf",
															"src": "1870:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1999:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2014:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2028:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2018:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2043:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2078:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2089:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2074:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2074:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2098:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2053:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2043:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1830:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1841:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1853:6:7",
														"type": ""
													}
												],
												"src": "1794:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2161:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2171:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2178:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2147:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2157:3:7",
														"type": ""
													}
												],
												"src": "2129:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2255:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2265:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2323:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2305:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2305:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2296:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2278:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2265:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2235:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2245:9:7",
														"type": ""
													}
												],
												"src": "2195:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2403:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2413:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2457:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2426:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2413:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2383:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2393:9:7",
														"type": ""
													}
												],
												"src": "2343:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2549:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2559:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2603:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2572:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2559:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2529:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2539:9:7",
														"type": ""
													}
												],
												"src": "2475:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2700:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2717:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2767:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2722:44:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2722:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:64:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2710:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2688:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2695:3:7",
														"type": ""
													}
												],
												"src": "2621:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2898:138:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2908:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2920:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2931:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2908:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3002:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2944:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:85:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2944:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2870:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2882:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2893:4:7",
														"type": ""
													}
												],
												"src": "2786:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3138:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3155:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3160:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3148:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3176:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3195:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3200:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3176:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3110:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3126:11:7",
														"type": ""
													}
												],
												"src": "3042:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3323:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3345:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3353:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3341:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3341:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3357:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3334:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3315:6:7",
														"type": ""
													}
												],
												"src": "3217:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3550:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3560:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3626:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3567:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3567:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3732:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "3643:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3745:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3761:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3752:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3745:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3538:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3546:3:7",
														"type": ""
													}
												],
												"src": "3404:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3947:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3957:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3969:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3980:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3965:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3957:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4023:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4029:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4049:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4183:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4057:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4049:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3927:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3942:4:7",
														"type": ""
													}
												],
												"src": "3776:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4327:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4337:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4349:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4360:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4345:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4345:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4337:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4430:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4441:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4426:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4373:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4373:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4498:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4511:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4522:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4454:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4454:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4291:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4303:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4311:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4322:4:7",
														"type": ""
													}
												],
												"src": "4201:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4645:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4667:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4679:34:7",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4656:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4656:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4735:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4731:15:7"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:12:7",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4637:6:7",
														"type": ""
													}
												],
												"src": "4539:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4920:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4930:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4996:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5001:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4937:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5102:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nodeType": "YulIdentifier",
																	"src": "5013:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5115:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5126:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5131:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5115:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4908:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4916:3:7",
														"type": ""
													}
												],
												"src": "4774:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5317:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5327:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5339:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5350:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5335:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5327:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5385:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5370:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5393:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5399:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5389:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5419:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5553:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5427:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5419:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5297:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5312:4:7",
														"type": ""
													}
												],
												"src": "5146:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5677:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5699:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5707:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5695:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5695:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5711:27:7",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5688:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5688:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5669:6:7",
														"type": ""
													}
												],
												"src": "5571:175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5898:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5908:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5974:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5979:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5915:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6080:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nodeType": "YulIdentifier",
																	"src": "5991:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5991:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6093:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6104:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6109:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6100:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6093:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5886:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5894:3:7",
														"type": ""
													}
												],
												"src": "5752:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6295:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6305:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6317:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6328:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6313:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6313:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6305:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6352:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6363:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6371:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6377:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6367:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6341:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6397:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6531:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6405:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6397:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6275:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6290:4:7",
														"type": ""
													}
												],
												"src": "6124:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6577:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6594:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6587:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6691:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6694:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6684:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6684:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6684:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6718:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6549:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6794:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6846:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6828:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6823:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6986:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6988:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6988:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6988:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6907:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6914:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6982:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6910:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6910:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6904:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6904:81:7"
															},
															"nodeType": "YulIf",
															"src": "6901:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7018:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7029:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7032:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7025:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7018:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6766:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6769:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6775:3:7",
														"type": ""
													}
												],
												"src": "6735:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7094:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7104:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7127:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7109:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7109:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7104:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7138:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7161:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7143:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7138:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7336:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7338:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7338:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7338:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7248:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7241:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7241:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7234:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7234:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7256:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7263:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7331:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7259:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7259:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7253:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7253:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7230:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:105:7"
															},
															"nodeType": "YulIf",
															"src": "7227:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7368:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7383:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7386:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7379:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7379:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7368:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7077:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7080:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7086:7:7",
														"type": ""
													}
												],
												"src": "7046:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7465:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7482:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7505:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7487:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7475:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7475:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7475:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7453:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7460:3:7",
														"type": ""
													}
												],
												"src": "7400:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7650:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7660:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7672:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7683:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7668:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7668:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7660:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7740:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7753:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7764:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7749:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7749:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7696:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7821:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7834:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7845:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7830:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7830:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7777:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7777:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7777:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7614:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7626:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7634:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7645:4:7",
														"type": ""
													}
												],
												"src": "7524:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7904:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7914:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7939:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7932:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7932:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7925:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7914:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7886:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7896:7:7",
														"type": ""
													}
												],
												"src": "7862:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7998:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8052:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8061:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8064:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8054:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8054:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8054:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8021:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8043:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8028:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8028:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8018:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8018:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8011:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8011:40:7"
															},
															"nodeType": "YulIf",
															"src": "8008:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7991:5:7",
														"type": ""
													}
												],
												"src": "7958:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8140:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8150:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8165:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8159:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8159:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8150:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8205:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8181:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8181:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8181:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8118:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8126:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8134:5:7",
														"type": ""
													}
												],
												"src": "8080:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8297:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8343:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8345:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8345:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8345:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8318:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8314:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8314:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8339:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:32:7"
															},
															"nodeType": "YulIf",
															"src": "8307:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "8436:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8451:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8465:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8455:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8480:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8523:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8534:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8519:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8519:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8543:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8490:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8490:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8480:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8267:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8278:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8290:6:7",
														"type": ""
													}
												],
												"src": "8223:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8702:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8710:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8698:14:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8714:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8691:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8778:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8766:15:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8783:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8759:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8759:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8759:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8672:6:7",
														"type": ""
													}
												],
												"src": "8574:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8955:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8965:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9031:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9036:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8972:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8972:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8965:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9137:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "9048:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9048:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9150:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9161:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9166:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9157:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9150:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8943:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8951:3:7",
														"type": ""
													}
												],
												"src": "8809:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9352:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9362:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9374:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9385:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9370:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9370:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9362:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9409:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9420:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9405:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9428:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9434:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9424:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9398:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9398:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9454:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9588:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9462:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9462:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9454:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9332:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9347:4:7",
														"type": ""
													}
												],
												"src": "9181:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9712:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9734:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9742:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9730:14:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9746:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9723:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9723:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9802:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9810:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9798:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9798:15:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9815:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9791:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9791:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9791:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9704:6:7",
														"type": ""
													}
												],
												"src": "9606:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9983:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9993:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10059:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10064:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10000:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10000:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10165:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "10076:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10076:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10178:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10189:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10194:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10185:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10185:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10178:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9971:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9979:3:7",
														"type": ""
													}
												],
												"src": "9837:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10380:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10390:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10402:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10413:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10398:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10398:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10390:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10437:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10448:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10433:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10433:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10456:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10452:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10426:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10426:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10426:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10482:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10616:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10490:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10490:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10482:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10360:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10375:4:7",
														"type": ""
													}
												],
												"src": "10209:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10740:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10762:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10770:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:14:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10774:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10751:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10732:6:7",
														"type": ""
													}
												],
												"src": "10634:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10965:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10975:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11041:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11046:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10982:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10982:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10975:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11147:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "11058:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11058:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11160:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11171:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11176:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11167:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11167:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11160:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10953:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10961:3:7",
														"type": ""
													}
												],
												"src": "10819:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11362:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11372:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11384:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11395:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11380:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11380:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11372:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11419:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11415:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11415:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11438:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11444:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11434:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11434:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11408:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11408:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11408:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11464:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11598:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11472:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11472:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11464:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11342:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11357:4:7",
														"type": ""
													}
												],
												"src": "11191:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11674:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11685:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11701:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11695:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11695:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11685:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11657:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11667:6:7",
														"type": ""
													}
												],
												"src": "11616:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11833:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11843:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11858:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11843:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11805:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11810:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11821:11:7",
														"type": ""
													}
												],
												"src": "11720:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11922:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11932:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11941:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11936:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12001:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12026:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12031:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12022:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12022:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12045:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12050:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12041:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12041:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12035:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12035:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12015:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12015:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12015:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11962:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11965:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11959:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11959:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11973:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11975:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11984:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11987:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11980:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11980:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11975:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11955:3:7",
																"statements": []
															},
															"src": "11951:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12098:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12148:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12153:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12144:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12144:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12162:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12137:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12137:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12137:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12079:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12082:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12076:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:13:7"
															},
															"nodeType": "YulIf",
															"src": "12073:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11904:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11909:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11914:6:7",
														"type": ""
													}
												],
												"src": "11873:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12294:265:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12304:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12350:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12318:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12318:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12308:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12365:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12448:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12453:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12372:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12372:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12365:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12495:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12502:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12491:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12491:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12509:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12514:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12469:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12469:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12469:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12530:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12541:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12546:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12530:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12275:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12282:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12290:3:7",
														"type": ""
													}
												],
												"src": "12186:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12699:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12710:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12797:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12806:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12717:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12717:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12710:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12820:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12827:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12820:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12678:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12684:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12695:3:7",
														"type": ""
													}
												],
												"src": "12565:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12901:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12912:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12928:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12922:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12922:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12912:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12884:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12894:6:7",
														"type": ""
													}
												],
												"src": "12842:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12995:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13005:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13023:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13030:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13019:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13039:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13035:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13035:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13015:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13015:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13005:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12978:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12988:6:7",
														"type": ""
													}
												],
												"src": "12947:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13147:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13157:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13204:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13171:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13171:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13161:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13219:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13285:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13290:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13226:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13226:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13219:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13332:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13339:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13328:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13328:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13346:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13351:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13306:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13306:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13306:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13367:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13378:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13405:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13383:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13383:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13374:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13374:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13367:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13128:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13135:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13143:3:7",
														"type": ""
													}
												],
												"src": "13055:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13543:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13553:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13561:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13561:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13553:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13600:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13611:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13596:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13596:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13619:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13625:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13615:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13615:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13589:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13589:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13645:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13717:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13726:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13653:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13653:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13645:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13515:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13527:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13538:4:7",
														"type": ""
													}
												],
												"src": "13425:313:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83BEBCED GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x83BEBCED EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x94A5AA8D EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xECD0C0C3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1EF JUMPI PUSH2 0xA1 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x610757E4 EQ PUSH2 0x127 JUMPI PUSH2 0xA1 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA1 JUMPI PUSH2 0x9F PUSH2 0x9A PUSH2 0x21A JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x27E DUP3 DUP3 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289 DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP PUSH2 0x2A0 DUP3 PUSH1 0x4 SLOAD PUSH2 0x4DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x2B0 DUP4 DUP3 PUSH2 0x4F1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CF PUSH2 0x21A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP3 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x328 DUP4 DUP4 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x330 PUSH2 0x503 JUMP JUMPDEST PUSH2 0x33A DUP4 DUP4 PUSH2 0x56E JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4 PUSH1 0x3 SLOAD DUP4 PUSH2 0x572 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FB DUP3 DUP3 PUSH2 0x588 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x56B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D5 DUP3 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5F8 SWAP3 SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x65F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x726 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x721 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x717 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x735 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x73E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C DUP6 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7F4 SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x836 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x846 DUP3 DUP3 DUP7 PUSH2 0x875 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x885 JUMPI DUP3 SWAP1 POP PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x898 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EF DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x90A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP3 PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94B DUP2 PUSH2 0x930 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x966 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x942 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP3 PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x971 JUMP JUMPDEST DUP2 EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A9 DUP2 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x9C4 PUSH2 0x96C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D3 DUP5 DUP3 DUP6 ADD PUSH2 0x99A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA01 PUSH2 0x9FC PUSH2 0x9F7 DUP5 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA13 DUP3 PUSH2 0x9E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA25 DUP3 PUSH2 0xA08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xA1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9D PUSH1 0x1F DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA8 DUP3 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACC DUP2 PUSH2 0xA90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB58 PUSH1 0x2A DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xB63 DUP3 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB87 DUP2 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 PUSH1 0x19 DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCF DUP3 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBF3 DUP2 PUSH2 0xBB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC34 DUP3 PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP PUSH2 0xC3F DUP4 PUSH2 0x8DC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xC74 JUMPI PUSH2 0xC73 PUSH2 0xBFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8A DUP3 PUSH2 0x8DC JUMP JUMPDEST SWAP2 POP PUSH2 0xC95 DUP4 PUSH2 0x8DC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0xBFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0x971 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0xD0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD26 DUP2 PUSH2 0xD11 JUMP JUMPDEST DUP2 EQ PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD43 DUP2 PUSH2 0xD1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5E PUSH2 0x96C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6D DUP5 DUP3 DUP6 ADD PUSH2 0xD34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD2 PUSH1 0x2A DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDD DUP3 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE01 DUP2 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE64 PUSH1 0x26 DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6F DUP3 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE93 DUP2 PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED0 PUSH1 0x1D DUP4 PUSH2 0xA56 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDB DUP3 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEFF DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5A DUP3 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0xF64 DUP2 DUP6 PUSH2 0xF11 JUMP JUMPDEST SWAP4 POP PUSH2 0xF74 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8C DUP3 DUP5 PUSH2 0xF4F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBE DUP3 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0xFC8 DUP2 DUP6 PUSH2 0xA56 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0xFA2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1006 DUP2 DUP5 PUSH2 0xFB3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 AND 0x1E PUSH2 0x39F9 PUSH12 0xB9097F46FC165D808ACC8CB4 SWAP12 0xD3 0x5E 0xE0 SWAP3 RETURNDATASIZE 0xB1 MOD SIGNEXTEND SWAP14 0xB5 RETURNDATASIZE 0x23 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "1071:6959:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3245:23;3255:12;:10;:12::i;:::-;3245:9;:23::i;:::-;1071:6959;;;;;3678:77;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3499:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1293:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1620:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1678:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4175:622;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1222:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3340:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:96:4;693:7;719:10;712:17;;640:96;:::o;4175:622:6:-;1744:1:0;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4254:17:6::1;4274:9;4254:29;;4294:44;4315:11;4328:9;4294:20;:44::i;:::-;4400:14;4417:26;4433:9;4417:15;:26::i;:::-;4400:43;;4494:25;4509:9;4494:10;;:14;;:25;;;;:::i;:::-;4481:10;:38;;;;4532:37;4549:11;4562:6;4532:16;:37::i;:::-;4615:11;4585:61;;4601:12;:10;:12::i;:::-;4585:61;;;4628:9;4639:6;4585:61;;;;;;;:::i;:::-;;;;;;;;4659:46;4682:11;4695:9;4659:22;:46::i;:::-;4718:15;:13;:15::i;:::-;4744:45;4766:11;4779:9;4744:21;:45::i;:::-;4243:554;;1701:1:0::0;2628:7;:22;;;;4175:622:6;:::o;3678:77::-;3715:7;3742:5;;3735:12;;3678:77;:::o;3823:87::-;3865:7;3892:10;;3885:17;;3823:87;:::o;3499:89::-;3538:15;3573:7;;;;;;;;;;;3566:14;;3499:89;:::o;1293:30::-;;;;;;;;;;;;;:::o;1620:20::-;;;;:::o;1678:25::-;;;;:::o;1222:20::-;;;;;;;;;;;;;:::o;3340:78::-;3378:6;3404;;;;;;;;;;;3397:13;;3340:78;:::o;5350:388::-;5484:1;5461:25;;:11;:25;;;5453:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5565:1;5552:9;:14;5544:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5350:388;;:::o;7733:122::-;7800:7;7827:20;7841:5;;7827:9;:13;;:20;;;;:::i;:::-;7820:27;;7733:122;;;:::o;2755:96:5:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;6916:136:6:-;7004:40;7019:11;7032;7004:14;:40::i;:::-;6916:136;;:::o;7330:147::-;;;:::o;7947:80::-;7992:7;;;;;;;;;;;:16;;:27;8009:9;7992:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7947:80::o;6041:166::-;;;:::o;3465:96:5:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6495:147:6:-;6589:45;6609:11;6622;6589:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6495:147;;:::o;701:205:2:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3861:223:3:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:142::-;787:32;813:5;787:32;:::i;:::-;782:3;775:45;684:142;;:::o;832:254::-;941:4;979:2;968:9;964:18;956:26;;992:87;1076:1;1065:9;1061:17;1052:6;992:87;:::i;:::-;832:254;;;;:::o;1173:117::-;1282:1;1279;1272:12;1419:96;1456:7;1485:24;1503:5;1485:24;:::i;:::-;1474:35;;1419:96;;;:::o;1521:122::-;1594:24;1612:5;1594:24;:::i;:::-;1587:5;1584:35;1574:63;;1633:1;1630;1623:12;1574:63;1521:122;:::o;1649:139::-;1695:5;1733:6;1720:20;1711:29;;1749:33;1776:5;1749:33;:::i;:::-;1649:139;;;;:::o;1794:329::-;1853:6;1902:2;1890:9;1881:7;1877:23;1873:32;1870:119;;;1908:79;;:::i;:::-;1870:119;2028:1;2053:53;2098:7;2089:6;2078:9;2074:22;2053:53;:::i;:::-;2043:63;;1999:117;1794:329;;;;:::o;2129:60::-;2157:3;2178:5;2171:12;;2129:60;;;:::o;2195:142::-;2245:9;2278:53;2296:34;2305:24;2323:5;2305:24;:::i;:::-;2296:34;:::i;:::-;2278:53;:::i;:::-;2265:66;;2195:142;;;:::o;2343:126::-;2393:9;2426:37;2457:5;2426:37;:::i;:::-;2413:50;;2343:126;;;:::o;2475:140::-;2539:9;2572:37;2603:5;2572:37;:::i;:::-;2559:50;;2475:140;;;:::o;2621:159::-;2722:51;2767:5;2722:51;:::i;:::-;2717:3;2710:64;2621:159;;:::o;2786:250::-;2893:4;2931:2;2920:9;2916:18;2908:26;;2944:85;3026:1;3015:9;3011:17;3002:6;2944:85;:::i;:::-;2786:250;;;;:::o;3042:169::-;3126:11;3160:6;3155:3;3148:19;3200:4;3195:3;3191:14;3176:29;;3042:169;;;;:::o;3217:181::-;3357:33;3353:1;3345:6;3341:14;3334:57;3217:181;:::o;3404:366::-;3546:3;3567:67;3631:2;3626:3;3567:67;:::i;:::-;3560:74;;3643:93;3732:3;3643:93;:::i;:::-;3761:2;3756:3;3752:12;3745:19;;3404:366;;;:::o;3776:419::-;3942:4;3980:2;3969:9;3965:18;3957:26;;4029:9;4023:4;4019:20;4015:1;4004:9;4000:17;3993:47;4057:131;4183:4;4057:131;:::i;:::-;4049:139;;3776:419;;;:::o;4201:332::-;4322:4;4360:2;4349:9;4345:18;4337:26;;4373:71;4441:1;4430:9;4426:17;4417:6;4373:71;:::i;:::-;4454:72;4522:2;4511:9;4507:18;4498:6;4454:72;:::i;:::-;4201:332;;;;;:::o;4539:229::-;4679:34;4675:1;4667:6;4663:14;4656:58;4748:12;4743:2;4735:6;4731:15;4724:37;4539:229;:::o;4774:366::-;4916:3;4937:67;5001:2;4996:3;4937:67;:::i;:::-;4930:74;;5013:93;5102:3;5013:93;:::i;:::-;5131:2;5126:3;5122:12;5115:19;;4774:366;;;:::o;5146:419::-;5312:4;5350:2;5339:9;5335:18;5327:26;;5399:9;5393:4;5389:20;5385:1;5374:9;5370:17;5363:47;5427:131;5553:4;5427:131;:::i;:::-;5419:139;;5146:419;;;:::o;5571:175::-;5711:27;5707:1;5699:6;5695:14;5688:51;5571:175;:::o;5752:366::-;5894:3;5915:67;5979:2;5974:3;5915:67;:::i;:::-;5908:74;;5991:93;6080:3;5991:93;:::i;:::-;6109:2;6104:3;6100:12;6093:19;;5752:366;;;:::o;6124:419::-;6290:4;6328:2;6317:9;6313:18;6305:26;;6377:9;6371:4;6367:20;6363:1;6352:9;6348:17;6341:47;6405:131;6531:4;6405:131;:::i;:::-;6397:139;;6124:419;;;:::o;6549:180::-;6597:77;6594:1;6587:88;6694:4;6691:1;6684:15;6718:4;6715:1;6708:15;6735:305;6775:3;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6828:20;6846:1;6828:20;:::i;:::-;6823:25;;6982:1;6914:66;6910:74;6907:1;6904:81;6901:107;;;6988:18;;:::i;:::-;6901:107;7032:1;7029;7025:9;7018:16;;6735:305;;;;:::o;7046:348::-;7086:7;7109:20;7127:1;7109:20;:::i;:::-;7104:25;;7143:20;7161:1;7143:20;:::i;:::-;7138:25;;7331:1;7263:66;7259:74;7256:1;7253:81;7248:1;7241:9;7234:17;7230:105;7227:131;;;7338:18;;:::i;:::-;7227:131;7386:1;7383;7379:9;7368:20;;7046:348;;;;:::o;7400:118::-;7487:24;7505:5;7487:24;:::i;:::-;7482:3;7475:37;7400:118;;:::o;7524:332::-;7645:4;7683:2;7672:9;7668:18;7660:26;;7696:71;7764:1;7753:9;7749:17;7740:6;7696:71;:::i;:::-;7777:72;7845:2;7834:9;7830:18;7821:6;7777:72;:::i;:::-;7524:332;;;;;:::o;7862:90::-;7896:7;7939:5;7932:13;7925:21;7914:32;;7862:90;;;:::o;7958:116::-;8028:21;8043:5;8028:21;:::i;:::-;8021:5;8018:32;8008:60;;8064:1;8061;8054:12;8008:60;7958:116;:::o;8080:137::-;8134:5;8165:6;8159:13;8150:22;;8181:30;8205:5;8181:30;:::i;:::-;8080:137;;;;:::o;8223:345::-;8290:6;8339:2;8327:9;8318:7;8314:23;8310:32;8307:119;;;8345:79;;:::i;:::-;8307:119;8465:1;8490:61;8543:7;8534:6;8523:9;8519:22;8490:61;:::i;:::-;8480:71;;8436:125;8223:345;;;;:::o;8574:229::-;8714:34;8710:1;8702:6;8698:14;8691:58;8783:12;8778:2;8770:6;8766:15;8759:37;8574:229;:::o;8809:366::-;8951:3;8972:67;9036:2;9031:3;8972:67;:::i;:::-;8965:74;;9048:93;9137:3;9048:93;:::i;:::-;9166:2;9161:3;9157:12;9150:19;;8809:366;;;:::o;9181:419::-;9347:4;9385:2;9374:9;9370:18;9362:26;;9434:9;9428:4;9424:20;9420:1;9409:9;9405:17;9398:47;9462:131;9588:4;9462:131;:::i;:::-;9454:139;;9181:419;;;:::o;9606:225::-;9746:34;9742:1;9734:6;9730:14;9723:58;9815:8;9810:2;9802:6;9798:15;9791:33;9606:225;:::o;9837:366::-;9979:3;10000:67;10064:2;10059:3;10000:67;:::i;:::-;9993:74;;10076:93;10165:3;10076:93;:::i;:::-;10194:2;10189:3;10185:12;10178:19;;9837:366;;;:::o;10209:419::-;10375:4;10413:2;10402:9;10398:18;10390:26;;10462:9;10456:4;10452:20;10448:1;10437:9;10433:17;10426:47;10490:131;10616:4;10490:131;:::i;:::-;10482:139;;10209:419;;;:::o;10634:179::-;10774:31;10770:1;10762:6;10758:14;10751:55;10634:179;:::o;10819:366::-;10961:3;10982:67;11046:2;11041:3;10982:67;:::i;:::-;10975:74;;11058:93;11147:3;11058:93;:::i;:::-;11176:2;11171:3;11167:12;11160:19;;10819:366;;;:::o;11191:419::-;11357:4;11395:2;11384:9;11380:18;11372:26;;11444:9;11438:4;11434:20;11430:1;11419:9;11415:17;11408:47;11472:131;11598:4;11472:131;:::i;:::-;11464:139;;11191:419;;;:::o;11616:98::-;11667:6;11701:5;11695:12;11685:22;;11616:98;;;:::o;11720:147::-;11821:11;11858:3;11843:18;;11720:147;;;;:::o;11873:307::-;11941:1;11951:113;11965:6;11962:1;11959:13;11951:113;;;12050:1;12045:3;12041:11;12035:18;12031:1;12026:3;12022:11;12015:39;11987:2;11984:1;11980:10;11975:15;;11951:113;;;12082:6;12079:1;12076:13;12073:101;;;12162:1;12153:6;12148:3;12144:16;12137:27;12073:101;11922:258;11873:307;;;:::o;12186:373::-;12290:3;12318:38;12350:5;12318:38;:::i;:::-;12372:88;12453:6;12448:3;12372:88;:::i;:::-;12365:95;;12469:52;12514:6;12509:3;12502:4;12495:5;12491:16;12469:52;:::i;:::-;12546:6;12541:3;12537:16;12530:23;;12294:265;12186:373;;;;:::o;12565:271::-;12695:3;12717:93;12806:3;12797:6;12717:93;:::i;:::-;12710:100;;12827:3;12820:10;;12565:271;;;;:::o;12842:99::-;12894:6;12928:5;12922:12;12912:22;;12842:99;;;:::o;12947:102::-;12988:6;13039:2;13035:7;13030:2;13023:5;13019:14;13015:28;13005:38;;12947:102;;;:::o;13055:364::-;13143:3;13171:39;13204:5;13171:39;:::i;:::-;13226:71;13290:6;13285:3;13226:71;:::i;:::-;13219:78;;13306:52;13351:6;13346:3;13339:4;13332:5;13328:16;13306:52;:::i;:::-;13383:29;13405:6;13383:29;:::i;:::-;13378:3;13374:39;13367:46;;13147:272;13055:364;;;;:::o;13425:313::-;13538:4;13576:2;13565:9;13561:18;13553:26;;13625:9;13619:4;13615:20;13611:1;13600:9;13596:17;13589:47;13653:78;13726:4;13717:6;13653:78;:::i;:::-;13645:86;;13425:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "832800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_rate()": "2429",
								"_token()": "infinite",
								"_wallet()": "2581",
								"_weiRaised()": "2451",
								"buyTokens(address)": "infinite",
								"rate()": "2438",
								"token()": "infinite",
								"wallet()": "2567",
								"weiRaised()": "2460"
							},
							"internal": {
								"_deliverTokens(address,uint256)": "infinite",
								"_forwardFunds()": "infinite",
								"_getTokenAmount(uint256)": "infinite",
								"_postValidatePurchase(address,uint256)": "13",
								"_preValidatePurchase(address,uint256)": "infinite",
								"_processPurchase(address,uint256)": "infinite",
								"_updatePurchasingState(address,uint256)": "13"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1071,
									"end": 8030,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2529,
									"end": 2909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2624,
									"end": 2625,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2616,
									"end": 2621,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2616,
									"end": 2625,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2608,
									"end": 2650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2689,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2676,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2661,
									"end": 2732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2759,
									"end": 2765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2743,
									"end": 2821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2842,
									"end": 2847,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2839,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2868,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2865,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2858,
									"end": 2865,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2892,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2886,
									"end": 2892,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 900,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 826,
									"end": 930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1017,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 936,
									"end": 1074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1192,
									"end": 1233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1427,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1550,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1737,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1973,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1959,
									"end": 1968,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1969,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1942,
									"end": 1974,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1977,
									"end": 2056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2178,
									"end": 2185,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2167,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2176,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2122,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2068,
									"end": 2196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2235,
									"end": 2237,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2325,
									"end": 2332,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2322,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2314,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2301,
									"end": 2323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2261,
									"end": 2333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2382,
									"end": 2384,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2478,
									"end": 2485,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2467,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2454,
									"end": 2476,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2408,
									"end": 2486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 2503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2593,
									"end": 2604,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2633,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2615,
									"end": 2634,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2662,
									"end": 2665,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2509,
									"end": 2678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2846,
									"name": "PUSH",
									"source": 7,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 2820,
									"end": 2821,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2808,
									"end": 2822,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2801,
									"end": 2847,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2684,
									"end": 2854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3087,
									"end": 3089,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3082,
									"end": 3085,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3023,
									"end": 3090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3188,
									"end": 3191,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3099,
									"end": 3192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3212,
									"end": 3215,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3208,
									"end": 3220,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2860,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3398,
									"end": 3402,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3438,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3425,
									"end": 3434,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3460,
									"end": 3469,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3473,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3449,
									"end": 3496,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3513,
									"end": 3644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3651,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3797,
									"end": 3831,
									"name": "PUSH",
									"source": 7,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3781,
									"end": 3795,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3832,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3866,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3861,
									"end": 3863,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3853,
									"end": 3859,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3849,
									"end": 3864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3842,
									"end": 3874,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3657,
									"end": 3881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4114,
									"end": 4116,
									"name": "PUSH",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 4109,
									"end": 4112,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4050,
									"end": 4117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4215,
									"end": 4218,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 4126,
									"end": 4219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4244,
									"end": 4246,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4239,
									"end": 4242,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4235,
									"end": 4247,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4425,
									"end": 4429,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4463,
									"end": 4465,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4452,
									"end": 4461,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4512,
									"end": 4521,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4502,
									"end": 4522,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4498,
									"end": 4499,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4487,
									"end": 4496,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4483,
									"end": 4500,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4523,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 4540,
									"end": 4671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4259,
									"end": 4678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "PUSH",
									"source": 7,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4812,
									"end": 4818,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4822,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4801,
									"end": 4859,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4893,
									"end": 4899,
									"name": "PUSH",
									"source": 7,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4888,
									"end": 4890,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4876,
									"end": 4891,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4869,
									"end": 4900,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4684,
									"end": 4907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5140,
									"end": 5142,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5138,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 5076,
									"end": 5143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5241,
									"end": 5244,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5152,
									"end": 5245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5270,
									"end": 5272,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5261,
									"end": 5273,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4913,
									"end": 5279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5538,
									"end": 5547,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5532,
									"end": 5536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5548,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5524,
									"end": 5525,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5509,
									"end": 5526,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5502,
									"end": 5549,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 5692,
									"end": 5696,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5566,
									"end": 5697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5285,
									"end": 5704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 8030,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8161e6139f96bb9097f46fc165d808acc8cb49bd35ee0923db1060b9db53d2364736f6c634300080e0033",
									".code": [
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "83BEBCED"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "83BEBCED"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "94A5AA8D"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "EC8AC4D8"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "ECD0C0C3"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "FC0C546A"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "2C4E722E"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "4042B66F"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "521EB273"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "610757E4"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3255,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3245,
											"end": 3268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 8030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3678,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3678,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3823,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3823,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3499,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3499,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1293,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1293,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1620,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1620,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1678,
											"end": 1703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1678,
											"end": 1703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4175,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4175,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3340,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3340,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4283,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4338,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4315,
											"end": 4326,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4337,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4294,
											"end": 4338,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4338,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4294,
											"end": 4338,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4400,
											"end": 4414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4433,
											"end": 4442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4417,
											"end": 4443,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4417,
											"end": 4443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4400,
											"end": 4443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4400,
											"end": 4443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4509,
											"end": 4518,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4494,
											"end": 4504,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4494,
											"end": 4508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4494,
											"end": 4519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 4494,
											"end": 4519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4519,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4549,
											"end": 4560,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4562,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4532,
											"end": 4569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4532,
											"end": 4569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4532,
											"end": 4569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4626,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4601,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4601,
											"end": 4613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4601,
											"end": 4613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4628,
											"end": 4637,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4645,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4585,
											"end": 4646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4646,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4682,
											"end": 4693,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4695,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4659,
											"end": 4705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4659,
											"end": 4705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4718,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4718,
											"end": 4733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4718,
											"end": 4733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4744,
											"end": 4789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4766,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4788,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4744,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4744,
											"end": 4789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4744,
											"end": 4789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4744,
											"end": 4789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3747,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3742,
											"end": 3747,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3902,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3902,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3384,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5738,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5350,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5486,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5486,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5486,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5461,
											"end": 5486,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5486,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5453,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5453,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5565,
											"end": 5566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5544,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5544,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7855,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7733,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7800,
											"end": 7807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 7827,
											"end": 7840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7820,
											"end": 7847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6916,
											"end": 7052,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6916,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7019,
											"end": 7030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7004,
											"end": 7044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7044,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7004,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 7052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 7052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 7052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7477,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 7330,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7947,
											"end": 8027,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7947,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 8009,
											"end": 8018,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7947,
											"end": 8027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6041,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6642,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6495,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6609,
											"end": 6620,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6589,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 840,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 813,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3819,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3811,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4025,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5137,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5236,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5228,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5341,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5389,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8202,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 574,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 574,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 648,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 648,
											"end": 672,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 637,
											"end": 672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 637,
											"end": 672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 574,
											"end": 678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 574,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 684,
											"end": 826,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 684,
											"end": 826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 787,
											"end": 819,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 775,
											"end": 820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 684,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 941,
											"end": 945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 956,
											"end": 982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 992,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 832,
											"end": 1086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1284,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1485,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1521,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1612,
											"end": 1617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1594,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1619,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1635,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1749,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1904,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1900,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1905,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1908,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2096,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2053,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 2123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2157,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2305,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2296,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2278,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2457,
											"end": 2462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2426,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2603,
											"end": 2608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2572,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2722,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2893,
											"end": 2897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2933,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2944,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 3036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3211,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3042,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3204,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3211,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3398,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3217,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3770,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3404,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3626,
											"end": 3629,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3567,
											"end": 3634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3634,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3567,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3732,
											"end": 3735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3643,
											"end": 3736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3736,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3643,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4195,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3776,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3982,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3969,
											"end": 3978,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4015,
											"end": 4016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4000,
											"end": 4017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4040,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4057,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4188,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4057,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 4195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4533,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4201,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4373,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4373,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4373,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4373,
											"end": 4444,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4373,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4522,
											"end": 4524,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4498,
											"end": 4504,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4454,
											"end": 4526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4526,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4454,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4533,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4201,
											"end": 4533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4768,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4539,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 4713,
											"name": "PUSH",
											"source": 7,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 4675,
											"end": 4676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4714,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4760,
											"name": "PUSH",
											"source": 7,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 5001,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 4996,
											"end": 4999,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4937,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4930,
											"end": 5004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4930,
											"end": 5004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5102,
											"end": 5105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5013,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5133,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5126,
											"end": 5129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5115,
											"end": 5134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5115,
											"end": 5134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5352,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5327,
											"end": 5353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5327,
											"end": 5353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5553,
											"end": 5557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5427,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5746,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5571,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5695,
											"end": 5709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5688,
											"end": 5739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5979,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5915,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5982,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6080,
											"end": 6083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 5991,
											"end": 6084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6111,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 6118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6371,
											"end": 6375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6387,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6363,
											"end": 6364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6405,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6674,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6723,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7040,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6735,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6794,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6828,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 6983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 6980,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 6908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6985,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 7008,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6901,
											"end": 7008,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 6988,
											"end": 7006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 7008,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6901,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7394,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 7046,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7127,
											"end": 7128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7109,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7109,
											"end": 7129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7109,
											"end": 7129,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7109,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7129,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7161,
											"end": 7162,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7143,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7163,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7143,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7163,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7259,
											"end": 7333,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7257,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7334,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7241,
											"end": 7250,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7251,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7335,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7338,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7227,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7394,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7394,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7518,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7400,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7505,
											"end": 7510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7487,
											"end": 7511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7511,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7487,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7856,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 7524,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7685,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7672,
											"end": 7681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7696,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7767,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7696,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7777,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7845,
											"end": 7847,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7843,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7821,
											"end": 7827,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7777,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7777,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7777,
											"end": 7849,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7777,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7856,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7856,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7952,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7862,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7914,
											"end": 7946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7914,
											"end": 7946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8074,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7958,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8043,
											"end": 8048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 8028,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8049,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8028,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8008,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 8008,
											"end": 8068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8061,
											"end": 8062,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8008,
											"end": 8068,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 8008,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8217,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 8080,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8159,
											"end": 8172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8150,
											"end": 8172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8150,
											"end": 8172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8205,
											"end": 8210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 8181,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8211,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8181,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8217,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8568,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 8223,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8325,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8314,
											"end": 8337,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8342,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8426,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8307,
											"end": 8426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 8345,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 8345,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8424,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 8345,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8426,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8307,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8490,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8543,
											"end": 8550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8532,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 8490,
											"end": 8551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8551,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8490,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8568,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8803,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8574,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8748,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8698,
											"end": 8712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8795,
											"name": "PUSH",
											"source": 7,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8778,
											"end": 8780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8770,
											"end": 8776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8796,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 9175,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8809,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8951,
											"end": 8954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8972,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 9036,
											"end": 9038,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 9031,
											"end": 9034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 8972,
											"end": 9039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9039,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 8972,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9137,
											"end": 9140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 9048,
											"end": 9141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9141,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9048,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9161,
											"end": 9164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9157,
											"end": 9169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 9175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 9175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 9175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 9175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9600,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 9181,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9347,
											"end": 9351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9385,
											"end": 9387,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9374,
											"end": 9383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9362,
											"end": 9388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9362,
											"end": 9388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9424,
											"end": 9444,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9420,
											"end": 9421,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9409,
											"end": 9418,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9398,
											"end": 9445,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9462,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 9588,
											"end": 9592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9462,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 9462,
											"end": 9593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9462,
											"end": 9593,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 9462,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9831,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9606,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 9780,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9823,
											"name": "PUSH",
											"source": 7,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9810,
											"end": 9812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9802,
											"end": 9808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9791,
											"end": 9824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 10203,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 9837,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9979,
											"end": 9982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10064,
											"end": 10066,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10059,
											"end": 10062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 10000,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10000,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9993,
											"end": 10067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9993,
											"end": 10067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 10076,
											"end": 10169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10169,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 10076,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10194,
											"end": 10196,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10189,
											"end": 10192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10185,
											"end": 10197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 10203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 10203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 10203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9837,
											"end": 10203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10628,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 10209,
											"end": 10628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10413,
											"end": 10415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10402,
											"end": 10411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10390,
											"end": 10416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10390,
											"end": 10416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10462,
											"end": 10471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10472,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10448,
											"end": 10449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10437,
											"end": 10446,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10433,
											"end": 10450,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10426,
											"end": 10473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 10490,
											"end": 10621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10621,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 10490,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10634,
											"end": 10813,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 10634,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10805,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 10770,
											"end": 10771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10751,
											"end": 10806,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10634,
											"end": 10813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10634,
											"end": 10813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10819,
											"end": 11185,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 10819,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10961,
											"end": 10964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 11046,
											"end": 11048,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 11041,
											"end": 11044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10982,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 10982,
											"end": 11049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10982,
											"end": 11049,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 10982,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10975,
											"end": 11049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10975,
											"end": 11049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 11147,
											"end": 11150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 11058,
											"end": 11151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11151,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 11058,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11178,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11171,
											"end": 11174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11160,
											"end": 11179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11160,
											"end": 11179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10819,
											"end": 11185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10819,
											"end": 11185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10819,
											"end": 11185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10819,
											"end": 11185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11191,
											"end": 11610,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 11191,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11357,
											"end": 11361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11397,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11384,
											"end": 11393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11372,
											"end": 11398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11372,
											"end": 11398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11444,
											"end": 11453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11438,
											"end": 11442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11430,
											"end": 11431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11419,
											"end": 11428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11408,
											"end": 11455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 11598,
											"end": 11602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 11472,
											"end": 11603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11603,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 11472,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11464,
											"end": 11603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11464,
											"end": 11603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11191,
											"end": 11610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11191,
											"end": 11610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11191,
											"end": 11610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11191,
											"end": 11610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11616,
											"end": 11714,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 11616,
											"end": 11714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11667,
											"end": 11673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11701,
											"end": 11706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11707,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11685,
											"end": 11707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11685,
											"end": 11707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11616,
											"end": 11714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11616,
											"end": 11714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11616,
											"end": 11714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11616,
											"end": 11714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11867,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 11720,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11821,
											"end": 11832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12180,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 11873,
											"end": 12180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11941,
											"end": 11942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 11971,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11959,
											"end": 11972,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12045,
											"end": 12048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12041,
											"end": 12052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12053,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12029,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12022,
											"end": 12033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12015,
											"end": 12054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11987,
											"end": 11989,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11984,
											"end": 11985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 11990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11975,
											"end": 11990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11975,
											"end": 11990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 11951,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12088,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12079,
											"end": 12080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12076,
											"end": 12089,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12174,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 12073,
											"end": 12174,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12162,
											"end": 12163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12159,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12148,
											"end": 12151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12144,
											"end": 12160,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12137,
											"end": 12164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12174,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 12073,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11922,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 12180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12559,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 12186,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 12293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 12350,
											"end": 12355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 12318,
											"end": 12356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12356,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 12318,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12372,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12453,
											"end": 12459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12448,
											"end": 12451,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12372,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 12372,
											"end": 12460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12372,
											"end": 12460,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12372,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12365,
											"end": 12460,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12365,
											"end": 12460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12469,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12509,
											"end": 12512,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12506,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12495,
											"end": 12500,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12491,
											"end": 12507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12469,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 12469,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12469,
											"end": 12521,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12469,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12552,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12541,
											"end": 12544,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12294,
											"end": 12559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12559,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12836,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 12565,
											"end": 12836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12695,
											"end": 12698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 12806,
											"end": 12809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12803,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12717,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 12717,
											"end": 12810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12717,
											"end": 12810,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 12717,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12710,
											"end": 12810,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12710,
											"end": 12810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12820,
											"end": 12830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12820,
											"end": 12830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12565,
											"end": 12836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12842,
											"end": 12941,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 12842,
											"end": 12941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12894,
											"end": 12900,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12928,
											"end": 12933,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12922,
											"end": 12934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12912,
											"end": 12934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12912,
											"end": 12934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12842,
											"end": 12941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12842,
											"end": 12941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12842,
											"end": 12941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12842,
											"end": 12941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13049,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 12947,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12988,
											"end": 12994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13039,
											"end": 13041,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13035,
											"end": 13042,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13030,
											"end": 13032,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13023,
											"end": 13028,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13043,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13005,
											"end": 13043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13005,
											"end": 13043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13419,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 13055,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13143,
											"end": 13146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13171,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 13204,
											"end": 13209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 13171,
											"end": 13210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13210,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 13171,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 13290,
											"end": 13296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13288,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 13226,
											"end": 13297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13297,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 13226,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13219,
											"end": 13297,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13219,
											"end": 13297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13306,
											"end": 13358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 13351,
											"end": 13357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13346,
											"end": 13349,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13332,
											"end": 13337,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13328,
											"end": 13344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13306,
											"end": 13358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 13306,
											"end": 13358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13306,
											"end": 13358,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 13306,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 13405,
											"end": 13411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 13383,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13412,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 13383,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13378,
											"end": 13381,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13374,
											"end": 13413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13367,
											"end": 13413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13367,
											"end": 13413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13147,
											"end": 13419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13425,
											"end": 13738,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 13425,
											"end": 13738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13576,
											"end": 13578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13565,
											"end": 13574,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13561,
											"end": 13579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13553,
											"end": 13579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13619,
											"end": 13623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13611,
											"end": 13612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13609,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13596,
											"end": 13613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13589,
											"end": 13636,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13653,
											"end": 13731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 13726,
											"end": 13730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13717,
											"end": 13723,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13653,
											"end": 13731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 13653,
											"end": 13731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13653,
											"end": 13731,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 13653,
											"end": 13731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13645,
											"end": 13731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13645,
											"end": 13731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13425,
											"end": 13738,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13425,
											"end": 13738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13425,
											"end": 13738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13425,
											"end": 13738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13425,
											"end": 13738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/crowdsale-contracts/Crowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_rate()": "83bebced",
							"_token()": "ecd0c0c3",
							"_wallet()": "610757e4",
							"_weiRaised()": "94a5aa8d",
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"wallet_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate_\":\"Number of token units a buyer gets per wei\",\"token_\":\"Address of the token being sold\",\"wallet_\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/crowdsale-contracts/Crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/crowdsale-contracts/Crowdsale.sol\":{\"keccak256\":\"0x08a38020bf6dc677c0332c4dac35eb280badbdf964bc3aa316e37976f9a27662\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cd8575c72c4628eb4fc6e8af3cbad4118afd4df578ef00467a0b1091e88c705\",\"dweb:/ipfs/QmZpecci7SHJ9ohfSxpugXHpzMq71bQaZfETK3k1mCdkCu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 992,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 994,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 996,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 998,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/crowdsale-contracts/Crowdsale.sol:152:36:\n    |\n152 |     function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n    |                                    ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6091,
					"file": "contracts/crowdsale-contracts/Crowdsale.sol",
					"start": 6072
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/crowdsale-contracts/Crowdsale.sol:152:57:\n    |\n152 |     function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n    |                                                         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6110,
					"file": "contracts/crowdsale-contracts/Crowdsale.sol",
					"start": 6093
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							636
						],
						"IERC20": [
							117
						],
						"SafeERC20": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 118,
							"src": "125:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 637,
							"src": "149:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 341,
							"linearizedBaseContracts": [
								341
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 636,
										"src": "675:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "803:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 136,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "833:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 139,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 128,
																			"src": "863:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 84,
																		"src": "863:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 142,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "888:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "892:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 137,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 135,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "813:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "813:86:2"
											}
										]
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "732:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 126,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "732:6:2"
													},
													"referencedDeclaration": 117,
													"src": "732:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "754:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "774:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:2"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:2"
									},
									"scope": 341,
									"src": "701:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1040:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1070:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 164,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "1100:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 116,
																		"src": "1100:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 167,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1129:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 168,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1135:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 169,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "1139:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 162,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 160,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1050:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:2"
											}
										]
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "947:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 149,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "947:6:2"
													},
													"referencedDeclaration": 117,
													"src": "947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "969:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "991:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1011:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:2"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:2"
									},
									"scope": 341,
									"src": "912:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1519:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 182,
																			"src": "1768:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 194,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$341",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$341",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 193,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 192,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 196,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 180,
																					"src": "1815:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 190,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "1784:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$117",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 94,
																				"src": "1784:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 200,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1939:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 209,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "1969:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "1969:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 212,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "1993:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "2002:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 207,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 205,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1919:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:2"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1443:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 176,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "1443:6:2"
													},
													"referencedDeclaration": 117,
													"src": "1443:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1465:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:2"
									},
									"scope": 341,
									"src": "1413:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2138:194:2",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "2148:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 234,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$341",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$341",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 232,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 236,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "2202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 230,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2171:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$117",
																	"typeString": "contract IERC20"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 94,
															"src": "2171:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 238,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2213:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 245,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "2278:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "2278:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 248,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "2302:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 249,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2311:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 243,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 241,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2228:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2062:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 219,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "2062:6:2"
													},
													"referencedDeclaration": 117,
													"src": "2062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2084:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2109:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:2"
									},
									"scope": 341,
									"src": "2022:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2454:370:2",
										"statements": [
											{
												"id": 300,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:2",
												"statements": [
													{
														"assignments": [
															265
														],
														"declarations": [
															{
																"constant": false,
																"id": 265,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 300,
																"src": "2488:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 264,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 274,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 270,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$341",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$341",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 268,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 272,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "2542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2511:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 94,
																"src": "2511:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 276,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "2572:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 277,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "2588:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 275,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 281,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:2"
													},
													{
														"assignments": [
															283
														],
														"declarations": [
															{
																"constant": false,
																"id": 283,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 300,
																"src": "2653:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 282,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 287,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 284,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "2676:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 285,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "2691:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 289,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2730:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 292,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2760:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$117",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 104,
																				"src": "2760:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 295,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "2784:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 296,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "2793:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 290,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 288,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2710:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 299,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:2"
													}
												]
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2378:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "2378:6:2"
													},
													"referencedDeclaration": 117,
													"src": "2378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:2"
									},
									"scope": 341,
									"src": "2338:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3277:636:2",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "3626:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 311,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"arguments": [
														{
															"id": 318,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 315,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3660:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 430,
														"src": "3652:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 322,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3735:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "3731:176:2",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "3758:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 329,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 312,
																				"src": "3830:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 331,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 330,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 332,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 327,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 326,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3236:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 305,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 304,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "3236:6:2"
													},
													"referencedDeclaration": 117,
													"src": "3236:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3250:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:2"
									},
									"scope": 341,
									"src": "3207:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 342,
							"src": "645:3270:2",
							"usedErrors": []
						}
					],
					"src": "100:3816:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							636
						]
					},
					"id": 637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 344,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 636,
							"linearizedBaseContracts": [
								636
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 352,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 636,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 370,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		],
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 368,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 373,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													379,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 378,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 380,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 382,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 636,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 403,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															430
														],
														"referencedDeclaration": 430,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 636,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 426,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 422,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															450,
															500
														],
														"referencedDeclaration": 500,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 428,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 636,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 443,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 445,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 442,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															450,
															500
														],
														"referencedDeclaration": 500,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 441,
												"id": 448,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 636,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 467,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		],
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 465,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 470,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 476,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													483,
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 482,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 484,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"id": 490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 486,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 495,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 496,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 493,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 498,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 636,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 510,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															517,
															552
														],
														"referencedDeclaration": 552,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 509,
												"id": 515,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 636,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 531,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 530,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													537,
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 536,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 538,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [
														{
															"id": 542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 547,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 548,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 545,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 550,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 636,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 562,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															569,
															604
														],
														"referencedDeclaration": 604,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 561,
												"id": 567,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 636,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 583,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 582,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													589,
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 588,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 591,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 590,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"arguments": [
														{
															"id": 594,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 592,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 598,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 599,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 600,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 597,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 580,
												"id": 602,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 636,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "7721:532:3",
										"statements": [
											{
												"condition": {
													"id": 616,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 607,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "7792:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 620,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "8184:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 627,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 611,
																					"src": "8209:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 626,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:3"
																	}
																]
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "7872:365:3",
															"trueBody": {
																"id": 625,
																"nodeType": "Block",
																"src": "7899:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 609,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 609,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 624,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "7731:516:3",
												"trueBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 617,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 615,
															"id": 618,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 636,
									"src": "7561:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 637,
							"src": "194:8061:3",
							"usedErrors": []
						}
					],
					"src": "101:8155:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							658
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 644,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 643,
												"id": 646,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 658,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 653,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 652,
												"id": 655,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 658,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 659,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							970
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 970,
							"linearizedBaseContracts": [
								970
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 691,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															674
														],
														"declarations": [
															{
																"constant": false,
																"id": 674,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 691,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 673,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 678,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 676,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 679,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 680,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 686,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 672,
															"id": 685,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 688,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 689,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 672,
														"id": 690,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 970,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 719,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 706,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 712,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 710,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 704,
															"id": 711,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 714,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 715,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 717,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 704,
														"id": 718,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 970,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 761,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 733,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 740,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 738,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 732,
															"id": 739,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															742
														],
														"declarations": [
															{
																"constant": false,
																"id": 742,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 761,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 741,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 746,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 743,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 744,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 747,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 748,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 750,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 756,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 732,
															"id": 755,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 758,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 759,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 732,
														"id": 760,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 970,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 789,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 782,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 774,
															"id": 781,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 784,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 785,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 787,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 774,
														"id": 788,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 970,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 817,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 810,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 802,
															"id": 809,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 812,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 813,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 815,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 802,
														"id": 816,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 970,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 830,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 828,
												"id": 832,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 970,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 844,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 845,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 843,
												"id": 847,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 970,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 858,
												"id": 862,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 970,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 877,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 970,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 890,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 892,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 970,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "5084:106:5",
										"statements": [
											{
												"id": 917,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 907,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "5126:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 908,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "5131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 910,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "5134:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 906,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 912,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 913,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "5168:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 914,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 905,
														"id": 916,
														"nodeType": "Return",
														"src": "5161:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "4981:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "5000:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "5019:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "5075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:5"
									},
									"scope": 970,
									"src": "4959:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "5799:105:5",
										"statements": [
											{
												"id": 942,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 932,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "5841:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 935,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "5848:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 931,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 937,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "5882:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 939,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "5886:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 930,
														"id": 941,
														"nodeType": "Return",
														"src": "5875:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5734:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:5"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:5"
									},
									"scope": 970,
									"src": "5674:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "6675:105:5",
										"statements": [
											{
												"id": 967,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 957,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "6717:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 960,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "6724:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 956,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 962,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 963,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "6758:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 964,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "6762:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 955,
														"id": 966,
														"nodeType": "Return",
														"src": "6751:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6572:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6591:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:5"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6666:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:5"
									},
									"scope": 970,
									"src": "6550:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 971,
							"src": "482:6300:5",
							"usedErrors": []
						}
					],
					"src": "107:6676:5"
				},
				"id": 5
			},
			"contracts/crowdsale-contracts/Crowdsale.sol": {
				"ast": {
					"absolutePath": "contracts/crowdsale-contracts/Crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							636
						],
						"Context": [
							658
						],
						"Crowdsale": [
							1273
						],
						"IERC20": [
							117
						],
						"ReentrancyGuard": [
							39
						],
						"SafeERC20": [
							341
						],
						"SafeMath": [
							970
						]
					},
					"id": 1274,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 659,
							"src": "60:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 118,
							"src": "113:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 971,
							"src": "171:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 342,
							"src": "230:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 40,
							"src": "297:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 979,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 658,
										"src": "1093:7:6"
									},
									"id": 980,
									"nodeType": "InheritanceSpecifier",
									"src": "1093:7:6"
								},
								{
									"baseName": {
										"id": 981,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "1102:15:6"
									},
									"id": 982,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:15:6"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 978,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:6",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 1273,
							"linearizedBaseContracts": [
								1273,
								39,
								658
							],
							"name": "Crowdsale",
							"nameLocation": "1080:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 985,
									"libraryName": {
										"id": 983,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "1131:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1125:27:6",
									"typeName": {
										"id": 984,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1144:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 989,
									"libraryName": {
										"id": 986,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 341,
										"src": "1164:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1158:27:6",
									"typeName": {
										"id": 988,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 987,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "1178:6:6"
										},
										"referencedDeclaration": 117,
										"src": "1178:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ecd0c0c3",
									"id": 992,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1236:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "1222:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 991,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 990,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "1222:6:6"
										},
										"referencedDeclaration": 117,
										"src": "1222:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "610757e4",
									"id": 994,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1316:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "1293:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 993,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1293:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83bebced",
									"id": 996,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1635:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "1620:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1620:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94a5aa8d",
									"id": 998,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1693:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "1678:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 997,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1678:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "1712:241:6",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 1009,
									"name": "TokensPurchased",
									"nameLocation": "1965:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "1997:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1981:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2024:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2008:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2045:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2037:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2060:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2052:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:87:6"
									},
									"src": "1959:109:6"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "2597:312:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1021,
																"name": "rate_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "2616:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2624:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2616:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2627:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2608:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2608:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2608:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "wallet_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "2669:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2688:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2680:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2680:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2680:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2669:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2692:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2661:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2661:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "2661:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1040,
																		"name": "token_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "2759:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$117",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$117",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2751:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2751:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2778:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2770:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2770:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2770:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2751:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2782:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 1037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2743:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2743:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "2743:78:6"
											},
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1050,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "2834:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1051,
														"name": "rate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "2842:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2834:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "2834:13:6"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1055,
														"name": "wallet_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "2868:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2858:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:6"
											},
											{
												"expression": {
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2886:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1059,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "2895:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "2886:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "2886:15:6"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "2076:447:6",
										"text": " @param rate_ Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param wallet_ Address where collected funds will be forwarded to\n @param token_ Address of the token being sold"
									},
									"id": 1063,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "rate_",
												"nameLocation": "2550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "wallet_",
												"nameLocation": "2573:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2557:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2557:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "token_",
												"nameLocation": "2589:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2582:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1015,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "2582:6:6"
													},
													"referencedDeclaration": 117,
													"src": "2582:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:55:6"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2597:0:6"
									},
									"scope": 1273,
									"src": "2529:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "3234:42:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1068,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "3255:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3255:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1067,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "3245:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "3245:23:6"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "2917:283:6",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 1073,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3214:2:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3234:0:6"
									},
									"scope": 1273,
									"src": "3206:70:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "3386:32:6",
										"statements": [
											{
												"expression": {
													"id": 1080,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "3404:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1079,
												"id": 1081,
												"nodeType": "Return",
												"src": "3397:13:6"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "3284:50:6",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3349:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3354:2:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "3378:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1076,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "3378:6:6"
													},
													"referencedDeclaration": 117,
													"src": "3378:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:8:6"
									},
									"scope": 1273,
									"src": "3340:78:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "3555:33:6",
										"statements": [
											{
												"expression": {
													"id": 1089,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 994,
													"src": "3573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1090,
												"nodeType": "Return",
												"src": "3566:14:6"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "3426:67:6",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3514:2:6"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "3538:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3538:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3537:17:6"
									},
									"scope": 1273,
									"src": "3499:89:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "3724:31:6",
										"statements": [
											{
												"expression": {
													"id": 1098,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 996,
													"src": "3742:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1099,
												"nodeType": "Return",
												"src": "3735:12:6"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "3596:76:6",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3687:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:6"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3715:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3715:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3714:9:6"
									},
									"scope": 1273,
									"src": "3678:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "3874:36:6",
										"statements": [
											{
												"expression": {
													"id": 1107,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 998,
													"src": "3892:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1108,
												"nodeType": "Return",
												"src": "3885:17:6"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "3763:54:6",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3832:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3841:2:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3865:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:9:6"
									},
									"scope": 1273,
									"src": "3823:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "4243:554:6",
										"statements": [
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4262:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "4254:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1118,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4254:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"expression": {
														"id": 1120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4274:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4274:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4254:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4315:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4328:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "4294:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:6"
											},
											{
												"assignments": [
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4408:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "4400:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4400:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"arguments": [
														{
															"id": 1131,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4433:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1130,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "4417:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4417:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4400:43:6"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1134,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "4481:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1137,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "4509:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1135,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "4494:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 834,
															"src": "4494:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4494:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4481:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "4481:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4549:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "4562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "4532:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4532:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "4532:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1147,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "4601:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4601:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4615:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4628:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1151,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "4639:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1146,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "4585:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4585:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "EmitStatement",
												"src": "4580:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1155,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4682:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4695:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1154,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "4659:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4659:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "4659:46:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1159,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "4718:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "4718:15:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1163,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4766:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "4779:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1162,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "4744:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4744:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "4744:45:6"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "3918:251:6",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1115,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4222:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4222:12:6"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4184:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4202:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4194:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4193:21:6"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4243:0:6"
									},
									"scope": 1273,
									"src": "4175:622:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "5442:296:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1177,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "5461:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5484:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5476:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1178,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5476:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5476:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5461:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5488:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 1176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5453:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5453:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "5453:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1187,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "5552:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5565:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5552:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5568:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 1186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5544:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5544:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "5544:52:6"
											},
											{
												"expression": {
													"id": 1193,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5607:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$1273",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "5607:4:6"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "4805:539:6",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5359:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5388:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5380:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5380:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5409:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5401:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5379:40:6"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5442:0:6"
									},
									"scope": 1273,
									"src": "5350:388:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "6126:81:6",
										"statements": [
											{
												"expression": {
													"id": 1204,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "6195:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$1273",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "6195:4:6"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "5746:289:6",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6050:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6080:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "6072:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6072:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6101:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "6093:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6071:40:6"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6126:0:6"
									},
									"scope": 1273,
									"src": "6041:166:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "6578:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1218,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "6609:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "6622:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1215,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "6589:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 148,
														"src": "6589:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$117_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6589:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "6589:45:6"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "6215:274:6",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6504:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6527:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "6519:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6519:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6548:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "6540:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6540:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:42:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6578:0:6"
									},
									"scope": 1273,
									"src": "6495:147:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "6993:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "7019:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1233,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "7032:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "7004:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7004:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "7004:40:6"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "6650:260:6",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "6925:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6950:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "6942:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6971:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "6963:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6963:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6941:42:6"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6993:0:6"
									},
									"scope": 1273,
									"src": "6916:136:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "7411:66:6",
										"statements": []
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "7060:264:6",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7339:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7370:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "7362:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7362:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7391:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "7383:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7383:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7361:40:6"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7411:0:6"
									},
									"scope": 1273,
									"src": "7330:147:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "7809:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "7841:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1254,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "7827:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "7827:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7827:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1253,
												"id": 1258,
												"nodeType": "Return",
												"src": "7820:27:6"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "7485:242:6",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7742:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7766:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "7758:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7758:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7757:19:6"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "7800:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7800:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7799:9:6"
									},
									"scope": 1273,
									"src": "7733:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "7981:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1267,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8009:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8009:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1264,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "7992:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7992:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7992:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "7992:27:6"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "7863:78:6",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "7956:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7969:2:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7981:0:6"
									},
									"scope": 1273,
									"src": "7947:80:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1274,
							"src": "1071:6959:6",
							"usedErrors": []
						}
					],
					"src": "33:7997:6"
				},
				"id": 6
			}
		}
	}
}