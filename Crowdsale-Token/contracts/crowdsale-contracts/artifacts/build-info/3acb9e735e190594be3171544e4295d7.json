{
	"id": "3acb9e735e190594be3171544e4295d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/crowdsale-contracts/Crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\ncontract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 public _token;\r\n\r\n    // Address where funds are collected\r\n    address payable public _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 public _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 public _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param rate_ Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param wallet_ Address where collected funds will be forwarded to\r\n     * @param token_ Address of the token being sold\r\n     */\r\n    constructor (uint256 rate_, address payable wallet_, IERC20 token_) {\r\n        require(rate_ > 0, \"Crowdsale: rate is 0\");\r\n        require(wallet_ != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(token_) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = rate_;\r\n        _wallet = wallet_;\r\n        _token = token_;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    receive () external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n        this;\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SMOD 0x2A SSTORE STATICCALL 0xB9 0xB3 0xE6 AND SIGNEXTEND PUSH21 0xAAFB8C77693F6DDE1859F0F3FE68F1815438216B80 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd072a55fab9b3e6160b74aafb8c77693f6dde1859f0f3fe68f1815438216b8064736f6c63430008070033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/crowdsale-contracts/Crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rate_",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "wallet_",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"rate_": "Number of token units a buyer gets per wei",
									"token_": "Address of the token being sold",
									"wallet_": "Address where collected funds will be forwarded to"
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:7396  contract Crowdsale is Context, ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2529:2909  constructor (uint256 rate_, address payable wallet_, IERC20 token_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2624:2625  0 */\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2616:2621  rate_ */\n  dup4\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2616:2625  rate_ > 0 */\n  gt\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2608:2650  require(rate_ > 0, \"Crowdsale: rate is 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2688:2689  0 */\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2669:2690  wallet_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2669:2676  wallet_ */\n  dup3\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2669:2690  wallet_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2661:2732  require(wallet_ != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2778:2779  0 */\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2751:2780  address(token_) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2759:2765  token_ */\n  dup2\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2751:2780  address(token_) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2743:2821  require(address(token_) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2842:2847  rate_ */\n  dup3\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2834:2839  _rate */\n  0x03\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2834:2847  _rate = rate_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2868:2875  wallet_ */\n  dup2\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2858:2865  _wallet */\n  0x02\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2858:2875  _wallet = wallet_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2895:2901  token_ */\n  dup1\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2886:2892  _token */\n  0x01\n  0x00\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2886:2901  _token = token_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":2529:2909  constructor (uint256 rate_, address payable wallet_, IERC20 token_) {\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:7396  contract Crowdsale is Context, ReentrancyGuard {\r... */\n  jump(tag_17)\n    /* \"#utility.yul\":7:166   */\ntag_19:\n    /* \"#utility.yul\":72:77   */\n  0x00\n    /* \"#utility.yul\":103:109   */\n  dup2\n    /* \"#utility.yul\":97:110   */\n  mload\n    /* \"#utility.yul\":88:110   */\n  swap1\n  pop\n    /* \"#utility.yul\":119:160   */\n  tag_21\n    /* \"#utility.yul\":154:159   */\n  dup2\n    /* \"#utility.yul\":119:160   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:166   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:343   */\ntag_23:\n    /* \"#utility.yul\":243:248   */\n  0x00\n    /* \"#utility.yul\":274:280   */\n  dup2\n    /* \"#utility.yul\":268:281   */\n  mload\n    /* \"#utility.yul\":259:281   */\n  swap1\n  pop\n    /* \"#utility.yul\":290:337   */\n  tag_25\n    /* \"#utility.yul\":331:336   */\n  dup2\n    /* \"#utility.yul\":290:337   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":172:343   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":349:492   */\ntag_27:\n    /* \"#utility.yul\":406:411   */\n  0x00\n    /* \"#utility.yul\":437:443   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  mload\n    /* \"#utility.yul\":422:444   */\n  swap1\n  pop\n    /* \"#utility.yul\":453:486   */\n  tag_29\n    /* \"#utility.yul\":480:485   */\n  dup2\n    /* \"#utility.yul\":453:486   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":349:492   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":498:1205   */\ntag_3:\n    /* \"#utility.yul\":608:614   */\n  0x00\n    /* \"#utility.yul\":616:622   */\n  dup1\n    /* \"#utility.yul\":624:630   */\n  0x00\n    /* \"#utility.yul\":673:675   */\n  0x60\n    /* \"#utility.yul\":661:670   */\n  dup5\n    /* \"#utility.yul\":652:659   */\n  dup7\n    /* \"#utility.yul\":648:671   */\n  sub\n    /* \"#utility.yul\":644:676   */\n  slt\n    /* \"#utility.yul\":641:760   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":679:758   */\n  tag_33\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":641:760   */\ntag_32:\n    /* \"#utility.yul\":799:800   */\n  0x00\n    /* \"#utility.yul\":824:888   */\n  tag_35\n    /* \"#utility.yul\":880:887   */\n  dup7\n    /* \"#utility.yul\":871:877   */\n  dup3\n    /* \"#utility.yul\":860:869   */\n  dup8\n    /* \"#utility.yul\":856:878   */\n  add\n    /* \"#utility.yul\":824:888   */\n  tag_27\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":814:888   */\n  swap4\n  pop\n    /* \"#utility.yul\":770:898   */\n  pop\n    /* \"#utility.yul\":937:939   */\n  0x20\n    /* \"#utility.yul\":963:1035   */\n  tag_36\n    /* \"#utility.yul\":1027:1034   */\n  dup7\n    /* \"#utility.yul\":1018:1024   */\n  dup3\n    /* \"#utility.yul\":1007:1016   */\n  dup8\n    /* \"#utility.yul\":1003:1025   */\n  add\n    /* \"#utility.yul\":963:1035   */\n  tag_19\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":953:1035   */\n  swap3\n  pop\n    /* \"#utility.yul\":908:1045   */\n  pop\n    /* \"#utility.yul\":1084:1086   */\n  0x40\n    /* \"#utility.yul\":1110:1188   */\n  tag_37\n    /* \"#utility.yul\":1180:1187   */\n  dup7\n    /* \"#utility.yul\":1171:1177   */\n  dup3\n    /* \"#utility.yul\":1160:1169   */\n  dup8\n    /* \"#utility.yul\":1156:1178   */\n  add\n    /* \"#utility.yul\":1110:1188   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1100:1188   */\n  swap2\n  pop\n    /* \"#utility.yul\":1055:1198   */\n  pop\n    /* \"#utility.yul\":498:1205   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1211:1577   */\ntag_38:\n    /* \"#utility.yul\":1353:1356   */\n  0x00\n    /* \"#utility.yul\":1374:1441   */\n  tag_40\n    /* \"#utility.yul\":1438:1440   */\n  0x24\n    /* \"#utility.yul\":1433:1436   */\n  dup4\n    /* \"#utility.yul\":1374:1441   */\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1367:1441   */\n  swap2\n  pop\n    /* \"#utility.yul\":1450:1543   */\n  tag_42\n    /* \"#utility.yul\":1539:1542   */\n  dup3\n    /* \"#utility.yul\":1450:1543   */\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1568:1570   */\n  0x40\n    /* \"#utility.yul\":1563:1566   */\n  dup3\n    /* \"#utility.yul\":1559:1571   */\n  add\n    /* \"#utility.yul\":1552:1571   */\n  swap1\n  pop\n    /* \"#utility.yul\":1211:1577   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1583:1949   */\ntag_44:\n    /* \"#utility.yul\":1725:1728   */\n  0x00\n    /* \"#utility.yul\":1746:1813   */\n  tag_46\n    /* \"#utility.yul\":1810:1812   */\n  0x14\n    /* \"#utility.yul\":1805:1808   */\n  dup4\n    /* \"#utility.yul\":1746:1813   */\n  tag_41\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1739:1813   */\n  swap2\n  pop\n    /* \"#utility.yul\":1822:1915   */\n  tag_47\n    /* \"#utility.yul\":1911:1914   */\n  dup3\n    /* \"#utility.yul\":1822:1915   */\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1940:1942   */\n  0x20\n    /* \"#utility.yul\":1935:1938   */\n  dup3\n    /* \"#utility.yul\":1931:1943   */\n  add\n    /* \"#utility.yul\":1924:1943   */\n  swap1\n  pop\n    /* \"#utility.yul\":1583:1949   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1955:2321   */\ntag_49:\n    /* \"#utility.yul\":2097:2100   */\n  0x00\n    /* \"#utility.yul\":2118:2185   */\n  tag_51\n    /* \"#utility.yul\":2182:2184   */\n  0x25\n    /* \"#utility.yul\":2177:2180   */\n  dup4\n    /* \"#utility.yul\":2118:2185   */\n  tag_41\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2111:2185   */\n  swap2\n  pop\n    /* \"#utility.yul\":2194:2287   */\n  tag_52\n    /* \"#utility.yul\":2283:2286   */\n  dup3\n    /* \"#utility.yul\":2194:2287   */\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2312:2314   */\n  0x40\n    /* \"#utility.yul\":2307:2310   */\n  dup3\n    /* \"#utility.yul\":2303:2315   */\n  add\n    /* \"#utility.yul\":2296:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":1955:2321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2327:2746   */\ntag_16:\n    /* \"#utility.yul\":2493:2497   */\n  0x00\n    /* \"#utility.yul\":2531:2533   */\n  0x20\n    /* \"#utility.yul\":2520:2529   */\n  dup3\n    /* \"#utility.yul\":2516:2534   */\n  add\n    /* \"#utility.yul\":2508:2534   */\n  swap1\n  pop\n    /* \"#utility.yul\":2580:2589   */\n  dup2\n    /* \"#utility.yul\":2574:2578   */\n  dup2\n    /* \"#utility.yul\":2570:2590   */\n  sub\n    /* \"#utility.yul\":2566:2567   */\n  0x00\n    /* \"#utility.yul\":2555:2564   */\n  dup4\n    /* \"#utility.yul\":2551:2568   */\n  add\n    /* \"#utility.yul\":2544:2591   */\n  mstore\n    /* \"#utility.yul\":2608:2739   */\n  tag_55\n    /* \"#utility.yul\":2734:2738   */\n  dup2\n    /* \"#utility.yul\":2608:2739   */\n  tag_38\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2600:2739   */\n  swap1\n  pop\n    /* \"#utility.yul\":2327:2746   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:3171   */\ntag_10:\n    /* \"#utility.yul\":2918:2922   */\n  0x00\n    /* \"#utility.yul\":2956:2958   */\n  0x20\n    /* \"#utility.yul\":2945:2954   */\n  dup3\n    /* \"#utility.yul\":2941:2959   */\n  add\n    /* \"#utility.yul\":2933:2959   */\n  swap1\n  pop\n    /* \"#utility.yul\":3005:3014   */\n  dup2\n    /* \"#utility.yul\":2999:3003   */\n  dup2\n    /* \"#utility.yul\":2995:3015   */\n  sub\n    /* \"#utility.yul\":2991:2992   */\n  0x00\n    /* \"#utility.yul\":2980:2989   */\n  dup4\n    /* \"#utility.yul\":2976:2993   */\n  add\n    /* \"#utility.yul\":2969:3016   */\n  mstore\n    /* \"#utility.yul\":3033:3164   */\n  tag_57\n    /* \"#utility.yul\":3159:3163   */\n  dup2\n    /* \"#utility.yul\":3033:3164   */\n  tag_44\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":3025:3164   */\n  swap1\n  pop\n    /* \"#utility.yul\":2752:3171   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3177:3596   */\ntag_13:\n    /* \"#utility.yul\":3343:3347   */\n  0x00\n    /* \"#utility.yul\":3381:3383   */\n  0x20\n    /* \"#utility.yul\":3370:3379   */\n  dup3\n    /* \"#utility.yul\":3366:3384   */\n  add\n    /* \"#utility.yul\":3358:3384   */\n  swap1\n  pop\n    /* \"#utility.yul\":3430:3439   */\n  dup2\n    /* \"#utility.yul\":3424:3428   */\n  dup2\n    /* \"#utility.yul\":3420:3440   */\n  sub\n    /* \"#utility.yul\":3416:3417   */\n  0x00\n    /* \"#utility.yul\":3405:3414   */\n  dup4\n    /* \"#utility.yul\":3401:3418   */\n  add\n    /* \"#utility.yul\":3394:3441   */\n  mstore\n    /* \"#utility.yul\":3458:3589   */\n  tag_59\n    /* \"#utility.yul\":3584:3588   */\n  dup2\n    /* \"#utility.yul\":3458:3589   */\n  tag_49\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3450:3589   */\n  swap1\n  pop\n    /* \"#utility.yul\":3177:3596   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3683:3852   */\ntag_41:\n    /* \"#utility.yul\":3767:3778   */\n  0x00\n    /* \"#utility.yul\":3801:3807   */\n  dup3\n    /* \"#utility.yul\":3796:3799   */\n  dup3\n    /* \"#utility.yul\":3789:3808   */\n  mstore\n    /* \"#utility.yul\":3841:3845   */\n  0x20\n    /* \"#utility.yul\":3836:3839   */\n  dup3\n    /* \"#utility.yul\":3832:3846   */\n  add\n    /* \"#utility.yul\":3817:3846   */\n  swap1\n  pop\n    /* \"#utility.yul\":3683:3852   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3858:3954   */\ntag_63:\n    /* \"#utility.yul\":3895:3902   */\n  0x00\n    /* \"#utility.yul\":3924:3948   */\n  tag_65\n    /* \"#utility.yul\":3942:3947   */\n  dup3\n    /* \"#utility.yul\":3924:3948   */\n  tag_66\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3913:3948   */\n  swap1\n  pop\n    /* \"#utility.yul\":3858:3954   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3960:4064   */\ntag_67:\n    /* \"#utility.yul\":4005:4012   */\n  0x00\n    /* \"#utility.yul\":4034:4058   */\n  tag_69\n    /* \"#utility.yul\":4052:4057   */\n  dup3\n    /* \"#utility.yul\":4034:4058   */\n  tag_66\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":4023:4058   */\n  swap1\n  pop\n    /* \"#utility.yul\":3960:4064   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4070:4180   */\ntag_70:\n    /* \"#utility.yul\":4121:4128   */\n  0x00\n    /* \"#utility.yul\":4150:4174   */\n  tag_72\n    /* \"#utility.yul\":4168:4173   */\n  dup3\n    /* \"#utility.yul\":4150:4174   */\n  tag_63\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":4139:4174   */\n  swap1\n  pop\n    /* \"#utility.yul\":4070:4180   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4186:4312   */\ntag_66:\n    /* \"#utility.yul\":4223:4230   */\n  0x00\n    /* \"#utility.yul\":4263:4305   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4256:4261   */\n  dup3\n    /* \"#utility.yul\":4252:4306   */\n  and\n    /* \"#utility.yul\":4241:4306   */\n  swap1\n  pop\n    /* \"#utility.yul\":4186:4312   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4318:4395   */\ntag_74:\n    /* \"#utility.yul\":4355:4362   */\n  0x00\n    /* \"#utility.yul\":4384:4389   */\n  dup2\n    /* \"#utility.yul\":4373:4389   */\n  swap1\n  pop\n    /* \"#utility.yul\":4318:4395   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4524:4641   */\ntag_34:\n    /* \"#utility.yul\":4633:4634   */\n  0x00\n    /* \"#utility.yul\":4630:4631   */\n  dup1\n    /* \"#utility.yul\":4623:4635   */\n  revert\n    /* \"#utility.yul\":4647:4870   */\ntag_43:\n    /* \"#utility.yul\":4787:4821   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4783:4784   */\n  0x00\n    /* \"#utility.yul\":4775:4781   */\n  dup3\n    /* \"#utility.yul\":4771:4785   */\n  add\n    /* \"#utility.yul\":4764:4822   */\n  mstore\n    /* \"#utility.yul\":4856:4862   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4851:4853   */\n  0x20\n    /* \"#utility.yul\":4843:4849   */\n  dup3\n    /* \"#utility.yul\":4839:4854   */\n  add\n    /* \"#utility.yul\":4832:4863   */\n  mstore\n    /* \"#utility.yul\":4647:4870   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4876:5046   */\ntag_48:\n    /* \"#utility.yul\":5016:5038   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":5012:5013   */\n  0x00\n    /* \"#utility.yul\":5004:5010   */\n  dup3\n    /* \"#utility.yul\":5000:5014   */\n  add\n    /* \"#utility.yul\":4993:5039   */\n  mstore\n    /* \"#utility.yul\":4876:5046   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5052:5276   */\ntag_53:\n    /* \"#utility.yul\":5192:5226   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":5188:5189   */\n  0x00\n    /* \"#utility.yul\":5180:5186   */\n  dup3\n    /* \"#utility.yul\":5176:5190   */\n  add\n    /* \"#utility.yul\":5169:5227   */\n  mstore\n    /* \"#utility.yul\":5261:5268   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5256:5258   */\n  0x20\n    /* \"#utility.yul\":5248:5254   */\n  dup3\n    /* \"#utility.yul\":5244:5259   */\n  add\n    /* \"#utility.yul\":5237:5269   */\n  mstore\n    /* \"#utility.yul\":5052:5276   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5282:5420   */\ntag_22:\n    /* \"#utility.yul\":5363:5395   */\n  tag_83\n    /* \"#utility.yul\":5389:5394   */\n  dup2\n    /* \"#utility.yul\":5363:5395   */\n  tag_67\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":5356:5361   */\n  dup2\n    /* \"#utility.yul\":5353:5396   */\n  eq\n    /* \"#utility.yul\":5343:5414   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5410:5411   */\n  0x00\n    /* \"#utility.yul\":5407:5408   */\n  dup1\n    /* \"#utility.yul\":5400:5412   */\n  revert\n    /* \"#utility.yul\":5343:5414   */\ntag_84:\n    /* \"#utility.yul\":5282:5420   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5426:5576   */\ntag_26:\n    /* \"#utility.yul\":5513:5551   */\n  tag_86\n    /* \"#utility.yul\":5545:5550   */\n  dup2\n    /* \"#utility.yul\":5513:5551   */\n  tag_70\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":5506:5511   */\n  dup2\n    /* \"#utility.yul\":5503:5552   */\n  eq\n    /* \"#utility.yul\":5493:5570   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":5566:5567   */\n  0x00\n    /* \"#utility.yul\":5563:5564   */\n  dup1\n    /* \"#utility.yul\":5556:5568   */\n  revert\n    /* \"#utility.yul\":5493:5570   */\ntag_87:\n    /* \"#utility.yul\":5426:5576   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5582:5704   */\ntag_30:\n    /* \"#utility.yul\":5655:5679   */\n  tag_89\n    /* \"#utility.yul\":5673:5678   */\n  dup2\n    /* \"#utility.yul\":5655:5679   */\n  tag_74\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":5648:5653   */\n  dup2\n    /* \"#utility.yul\":5645:5680   */\n  eq\n    /* \"#utility.yul\":5635:5698   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":5694:5695   */\n  0x00\n    /* \"#utility.yul\":5691:5692   */\n  dup1\n    /* \"#utility.yul\":5684:5696   */\n  revert\n    /* \"#utility.yul\":5635:5698   */\ntag_90:\n    /* \"#utility.yul\":5582:5704   */\n  pop\n  jump\t// out\n    /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:7396  contract Crowdsale is Context, ReentrancyGuard {\r... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:7396  contract Crowdsale is Context, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x610757e4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x83bebced\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x94a5aa8d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xecd0c0c3\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3245:3268  buyTokens(_msgSender()) */\n      tag_10\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3255:3267  _msgSender() */\n      tag_11\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3255:3265  _msgSender */\n      tag_12\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3255:3267  _msgSender() */\n      jump\t// in\n    tag_11:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3245:3254  buyTokens */\n      tag_13\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3245:3268  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_10:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1071:7396  contract Crowdsale is Context, ReentrancyGuard {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1293:1323  address payable public _wallet */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1620:1640  uint256 public _rate */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1678:1703  uint256 public _weiRaised */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3541:4163  function buyTokens(address beneficiary) public nonReentrant payable {\r... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_13\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1222:1242  IERC20 public _token */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3541:4163  function buyTokens(address beneficiary) public nonReentrant payable {\r... */\n    tag_13:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3620:3637  uint256 weiAmount */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3640:3649  msg.value */\n      callvalue\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3620:3649  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3660:3704  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_42\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3681:3692  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3694:3703  weiAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3660:3680  _preValidatePurchase */\n      tag_43\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3660:3704  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3766:3780  uint256 tokens */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3783:3809  _getTokenAmount(weiAmount) */\n      tag_44\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3799:3808  weiAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3783:3798  _getTokenAmount */\n      tag_45\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3783:3809  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_44:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3766:3809  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3860:3885  _weiRaised.add(weiAmount) */\n      tag_46\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3875:3884  weiAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3860:3870  _weiRaised */\n      sload(0x04)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3860:3874  _weiRaised.add */\n      tag_47\n      swap1\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3860:3885  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3847:3857  _weiRaised */\n      0x04\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3847:3885  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3898:3935  _processPurchase(beneficiary, tokens) */\n      tag_48\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3915:3926  beneficiary */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3928:3934  tokens */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3898:3914  _processPurchase */\n      tag_49\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3898:3935  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_48:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3981:3992  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3951:4012  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3967:3979  _msgSender() */\n      tag_50\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3967:3977  _msgSender */\n      tag_12\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3967:3979  _msgSender() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3951:4012  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3994:4003  weiAmount */\n      dup5\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4005:4011  tokens */\n      dup5\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3951:4012  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4025:4071  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_53\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4048:4059  beneficiary */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4061:4070  weiAmount */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4025:4047  _updatePurchasingState */\n      tag_54\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4025:4071  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4084:4099  _forwardFunds() */\n      tag_55\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4084:4097  _forwardFunds */\n      tag_56\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4084:4099  _forwardFunds() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4110:4155  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_57\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4132:4143  beneficiary */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4145:4154  weiAmount */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4110:4131  _postValidatePurchase */\n      tag_58\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4110:4155  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3609:4163  {\r... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":3541:4163  function buyTokens(address beneficiary) public nonReentrant payable {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1293:1323  address payable public _wallet */\n    tag_16:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1620:1640  uint256 public _rate */\n    tag_21:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1678:1703  uint256 public _weiRaised */\n    tag_26:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":1222:1242  IERC20 public _token */\n    tag_33:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4716:5104  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r... */\n    tag_43:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4850:4851  0 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4827:4852  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4827:4838  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4827:4852  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4819:4899  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4931:4932  0 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4918:4927  weiAmount */\n      dup2\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4918:4932  weiAmount != 0 */\n      eq\n      iszero\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4910:4962  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":4716:5104  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7099:7221  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {\r... */\n    tag_45:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7166:7173  uint256 */\n      0x00\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7193:7213  weiAmount.mul(_rate) */\n      tag_67\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7207:7212  _rate */\n      sload(0x03)\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7193:7202  weiAmount */\n      dup4\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7193:7206  weiAmount.mul */\n      tag_68\n      swap1\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7193:7213  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7186:7213  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7099:7221  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6282:6418  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {\r... */\n    tag_49:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6370:6410  _deliverTokens(beneficiary, tokenAmount) */\n      tag_73\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6385:6396  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6398:6409  tokenAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6370:6384  _deliverTokens */\n      tag_74\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6370:6410  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6282:6418  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":6696:6843  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {\r... */\n    tag_54:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7313:7393  function _forwardFunds() internal {\r... */\n    tag_56:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7358:7365  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7358:7374  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7358:7385  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7375:7384  msg.value */\n      callvalue\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7358:7385  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":7313:7393  function _forwardFunds() internal {\r... */\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5407:5573  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\r... */\n    tag_58:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5861:6008  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r... */\n    tag_74:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5955:6000  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_84\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5975:5986  beneficiary */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5988:5999  tokenAmount */\n      dup3\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5955:5961  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5955:5974  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_85\n      swap1\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5955:6000  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"contracts/crowdsale-contracts/Crowdsale.sol\":5861:6008  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_88\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_93\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_116\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_115)\n    tag_116:\n      0x60\n      swap2\n      pop\n    tag_115:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_120)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_120:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_128:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_130\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_132:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_134\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:624   */\n    tag_30:\n        /* \"#utility.yul\":354:360   */\n      0x00\n        /* \"#utility.yul\":403:405   */\n      0x20\n        /* \"#utility.yul\":391:400   */\n      dup3\n        /* \"#utility.yul\":382:389   */\n      dup5\n        /* \"#utility.yul\":378:401   */\n      sub\n        /* \"#utility.yul\":374:406   */\n      slt\n        /* \"#utility.yul\":371:490   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":409:488   */\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":371:490   */\n    tag_137:\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":554:607   */\n      tag_140\n        /* \"#utility.yul\":599:606   */\n      dup5\n        /* \"#utility.yul\":590:596   */\n      dup3\n        /* \"#utility.yul\":579:588   */\n      dup6\n        /* \"#utility.yul\":575:597   */\n      add\n        /* \"#utility.yul\":554:607   */\n      tag_128\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":544:607   */\n      swap2\n      pop\n        /* \"#utility.yul\":500:617   */\n      pop\n        /* \"#utility.yul\":295:624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":630:975   */\n    tag_96:\n        /* \"#utility.yul\":697:703   */\n      0x00\n        /* \"#utility.yul\":746:748   */\n      0x20\n        /* \"#utility.yul\":734:743   */\n      dup3\n        /* \"#utility.yul\":725:732   */\n      dup5\n        /* \"#utility.yul\":721:744   */\n      sub\n        /* \"#utility.yul\":717:749   */\n      slt\n        /* \"#utility.yul\":714:833   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":752:831   */\n      tag_143\n      tag_139\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":714:833   */\n    tag_142:\n        /* \"#utility.yul\":872:873   */\n      0x00\n        /* \"#utility.yul\":897:958   */\n      tag_144\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":897:958   */\n      tag_132\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":887:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":843:968   */\n      pop\n        /* \"#utility.yul\":630:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1123   */\n    tag_145:\n        /* \"#utility.yul\":1084:1116   */\n      tag_147\n        /* \"#utility.yul\":1110:1115   */\n      dup2\n        /* \"#utility.yul\":1084:1116   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1079:1082   */\n      dup3\n        /* \"#utility.yul\":1072:1117   */\n      mstore\n        /* \"#utility.yul\":981:1123   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1129:1247   */\n    tag_149:\n        /* \"#utility.yul\":1216:1240   */\n      tag_151\n        /* \"#utility.yul\":1234:1239   */\n      dup2\n        /* \"#utility.yul\":1216:1240   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1211:1214   */\n      dup3\n        /* \"#utility.yul\":1204:1241   */\n      mstore\n        /* \"#utility.yul\":1129:1247   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1253:1626   */\n    tag_153:\n        /* \"#utility.yul\":1357:1360   */\n      0x00\n        /* \"#utility.yul\":1385:1423   */\n      tag_155\n        /* \"#utility.yul\":1417:1422   */\n      dup3\n        /* \"#utility.yul\":1385:1423   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1439:1527   */\n      tag_157\n        /* \"#utility.yul\":1520:1526   */\n      dup2\n        /* \"#utility.yul\":1515:1518   */\n      dup6\n        /* \"#utility.yul\":1439:1527   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1432:1527   */\n      swap4\n      pop\n        /* \"#utility.yul\":1536:1588   */\n      tag_159\n        /* \"#utility.yul\":1581:1587   */\n      dup2\n        /* \"#utility.yul\":1576:1579   */\n      dup6\n        /* \"#utility.yul\":1569:1573   */\n      0x20\n        /* \"#utility.yul\":1562:1567   */\n      dup7\n        /* \"#utility.yul\":1558:1574   */\n      add\n        /* \"#utility.yul\":1536:1588   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1613:1619   */\n      dup1\n        /* \"#utility.yul\":1608:1611   */\n      dup5\n        /* \"#utility.yul\":1604:1620   */\n      add\n        /* \"#utility.yul\":1597:1620   */\n      swap2\n      pop\n        /* \"#utility.yul\":1361:1626   */\n      pop\n        /* \"#utility.yul\":1253:1626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1791   */\n    tag_161:\n        /* \"#utility.yul\":1733:1784   */\n      tag_163\n        /* \"#utility.yul\":1778:1783   */\n      dup2\n        /* \"#utility.yul\":1733:1784   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1728:1731   */\n      dup3\n        /* \"#utility.yul\":1721:1785   */\n      mstore\n        /* \"#utility.yul\":1632:1791   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1797:2161   */\n    tag_165:\n        /* \"#utility.yul\":1885:1888   */\n      0x00\n        /* \"#utility.yul\":1913:1952   */\n      tag_167\n        /* \"#utility.yul\":1946:1951   */\n      dup3\n        /* \"#utility.yul\":1913:1952   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1968:2039   */\n      tag_169\n        /* \"#utility.yul\":2032:2038   */\n      dup2\n        /* \"#utility.yul\":2027:2030   */\n      dup6\n        /* \"#utility.yul\":1968:2039   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1961:2039   */\n      swap4\n      pop\n        /* \"#utility.yul\":2048:2100   */\n      tag_171\n        /* \"#utility.yul\":2093:2099   */\n      dup2\n        /* \"#utility.yul\":2088:2091   */\n      dup6\n        /* \"#utility.yul\":2081:2085   */\n      0x20\n        /* \"#utility.yul\":2074:2079   */\n      dup7\n        /* \"#utility.yul\":2070:2086   */\n      add\n        /* \"#utility.yul\":2048:2100   */\n      tag_160\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2125:2154   */\n      tag_172\n        /* \"#utility.yul\":2147:2153   */\n      dup2\n        /* \"#utility.yul\":2125:2154   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2120:2123   */\n      dup5\n        /* \"#utility.yul\":2116:2155   */\n      add\n        /* \"#utility.yul\":2109:2155   */\n      swap2\n      pop\n        /* \"#utility.yul\":1889:2161   */\n      pop\n        /* \"#utility.yul\":1797:2161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2167:2533   */\n    tag_174:\n        /* \"#utility.yul\":2309:2312   */\n      0x00\n        /* \"#utility.yul\":2330:2397   */\n      tag_176\n        /* \"#utility.yul\":2394:2396   */\n      0x26\n        /* \"#utility.yul\":2389:2392   */\n      dup4\n        /* \"#utility.yul\":2330:2397   */\n      tag_170\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2323:2397   */\n      swap2\n      pop\n        /* \"#utility.yul\":2406:2499   */\n      tag_177\n        /* \"#utility.yul\":2495:2498   */\n      dup3\n        /* \"#utility.yul\":2406:2499   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2524:2526   */\n      0x40\n        /* \"#utility.yul\":2519:2522   */\n      dup3\n        /* \"#utility.yul\":2515:2527   */\n      add\n        /* \"#utility.yul\":2508:2527   */\n      swap1\n      pop\n        /* \"#utility.yul\":2167:2533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2905   */\n    tag_179:\n        /* \"#utility.yul\":2681:2684   */\n      0x00\n        /* \"#utility.yul\":2702:2769   */\n      tag_181\n        /* \"#utility.yul\":2766:2768   */\n      0x2a\n        /* \"#utility.yul\":2761:2764   */\n      dup4\n        /* \"#utility.yul\":2702:2769   */\n      tag_170\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2695:2769   */\n      swap2\n      pop\n        /* \"#utility.yul\":2778:2871   */\n      tag_182\n        /* \"#utility.yul\":2867:2870   */\n      dup3\n        /* \"#utility.yul\":2778:2871   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2896:2898   */\n      0x40\n        /* \"#utility.yul\":2891:2894   */\n      dup3\n        /* \"#utility.yul\":2887:2899   */\n      add\n        /* \"#utility.yul\":2880:2899   */\n      swap1\n      pop\n        /* \"#utility.yul\":2539:2905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2911:3277   */\n    tag_184:\n        /* \"#utility.yul\":3053:3056   */\n      0x00\n        /* \"#utility.yul\":3074:3141   */\n      tag_186\n        /* \"#utility.yul\":3138:3140   */\n      0x1d\n        /* \"#utility.yul\":3133:3136   */\n      dup4\n        /* \"#utility.yul\":3074:3141   */\n      tag_170\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3067:3141   */\n      swap2\n      pop\n        /* \"#utility.yul\":3150:3243   */\n      tag_187\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3150:3243   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3268:3270   */\n      0x20\n        /* \"#utility.yul\":3263:3266   */\n      dup3\n        /* \"#utility.yul\":3259:3271   */\n      add\n        /* \"#utility.yul\":3252:3271   */\n      swap1\n      pop\n        /* \"#utility.yul\":2911:3277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3283:3649   */\n    tag_189:\n        /* \"#utility.yul\":3425:3428   */\n      0x00\n        /* \"#utility.yul\":3446:3513   */\n      tag_191\n        /* \"#utility.yul\":3510:3512   */\n      0x2a\n        /* \"#utility.yul\":3505:3508   */\n      dup4\n        /* \"#utility.yul\":3446:3513   */\n      tag_170\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3439:3513   */\n      swap2\n      pop\n        /* \"#utility.yul\":3522:3615   */\n      tag_192\n        /* \"#utility.yul\":3611:3614   */\n      dup3\n        /* \"#utility.yul\":3522:3615   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3640:3642   */\n      0x40\n        /* \"#utility.yul\":3635:3638   */\n      dup3\n        /* \"#utility.yul\":3631:3643   */\n      add\n        /* \"#utility.yul\":3624:3643   */\n      swap1\n      pop\n        /* \"#utility.yul\":3283:3649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3655:4021   */\n    tag_194:\n        /* \"#utility.yul\":3797:3800   */\n      0x00\n        /* \"#utility.yul\":3818:3885   */\n      tag_196\n        /* \"#utility.yul\":3882:3884   */\n      0x1f\n        /* \"#utility.yul\":3877:3880   */\n      dup4\n        /* \"#utility.yul\":3818:3885   */\n      tag_170\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3811:3885   */\n      swap2\n      pop\n        /* \"#utility.yul\":3894:3987   */\n      tag_197\n        /* \"#utility.yul\":3983:3986   */\n      dup3\n        /* \"#utility.yul\":3894:3987   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4012:4014   */\n      0x20\n        /* \"#utility.yul\":4007:4010   */\n      dup3\n        /* \"#utility.yul\":4003:4015   */\n      add\n        /* \"#utility.yul\":3996:4015   */\n      swap1\n      pop\n        /* \"#utility.yul\":3655:4021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4027:4393   */\n    tag_199:\n        /* \"#utility.yul\":4169:4172   */\n      0x00\n        /* \"#utility.yul\":4190:4257   */\n      tag_201\n        /* \"#utility.yul\":4254:4256   */\n      0x19\n        /* \"#utility.yul\":4249:4252   */\n      dup4\n        /* \"#utility.yul\":4190:4257   */\n      tag_170\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4183:4257   */\n      swap2\n      pop\n        /* \"#utility.yul\":4266:4359   */\n      tag_202\n        /* \"#utility.yul\":4355:4358   */\n      dup3\n        /* \"#utility.yul\":4266:4359   */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"#utility.yul\":4379:4382   */\n      dup3\n        /* \"#utility.yul\":4375:4387   */\n      add\n        /* \"#utility.yul\":4368:4387   */\n      swap1\n      pop\n        /* \"#utility.yul\":4027:4393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4399:4517   */\n    tag_204:\n        /* \"#utility.yul\":4486:4510   */\n      tag_206\n        /* \"#utility.yul\":4504:4509   */\n      dup2\n        /* \"#utility.yul\":4486:4510   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4481:4484   */\n      dup3\n        /* \"#utility.yul\":4474:4511   */\n      mstore\n        /* \"#utility.yul\":4399:4517   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4523:4794   */\n    tag_113:\n        /* \"#utility.yul\":4653:4656   */\n      0x00\n        /* \"#utility.yul\":4675:4768   */\n      tag_209\n        /* \"#utility.yul\":4764:4767   */\n      dup3\n        /* \"#utility.yul\":4755:4761   */\n      dup5\n        /* \"#utility.yul\":4675:4768   */\n      tag_153\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4668:4768   */\n      swap2\n      pop\n        /* \"#utility.yul\":4785:4788   */\n      dup2\n        /* \"#utility.yul\":4778:4788   */\n      swap1\n      pop\n        /* \"#utility.yul\":4523:4794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4800:5054   */\n    tag_18:\n        /* \"#utility.yul\":4909:4913   */\n      0x00\n        /* \"#utility.yul\":4947:4949   */\n      0x20\n        /* \"#utility.yul\":4936:4945   */\n      dup3\n        /* \"#utility.yul\":4932:4950   */\n      add\n        /* \"#utility.yul\":4924:4950   */\n      swap1\n      pop\n        /* \"#utility.yul\":4960:5047   */\n      tag_211\n        /* \"#utility.yul\":5044:5045   */\n      0x00\n        /* \"#utility.yul\":5033:5042   */\n      dup4\n        /* \"#utility.yul\":5029:5046   */\n      add\n        /* \"#utility.yul\":5020:5026   */\n      dup5\n        /* \"#utility.yul\":4960:5047   */\n      tag_145\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4800:5054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5392   */\n    tag_89:\n        /* \"#utility.yul\":5181:5185   */\n      0x00\n        /* \"#utility.yul\":5219:5221   */\n      0x40\n        /* \"#utility.yul\":5208:5217   */\n      dup3\n        /* \"#utility.yul\":5204:5222   */\n      add\n        /* \"#utility.yul\":5196:5222   */\n      swap1\n      pop\n        /* \"#utility.yul\":5232:5303   */\n      tag_213\n        /* \"#utility.yul\":5300:5301   */\n      0x00\n        /* \"#utility.yul\":5289:5298   */\n      dup4\n        /* \"#utility.yul\":5285:5302   */\n      add\n        /* \"#utility.yul\":5276:5282   */\n      dup6\n        /* \"#utility.yul\":5232:5303   */\n      tag_149\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5313:5385   */\n      tag_214\n        /* \"#utility.yul\":5381:5383   */\n      0x20\n        /* \"#utility.yul\":5370:5379   */\n      dup4\n        /* \"#utility.yul\":5366:5384   */\n      add\n        /* \"#utility.yul\":5357:5363   */\n      dup5\n        /* \"#utility.yul\":5313:5385   */\n      tag_204\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5060:5392   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5398:5648   */\n    tag_35:\n        /* \"#utility.yul\":5505:5509   */\n      0x00\n        /* \"#utility.yul\":5543:5545   */\n      0x20\n        /* \"#utility.yul\":5532:5541   */\n      dup3\n        /* \"#utility.yul\":5528:5546   */\n      add\n        /* \"#utility.yul\":5520:5546   */\n      swap1\n      pop\n        /* \"#utility.yul\":5556:5641   */\n      tag_216\n        /* \"#utility.yul\":5638:5639   */\n      0x00\n        /* \"#utility.yul\":5627:5636   */\n      dup4\n        /* \"#utility.yul\":5623:5640   */\n      add\n        /* \"#utility.yul\":5614:5620   */\n      dup5\n        /* \"#utility.yul\":5556:5641   */\n      tag_161\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5398:5648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5654:5967   */\n    tag_126:\n        /* \"#utility.yul\":5767:5771   */\n      0x00\n        /* \"#utility.yul\":5805:5807   */\n      0x20\n        /* \"#utility.yul\":5794:5803   */\n      dup3\n        /* \"#utility.yul\":5790:5808   */\n      add\n        /* \"#utility.yul\":5782:5808   */\n      swap1\n      pop\n        /* \"#utility.yul\":5854:5863   */\n      dup2\n        /* \"#utility.yul\":5848:5852   */\n      dup2\n        /* \"#utility.yul\":5844:5864   */\n      sub\n        /* \"#utility.yul\":5840:5841   */\n      0x00\n        /* \"#utility.yul\":5829:5838   */\n      dup4\n        /* \"#utility.yul\":5825:5842   */\n      add\n        /* \"#utility.yul\":5818:5865   */\n      mstore\n        /* \"#utility.yul\":5882:5960   */\n      tag_218\n        /* \"#utility.yul\":5955:5959   */\n      dup2\n        /* \"#utility.yul\":5946:5952   */\n      dup5\n        /* \"#utility.yul\":5882:5960   */\n      tag_165\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5874:5960   */\n      swap1\n      pop\n        /* \"#utility.yul\":5654:5967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5973:6392   */\n    tag_106:\n        /* \"#utility.yul\":6139:6143   */\n      0x00\n        /* \"#utility.yul\":6177:6179   */\n      0x20\n        /* \"#utility.yul\":6166:6175   */\n      dup3\n        /* \"#utility.yul\":6162:6180   */\n      add\n        /* \"#utility.yul\":6154:6180   */\n      swap1\n      pop\n        /* \"#utility.yul\":6226:6235   */\n      dup2\n        /* \"#utility.yul\":6220:6224   */\n      dup2\n        /* \"#utility.yul\":6216:6236   */\n      sub\n        /* \"#utility.yul\":6212:6213   */\n      0x00\n        /* \"#utility.yul\":6201:6210   */\n      dup4\n        /* \"#utility.yul\":6197:6214   */\n      add\n        /* \"#utility.yul\":6190:6237   */\n      mstore\n        /* \"#utility.yul\":6254:6385   */\n      tag_220\n        /* \"#utility.yul\":6380:6384   */\n      dup2\n        /* \"#utility.yul\":6254:6385   */\n      tag_174\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6246:6385   */\n      swap1\n      pop\n        /* \"#utility.yul\":5973:6392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6398:6817   */\n    tag_62:\n        /* \"#utility.yul\":6564:6568   */\n      0x00\n        /* \"#utility.yul\":6602:6604   */\n      0x20\n        /* \"#utility.yul\":6591:6600   */\n      dup3\n        /* \"#utility.yul\":6587:6605   */\n      add\n        /* \"#utility.yul\":6579:6605   */\n      swap1\n      pop\n        /* \"#utility.yul\":6651:6660   */\n      dup2\n        /* \"#utility.yul\":6645:6649   */\n      dup2\n        /* \"#utility.yul\":6641:6661   */\n      sub\n        /* \"#utility.yul\":6637:6638   */\n      0x00\n        /* \"#utility.yul\":6626:6635   */\n      dup4\n        /* \"#utility.yul\":6622:6639   */\n      add\n        /* \"#utility.yul\":6615:6662   */\n      mstore\n        /* \"#utility.yul\":6679:6810   */\n      tag_222\n        /* \"#utility.yul\":6805:6809   */\n      dup2\n        /* \"#utility.yul\":6679:6810   */\n      tag_179\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6671:6810   */\n      swap1\n      pop\n        /* \"#utility.yul\":6398:6817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6823:7242   */\n    tag_111:\n        /* \"#utility.yul\":6989:6993   */\n      0x00\n        /* \"#utility.yul\":7027:7029   */\n      0x20\n        /* \"#utility.yul\":7016:7025   */\n      dup3\n        /* \"#utility.yul\":7012:7030   */\n      add\n        /* \"#utility.yul\":7004:7030   */\n      swap1\n      pop\n        /* \"#utility.yul\":7076:7085   */\n      dup2\n        /* \"#utility.yul\":7070:7074   */\n      dup2\n        /* \"#utility.yul\":7066:7086   */\n      sub\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7051:7060   */\n      dup4\n        /* \"#utility.yul\":7047:7064   */\n      add\n        /* \"#utility.yul\":7040:7087   */\n      mstore\n        /* \"#utility.yul\":7104:7235   */\n      tag_224\n        /* \"#utility.yul\":7230:7234   */\n      dup2\n        /* \"#utility.yul\":7104:7235   */\n      tag_184\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7096:7235   */\n      swap1\n      pop\n        /* \"#utility.yul\":6823:7242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7248:7667   */\n    tag_99:\n        /* \"#utility.yul\":7414:7418   */\n      0x00\n        /* \"#utility.yul\":7452:7454   */\n      0x20\n        /* \"#utility.yul\":7441:7450   */\n      dup3\n        /* \"#utility.yul\":7437:7455   */\n      add\n        /* \"#utility.yul\":7429:7455   */\n      swap1\n      pop\n        /* \"#utility.yul\":7501:7510   */\n      dup2\n        /* \"#utility.yul\":7495:7499   */\n      dup2\n        /* \"#utility.yul\":7491:7511   */\n      sub\n        /* \"#utility.yul\":7487:7488   */\n      0x00\n        /* \"#utility.yul\":7476:7485   */\n      dup4\n        /* \"#utility.yul\":7472:7489   */\n      add\n        /* \"#utility.yul\":7465:7512   */\n      mstore\n        /* \"#utility.yul\":7529:7660   */\n      tag_226\n        /* \"#utility.yul\":7655:7659   */\n      dup2\n        /* \"#utility.yul\":7529:7660   */\n      tag_189\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7521:7660   */\n      swap1\n      pop\n        /* \"#utility.yul\":7248:7667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7673:8092   */\n    tag_40:\n        /* \"#utility.yul\":7839:7843   */\n      0x00\n        /* \"#utility.yul\":7877:7879   */\n      0x20\n        /* \"#utility.yul\":7866:7875   */\n      dup3\n        /* \"#utility.yul\":7862:7880   */\n      add\n        /* \"#utility.yul\":7854:7880   */\n      swap1\n      pop\n        /* \"#utility.yul\":7926:7935   */\n      dup2\n        /* \"#utility.yul\":7920:7924   */\n      dup2\n        /* \"#utility.yul\":7916:7936   */\n      sub\n        /* \"#utility.yul\":7912:7913   */\n      0x00\n        /* \"#utility.yul\":7901:7910   */\n      dup4\n        /* \"#utility.yul\":7897:7914   */\n      add\n        /* \"#utility.yul\":7890:7937   */\n      mstore\n        /* \"#utility.yul\":7954:8085   */\n      tag_228\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":7954:8085   */\n      tag_194\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7946:8085   */\n      swap1\n      pop\n        /* \"#utility.yul\":7673:8092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8098:8517   */\n    tag_65:\n        /* \"#utility.yul\":8264:8268   */\n      0x00\n        /* \"#utility.yul\":8302:8304   */\n      0x20\n        /* \"#utility.yul\":8291:8300   */\n      dup3\n        /* \"#utility.yul\":8287:8305   */\n      add\n        /* \"#utility.yul\":8279:8305   */\n      swap1\n      pop\n        /* \"#utility.yul\":8351:8360   */\n      dup2\n        /* \"#utility.yul\":8345:8349   */\n      dup2\n        /* \"#utility.yul\":8341:8361   */\n      sub\n        /* \"#utility.yul\":8337:8338   */\n      0x00\n        /* \"#utility.yul\":8326:8335   */\n      dup4\n        /* \"#utility.yul\":8322:8339   */\n      add\n        /* \"#utility.yul\":8315:8362   */\n      mstore\n        /* \"#utility.yul\":8379:8510   */\n      tag_230\n        /* \"#utility.yul\":8505:8509   */\n      dup2\n        /* \"#utility.yul\":8379:8510   */\n      tag_199\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":8371:8510   */\n      swap1\n      pop\n        /* \"#utility.yul\":8098:8517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8523:8745   */\n    tag_23:\n        /* \"#utility.yul\":8616:8620   */\n      0x00\n        /* \"#utility.yul\":8654:8656   */\n      0x20\n        /* \"#utility.yul\":8643:8652   */\n      dup3\n        /* \"#utility.yul\":8639:8657   */\n      add\n        /* \"#utility.yul\":8631:8657   */\n      swap1\n      pop\n        /* \"#utility.yul\":8667:8738   */\n      tag_232\n        /* \"#utility.yul\":8735:8736   */\n      0x00\n        /* \"#utility.yul\":8724:8733   */\n      dup4\n        /* \"#utility.yul\":8720:8737   */\n      add\n        /* \"#utility.yul\":8711:8717   */\n      dup5\n        /* \"#utility.yul\":8667:8738   */\n      tag_204\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":8523:8745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8751:9083   */\n    tag_52:\n        /* \"#utility.yul\":8872:8876   */\n      0x00\n        /* \"#utility.yul\":8910:8912   */\n      0x40\n        /* \"#utility.yul\":8899:8908   */\n      dup3\n        /* \"#utility.yul\":8895:8913   */\n      add\n        /* \"#utility.yul\":8887:8913   */\n      swap1\n      pop\n        /* \"#utility.yul\":8923:8994   */\n      tag_234\n        /* \"#utility.yul\":8991:8992   */\n      0x00\n        /* \"#utility.yul\":8980:8989   */\n      dup4\n        /* \"#utility.yul\":8976:8993   */\n      add\n        /* \"#utility.yul\":8967:8973   */\n      dup6\n        /* \"#utility.yul\":8923:8994   */\n      tag_204\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":9004:9076   */\n      tag_235\n        /* \"#utility.yul\":9072:9074   */\n      0x20\n        /* \"#utility.yul\":9061:9070   */\n      dup4\n        /* \"#utility.yul\":9057:9075   */\n      add\n        /* \"#utility.yul\":9048:9054   */\n      dup5\n        /* \"#utility.yul\":9004:9076   */\n      tag_204\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8751:9083   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9170:9268   */\n    tag_156:\n        /* \"#utility.yul\":9221:9227   */\n      0x00\n        /* \"#utility.yul\":9255:9260   */\n      dup2\n        /* \"#utility.yul\":9249:9261   */\n      mload\n        /* \"#utility.yul\":9239:9261   */\n      swap1\n      pop\n        /* \"#utility.yul\":9170:9268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9274:9373   */\n    tag_168:\n        /* \"#utility.yul\":9326:9332   */\n      0x00\n        /* \"#utility.yul\":9360:9365   */\n      dup2\n        /* \"#utility.yul\":9354:9366   */\n      mload\n        /* \"#utility.yul\":9344:9366   */\n      swap1\n      pop\n        /* \"#utility.yul\":9274:9373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9379:9526   */\n    tag_158:\n        /* \"#utility.yul\":9480:9491   */\n      0x00\n        /* \"#utility.yul\":9517:9520   */\n      dup2\n        /* \"#utility.yul\":9502:9520   */\n      swap1\n      pop\n        /* \"#utility.yul\":9379:9526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9532:9701   */\n    tag_170:\n        /* \"#utility.yul\":9616:9627   */\n      0x00\n        /* \"#utility.yul\":9650:9656   */\n      dup3\n        /* \"#utility.yul\":9645:9648   */\n      dup3\n        /* \"#utility.yul\":9638:9657   */\n      mstore\n        /* \"#utility.yul\":9690:9694   */\n      0x20\n        /* \"#utility.yul\":9685:9688   */\n      dup3\n        /* \"#utility.yul\":9681:9695   */\n      add\n        /* \"#utility.yul\":9666:9695   */\n      swap1\n      pop\n        /* \"#utility.yul\":9532:9701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9707:10012   */\n    tag_71:\n        /* \"#utility.yul\":9747:9750   */\n      0x00\n        /* \"#utility.yul\":9766:9786   */\n      tag_243\n        /* \"#utility.yul\":9784:9785   */\n      dup3\n        /* \"#utility.yul\":9766:9786   */\n      tag_207\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9761:9786   */\n      swap2\n      pop\n        /* \"#utility.yul\":9800:9820   */\n      tag_244\n        /* \"#utility.yul\":9818:9819   */\n      dup4\n        /* \"#utility.yul\":9800:9820   */\n      tag_207\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9795:9820   */\n      swap3\n      pop\n        /* \"#utility.yul\":9954:9955   */\n      dup3\n        /* \"#utility.yul\":9886:9952   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9882:9956   */\n      sub\n        /* \"#utility.yul\":9879:9880   */\n      dup3\n        /* \"#utility.yul\":9876:9957   */\n      gt\n        /* \"#utility.yul\":9873:9980   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":9960:9978   */\n      tag_246\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9873:9980   */\n    tag_245:\n        /* \"#utility.yul\":10004:10005   */\n      dup3\n        /* \"#utility.yul\":10001:10002   */\n      dup3\n        /* \"#utility.yul\":9997:10006   */\n      add\n        /* \"#utility.yul\":9990:10006   */\n      swap1\n      pop\n        /* \"#utility.yul\":9707:10012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10018:10366   */\n    tag_82:\n        /* \"#utility.yul\":10058:10065   */\n      0x00\n        /* \"#utility.yul\":10081:10101   */\n      tag_249\n        /* \"#utility.yul\":10099:10100   */\n      dup3\n        /* \"#utility.yul\":10081:10101   */\n      tag_207\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":10076:10101   */\n      swap2\n      pop\n        /* \"#utility.yul\":10115:10135   */\n      tag_250\n        /* \"#utility.yul\":10133:10134   */\n      dup4\n        /* \"#utility.yul\":10115:10135   */\n      tag_207\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":10110:10135   */\n      swap3\n      pop\n        /* \"#utility.yul\":10303:10304   */\n      dup2\n        /* \"#utility.yul\":10235:10301   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10231:10305   */\n      div\n        /* \"#utility.yul\":10228:10229   */\n      dup4\n        /* \"#utility.yul\":10225:10306   */\n      gt\n        /* \"#utility.yul\":10220:10221   */\n      dup3\n        /* \"#utility.yul\":10213:10222   */\n      iszero\n        /* \"#utility.yul\":10206:10223   */\n      iszero\n        /* \"#utility.yul\":10202:10307   */\n      and\n        /* \"#utility.yul\":10199:10330   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":10310:10328   */\n      tag_252\n      tag_247\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":10199:10330   */\n    tag_251:\n        /* \"#utility.yul\":10358:10359   */\n      dup3\n        /* \"#utility.yul\":10355:10356   */\n      dup3\n        /* \"#utility.yul\":10351:10360   */\n      mul\n        /* \"#utility.yul\":10340:10360   */\n      swap1\n      pop\n        /* \"#utility.yul\":10018:10366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10372:10468   */\n    tag_152:\n        /* \"#utility.yul\":10409:10416   */\n      0x00\n        /* \"#utility.yul\":10438:10462   */\n      tag_254\n        /* \"#utility.yul\":10456:10461   */\n      dup3\n        /* \"#utility.yul\":10438:10462   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":10427:10462   */\n      swap1\n      pop\n        /* \"#utility.yul\":10372:10468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10474:10578   */\n    tag_148:\n        /* \"#utility.yul\":10519:10526   */\n      0x00\n        /* \"#utility.yul\":10548:10572   */\n      tag_257\n        /* \"#utility.yul\":10566:10571   */\n      dup3\n        /* \"#utility.yul\":10548:10572   */\n      tag_255\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10537:10572   */\n      swap1\n      pop\n        /* \"#utility.yul\":10474:10578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10584:10674   */\n    tag_258:\n        /* \"#utility.yul\":10618:10625   */\n      0x00\n        /* \"#utility.yul\":10661:10666   */\n      dup2\n        /* \"#utility.yul\":10654:10667   */\n      iszero\n        /* \"#utility.yul\":10647:10668   */\n      iszero\n        /* \"#utility.yul\":10636:10668   */\n      swap1\n      pop\n        /* \"#utility.yul\":10584:10674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10680:10806   */\n    tag_255:\n        /* \"#utility.yul\":10717:10724   */\n      0x00\n        /* \"#utility.yul\":10757:10799   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10750:10755   */\n      dup3\n        /* \"#utility.yul\":10746:10800   */\n      and\n        /* \"#utility.yul\":10735:10800   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10812:10889   */\n    tag_207:\n        /* \"#utility.yul\":10849:10856   */\n      0x00\n        /* \"#utility.yul\":10878:10883   */\n      dup2\n        /* \"#utility.yul\":10867:10883   */\n      swap1\n      pop\n        /* \"#utility.yul\":10812:10889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10895:11035   */\n    tag_164:\n        /* \"#utility.yul\":10959:10968   */\n      0x00\n        /* \"#utility.yul\":10992:11029   */\n      tag_263\n        /* \"#utility.yul\":11023:11028   */\n      dup3\n        /* \"#utility.yul\":10992:11029   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10979:11029   */\n      swap1\n      pop\n        /* \"#utility.yul\":10895:11035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11041:11167   */\n    tag_264:\n        /* \"#utility.yul\":11091:11100   */\n      0x00\n        /* \"#utility.yul\":11124:11161   */\n      tag_266\n        /* \"#utility.yul\":11155:11160   */\n      dup3\n        /* \"#utility.yul\":11124:11161   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":11111:11161   */\n      swap1\n      pop\n        /* \"#utility.yul\":11041:11167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11173:11286   */\n    tag_267:\n        /* \"#utility.yul\":11223:11232   */\n      0x00\n        /* \"#utility.yul\":11256:11280   */\n      tag_269\n        /* \"#utility.yul\":11274:11279   */\n      dup3\n        /* \"#utility.yul\":11256:11280   */\n      tag_255\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":11243:11280   */\n      swap1\n      pop\n        /* \"#utility.yul\":11173:11286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11292:11599   */\n    tag_160:\n        /* \"#utility.yul\":11360:11361   */\n      0x00\n        /* \"#utility.yul\":11370:11483   */\n    tag_271:\n        /* \"#utility.yul\":11384:11390   */\n      dup4\n        /* \"#utility.yul\":11381:11382   */\n      dup2\n        /* \"#utility.yul\":11378:11391   */\n      lt\n        /* \"#utility.yul\":11370:11483   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":11469:11470   */\n      dup1\n        /* \"#utility.yul\":11464:11467   */\n      dup3\n        /* \"#utility.yul\":11460:11471   */\n      add\n        /* \"#utility.yul\":11454:11472   */\n      mload\n        /* \"#utility.yul\":11450:11451   */\n      dup2\n        /* \"#utility.yul\":11445:11448   */\n      dup5\n        /* \"#utility.yul\":11441:11452   */\n      add\n        /* \"#utility.yul\":11434:11473   */\n      mstore\n        /* \"#utility.yul\":11406:11408   */\n      0x20\n        /* \"#utility.yul\":11403:11404   */\n      dup2\n        /* \"#utility.yul\":11399:11409   */\n      add\n        /* \"#utility.yul\":11394:11409   */\n      swap1\n      pop\n        /* \"#utility.yul\":11370:11483   */\n      jump(tag_271)\n    tag_273:\n        /* \"#utility.yul\":11501:11507   */\n      dup4\n        /* \"#utility.yul\":11498:11499   */\n      dup2\n        /* \"#utility.yul\":11495:11508   */\n      gt\n        /* \"#utility.yul\":11492:11593   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":11581:11582   */\n      0x00\n        /* \"#utility.yul\":11572:11578   */\n      dup5\n        /* \"#utility.yul\":11567:11570   */\n      dup5\n        /* \"#utility.yul\":11563:11579   */\n      add\n        /* \"#utility.yul\":11556:11583   */\n      mstore\n        /* \"#utility.yul\":11492:11593   */\n    tag_274:\n        /* \"#utility.yul\":11341:11599   */\n      pop\n        /* \"#utility.yul\":11292:11599   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11605:11785   */\n    tag_247:\n        /* \"#utility.yul\":11653:11730   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11650:11651   */\n      0x00\n        /* \"#utility.yul\":11643:11731   */\n      mstore\n        /* \"#utility.yul\":11750:11754   */\n      0x11\n        /* \"#utility.yul\":11747:11748   */\n      0x04\n        /* \"#utility.yul\":11740:11755   */\n      mstore\n        /* \"#utility.yul\":11774:11778   */\n      0x24\n        /* \"#utility.yul\":11771:11772   */\n      0x00\n        /* \"#utility.yul\":11764:11779   */\n      revert\n        /* \"#utility.yul\":11914:12031   */\n    tag_139:\n        /* \"#utility.yul\":12023:12024   */\n      0x00\n        /* \"#utility.yul\":12020:12021   */\n      dup1\n        /* \"#utility.yul\":12013:12025   */\n      revert\n        /* \"#utility.yul\":12037:12139   */\n    tag_173:\n        /* \"#utility.yul\":12078:12084   */\n      0x00\n        /* \"#utility.yul\":12129:12131   */\n      0x1f\n        /* \"#utility.yul\":12125:12132   */\n      not\n        /* \"#utility.yul\":12120:12122   */\n      0x1f\n        /* \"#utility.yul\":12113:12118   */\n      dup4\n        /* \"#utility.yul\":12109:12123   */\n      add\n        /* \"#utility.yul\":12105:12133   */\n      and\n        /* \"#utility.yul\":12095:12133   */\n      swap1\n      pop\n        /* \"#utility.yul\":12037:12139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12145:12370   */\n    tag_178:\n        /* \"#utility.yul\":12285:12319   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12281:12282   */\n      0x00\n        /* \"#utility.yul\":12273:12279   */\n      dup3\n        /* \"#utility.yul\":12269:12283   */\n      add\n        /* \"#utility.yul\":12262:12320   */\n      mstore\n        /* \"#utility.yul\":12354:12362   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12349:12351   */\n      0x20\n        /* \"#utility.yul\":12341:12347   */\n      dup3\n        /* \"#utility.yul\":12337:12352   */\n      add\n        /* \"#utility.yul\":12330:12363   */\n      mstore\n        /* \"#utility.yul\":12145:12370   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12376:12605   */\n    tag_183:\n        /* \"#utility.yul\":12516:12550   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":12512:12513   */\n      0x00\n        /* \"#utility.yul\":12504:12510   */\n      dup3\n        /* \"#utility.yul\":12500:12514   */\n      add\n        /* \"#utility.yul\":12493:12551   */\n      mstore\n        /* \"#utility.yul\":12585:12597   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12580:12582   */\n      0x20\n        /* \"#utility.yul\":12572:12578   */\n      dup3\n        /* \"#utility.yul\":12568:12583   */\n      add\n        /* \"#utility.yul\":12561:12598   */\n      mstore\n        /* \"#utility.yul\":12376:12605   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12611:12790   */\n    tag_188:\n        /* \"#utility.yul\":12751:12782   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":12747:12748   */\n      0x00\n        /* \"#utility.yul\":12739:12745   */\n      dup3\n        /* \"#utility.yul\":12735:12749   */\n      add\n        /* \"#utility.yul\":12728:12783   */\n      mstore\n        /* \"#utility.yul\":12611:12790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12796:13025   */\n    tag_193:\n        /* \"#utility.yul\":12936:12970   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":12932:12933   */\n      0x00\n        /* \"#utility.yul\":12924:12930   */\n      dup3\n        /* \"#utility.yul\":12920:12934   */\n      add\n        /* \"#utility.yul\":12913:12971   */\n      mstore\n        /* \"#utility.yul\":13005:13017   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13000:13002   */\n      0x20\n        /* \"#utility.yul\":12992:12998   */\n      dup3\n        /* \"#utility.yul\":12988:13003   */\n      add\n        /* \"#utility.yul\":12981:13018   */\n      mstore\n        /* \"#utility.yul\":12796:13025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13031:13212   */\n    tag_198:\n        /* \"#utility.yul\":13171:13204   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13167:13168   */\n      0x00\n        /* \"#utility.yul\":13159:13165   */\n      dup3\n        /* \"#utility.yul\":13155:13169   */\n      add\n        /* \"#utility.yul\":13148:13205   */\n      mstore\n        /* \"#utility.yul\":13031:13212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13218:13393   */\n    tag_203:\n        /* \"#utility.yul\":13358:13385   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":13354:13355   */\n      0x00\n        /* \"#utility.yul\":13346:13352   */\n      dup3\n        /* \"#utility.yul\":13342:13356   */\n      add\n        /* \"#utility.yul\":13335:13386   */\n      mstore\n        /* \"#utility.yul\":13218:13393   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13399:13521   */\n    tag_131:\n        /* \"#utility.yul\":13472:13496   */\n      tag_287\n        /* \"#utility.yul\":13490:13495   */\n      dup2\n        /* \"#utility.yul\":13472:13496   */\n      tag_152\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":13465:13470   */\n      dup2\n        /* \"#utility.yul\":13462:13497   */\n      eq\n        /* \"#utility.yul\":13452:13515   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":13511:13512   */\n      0x00\n        /* \"#utility.yul\":13508:13509   */\n      dup1\n        /* \"#utility.yul\":13501:13513   */\n      revert\n        /* \"#utility.yul\":13452:13515   */\n    tag_288:\n        /* \"#utility.yul\":13399:13521   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13527:13643   */\n    tag_135:\n        /* \"#utility.yul\":13597:13618   */\n      tag_290\n        /* \"#utility.yul\":13612:13617   */\n      dup2\n        /* \"#utility.yul\":13597:13618   */\n      tag_258\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":13590:13595   */\n      dup2\n        /* \"#utility.yul\":13587:13619   */\n      eq\n        /* \"#utility.yul\":13577:13637   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":13633:13634   */\n      0x00\n        /* \"#utility.yul\":13630:13631   */\n      dup1\n        /* \"#utility.yul\":13623:13635   */\n      revert\n        /* \"#utility.yul\":13577:13637   */\n    tag_291:\n        /* \"#utility.yul\":13527:13643   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209970ce7449ad0ebcfc6704f978ab4d35a740ebc1e352d00f40dde6801210c41864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1063": {
									"entryPoint": null,
									"id": 1063,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$117_fromMemory": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$117_fromMemory": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$117": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$117": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5707:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "88:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "97:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "154:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "119:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:41:7"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "56:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "64:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:7",
														"type": ""
													}
												],
												"src": "7:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "249:94:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "259:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "274:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "268:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "259:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "331:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$117",
																	"nodeType": "YulIdentifier",
																	"src": "290:40:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "290:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$117_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "227:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "235:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "243:5:7",
														"type": ""
													}
												],
												"src": "172:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "412:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "422:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "422:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "480:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "453:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "453:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "453:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "390:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "398:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "406:5:7",
														"type": ""
													}
												],
												"src": "349:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "631:574:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "677:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "679:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "679:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "679:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "652:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "661:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "648:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "648:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:32:7"
															},
															"nodeType": "YulIf",
															"src": "641:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "770:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "785:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "799:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "789:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "814:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "860:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "871:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "856:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "856:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "880:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "824:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "824:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "814:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "908:137:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "923:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "927:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "953:82:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1007:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1018:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1003:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1027:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "963:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:72:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "953:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1055:143:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1070:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1084:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1074:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1100:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1160:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1171:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1156:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1180:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$117_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1110:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1100:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$117_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "585:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "596:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "608:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "616:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "624:6:7",
														"type": ""
													}
												],
												"src": "498:707:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1357:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1367:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1433:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1438:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1374:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1367:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1539:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nodeType": "YulIdentifier",
																	"src": "1450:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1552:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1563:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1568:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1559:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1552:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1345:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1353:3:7",
														"type": ""
													}
												],
												"src": "1211:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1729:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1739:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1805:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1746:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1739:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1911:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nodeType": "YulIdentifier",
																	"src": "1822:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1822:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1822:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1924:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1935:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1940:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1924:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1717:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1725:3:7",
														"type": ""
													}
												],
												"src": "1583:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2111:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2177:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2118:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2111:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2283:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nodeType": "YulIdentifier",
																	"src": "2194:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2194:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2296:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2307:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2089:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2097:3:7",
														"type": ""
													}
												],
												"src": "1955:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2498:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2508:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2520:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2531:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2516:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2508:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2555:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2566:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2551:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2551:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2574:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2580:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2570:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2570:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2544:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2544:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2600:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2734:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2608:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2608:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2600:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2478:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2493:4:7",
														"type": ""
													}
												],
												"src": "2327:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2923:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2933:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2945:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2956:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2941:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2933:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2980:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2991:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2976:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2999:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2969:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3025:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3159:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3033:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3025:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2903:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2918:4:7",
														"type": ""
													}
												],
												"src": "2752:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3348:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3358:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3416:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3401:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3424:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3394:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3450:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3584:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3458:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3450:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3328:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3343:4:7",
														"type": ""
													}
												],
												"src": "3177:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3642:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3652:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3668:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3662:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3635:6:7",
														"type": ""
													}
												],
												"src": "3602:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3779:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3801:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3789:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3789:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3817:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3836:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3841:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3832:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3832:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3817:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3751:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3756:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3767:11:7",
														"type": ""
													}
												],
												"src": "3683:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3903:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3913:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3942:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3924:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3913:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3885:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3895:7:7",
														"type": ""
													}
												],
												"src": "3858:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4013:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4023:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4052:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4034:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4023:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3995:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4005:7:7",
														"type": ""
													}
												],
												"src": "3960:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4129:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4139:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4168:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4150:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4150:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4139:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$117",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4111:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4121:7:7",
														"type": ""
													}
												],
												"src": "4070:110:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4241:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4256:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4252:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4252:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4241:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4213:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4223:7:7",
														"type": ""
													}
												],
												"src": "4186:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4363:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4373:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4384:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4373:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4345:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4355:7:7",
														"type": ""
													}
												],
												"src": "4318:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4490:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4507:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4510:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4500:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4500:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4401:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4613:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4630:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4633:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4623:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4524:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4753:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4775:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4783:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4771:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4787:34:7",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4764:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4843:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4851:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4839:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:15:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4856:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4832:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4745:6:7",
														"type": ""
													}
												],
												"src": "4647:223:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5004:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5012:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5000:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5016:22:7",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4993:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4974:6:7",
														"type": ""
													}
												],
												"src": "4876:170:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5158:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5180:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5188:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5176:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5176:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5192:34:7",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5169:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5169:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5248:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5256:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5244:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5244:15:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5261:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5237:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5237:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5150:6:7",
														"type": ""
													}
												],
												"src": "5052:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:87:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5398:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5407:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5410:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5400:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5400:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5400:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5356:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5389:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "5363:25:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5363:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5353:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:43:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5346:51:7"
															},
															"nodeType": "YulIf",
															"src": "5343:71:7"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5326:5:7",
														"type": ""
													}
												],
												"src": "5282:138:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5483:93:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5554:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5563:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5566:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5556:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5556:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5556:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5506:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5545:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$117",
																					"nodeType": "YulIdentifier",
																					"src": "5513:31:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5513:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5503:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5503:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:57:7"
															},
															"nodeType": "YulIf",
															"src": "5493:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$117",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5476:5:7",
														"type": ""
													}
												],
												"src": "5426:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5625:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5682:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5691:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5694:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5684:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5684:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5684:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5648:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5673:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5655:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5655:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5645:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5645:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:43:7"
															},
															"nodeType": "YulIf",
															"src": "5635:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5618:5:7",
														"type": ""
													}
												],
												"src": "5582:122:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$117_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$117(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$117_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$117_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$117(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$117(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$117(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13F7 CODESIZE SUB DUP1 PUSH3 0x13F7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x242 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEF SWAP1 PUSH3 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x16B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x162 SWAP1 PUSH3 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x50A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x20E DUP2 PUSH3 0x4BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x225 DUP2 PUSH3 0x4D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23C DUP2 PUSH3 0x4F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x25E JUMPI PUSH3 0x25D PUSH3 0x3F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26E DUP7 DUP3 DUP8 ADD PUSH3 0x22B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x281 DUP7 DUP3 DUP8 ADD PUSH3 0x1FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x294 DUP7 DUP3 DUP8 ADD PUSH3 0x214 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AD PUSH1 0x24 DUP4 PUSH3 0x379 JUMP JUMPDEST SWAP2 POP PUSH3 0x2BA DUP3 PUSH3 0x3F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D4 PUSH1 0x14 DUP4 PUSH3 0x379 JUMP JUMPDEST SWAP2 POP PUSH3 0x2E1 DUP3 PUSH3 0x444 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2FB PUSH1 0x25 DUP4 PUSH3 0x379 JUMP JUMPDEST SWAP2 POP PUSH3 0x308 DUP3 PUSH3 0x46D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x32E DUP2 PUSH3 0x29E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x350 DUP2 PUSH3 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x372 DUP2 PUSH3 0x2EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x397 DUP3 PUSH3 0x3C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AB DUP3 PUSH3 0x3C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3BF DUP3 PUSH3 0x38A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x4C7 DUP2 PUSH3 0x39E JUMP JUMPDEST DUP2 EQ PUSH3 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x4E1 DUP2 PUSH3 0x3B2 JUMP JUMPDEST DUP2 EQ PUSH3 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x4FB DUP2 PUSH3 0x3E6 JUMP JUMPDEST DUP2 EQ PUSH3 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEDD DUP1 PUSH3 0x51A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x610757E4 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x83BEBCED EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x94A5AA8D EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xECD0C0C3 EQ PUSH2 0x107 JUMPI PUSH2 0x65 JUMP JUMPDEST CALLDATASIZE PUSH2 0x65 JUMPI PUSH2 0x63 PUSH2 0x5E PUSH2 0x132 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x197 DUP3 DUP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2 DUP3 PUSH2 0x370 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9 DUP3 PUSH1 0x4 SLOAD PUSH2 0x38E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1C9 DUP4 DUP3 PUSH2 0x3A4 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8 PUSH2 0x132 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x22F SWAP3 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x241 DUP4 DUP4 PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x253 DUP4 DUP4 PUSH2 0x421 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387 PUSH1 0x3 SLOAD DUP4 PUSH2 0x425 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AE DUP3 DUP3 PUSH2 0x43B JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0xBAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x488 DUP3 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4AB SWAP3 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x512 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x5D4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CA SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63F DUP6 PUSH2 0x705 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6F9 DUP3 DUP3 DUP7 PUSH2 0x728 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x738 JUMPI DUP3 SWAP1 POP PUSH2 0x788 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x74B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x79E DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7B3 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CF JUMPI PUSH2 0x7CE PUSH2 0xCFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7DD DUP5 DUP3 DUP6 ADD PUSH2 0x78F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0xCFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80A DUP5 DUP3 DUP6 ADD PUSH2 0x7A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x81C DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83C DUP3 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x846 DUP2 DUP6 PUSH2 0xB3D JUMP JUMPDEST SWAP4 POP PUSH2 0x856 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC99 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86B DUP2 PUSH2 0xC63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87C DUP3 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x886 DUP2 DUP6 PUSH2 0xB48 JUMP JUMPDEST SWAP4 POP PUSH2 0x896 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0xD00 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B7 PUSH1 0x26 DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C2 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DA PUSH1 0x2A DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E5 DUP3 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FD PUSH1 0x1D DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x908 DUP3 PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x920 PUSH1 0x2A DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x92B DUP3 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 PUSH1 0x1F DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x94E DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x966 PUSH1 0x19 DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x971 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x985 DUP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x997 DUP3 DUP5 PUSH2 0x831 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x9DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x97C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1B DUP2 DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA3C DUP2 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA5C DUP2 PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA7C DUP2 PUSH2 0x8F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA9C DUP2 PUSH2 0x913 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xABC DUP2 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADC DUP2 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x97C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x97C JUMP JUMPDEST PUSH2 0xB20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x97C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP4 PUSH2 0xC59 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA3 PUSH2 0xCCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBA DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC5 DUP4 PUSH2 0xC59 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBFE JUMPI PUSH2 0xBFD PUSH2 0xCCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC14 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6E DUP3 PUSH2 0xC75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC80 DUP3 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC92 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC9C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xCC6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE82 DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP2 EQ PUSH2 0xE8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xC2D JUMP JUMPDEST DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 PUSH17 0xCE7449AD0EBCFC6704F978AB4D35A740EB 0xC1 0xE3 MSTORE 0xD0 0xF BLOCKHASH 0xDD 0xE6 DUP1 SLT LT 0xC4 XOR PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1071:6325:6:-:0;;;2529:380;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;2624:1:6;2616:5;:9;2608:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2688:1;2669:21;;:7;:21;;;;2661:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2778:1;2751:29;;2759:6;2751:29;;;;2743:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:5;2834;:13;;;;2868:7;2858;;:17;;;;;;;;;;;;;;;;;;2895:6;2886;;:15;;;;;;;;;;;;;;;;;;2529:380;;;1071:6325;;7:159:7;72:5;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;7:159;;;;:::o;172:171::-;243:5;274:6;268:13;259:22;;290:47;331:5;290:47;:::i;:::-;172:171;;;;:::o;349:143::-;406:5;437:6;431:13;422:22;;453:33;480:5;453:33;:::i;:::-;349:143;;;;:::o;498:707::-;608:6;616;624;673:2;661:9;652:7;648:23;644:32;641:119;;;679:79;;:::i;:::-;641:119;799:1;824:64;880:7;871:6;860:9;856:22;824:64;:::i;:::-;814:74;;770:128;937:2;963:72;1027:7;1018:6;1007:9;1003:22;963:72;:::i;:::-;953:82;;908:137;1084:2;1110:78;1180:7;1171:6;1160:9;1156:22;1110:78;:::i;:::-;1100:88;;1055:143;498:707;;;;;:::o;1211:366::-;1353:3;1374:67;1438:2;1433:3;1374:67;:::i;:::-;1367:74;;1450:93;1539:3;1450:93;:::i;:::-;1568:2;1563:3;1559:12;1552:19;;1211:366;;;:::o;1583:::-;1725:3;1746:67;1810:2;1805:3;1746:67;:::i;:::-;1739:74;;1822:93;1911:3;1822:93;:::i;:::-;1940:2;1935:3;1931:12;1924:19;;1583:366;;;:::o;1955:::-;2097:3;2118:67;2182:2;2177:3;2118:67;:::i;:::-;2111:74;;2194:93;2283:3;2194:93;:::i;:::-;2312:2;2307:3;2303:12;2296:19;;1955:366;;;:::o;2327:419::-;2493:4;2531:2;2520:9;2516:18;2508:26;;2580:9;2574:4;2570:20;2566:1;2555:9;2551:17;2544:47;2608:131;2734:4;2608:131;:::i;:::-;2600:139;;2327:419;;;:::o;2752:::-;2918:4;2956:2;2945:9;2941:18;2933:26;;3005:9;2999:4;2995:20;2991:1;2980:9;2976:17;2969:47;3033:131;3159:4;3033:131;:::i;:::-;3025:139;;2752:419;;;:::o;3177:::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3430:9;3424:4;3420:20;3416:1;3405:9;3401:17;3394:47;3458:131;3584:4;3458:131;:::i;:::-;3450:139;;3177:419;;;:::o;3683:169::-;3767:11;3801:6;3796:3;3789:19;3841:4;3836:3;3832:14;3817:29;;3683:169;;;;:::o;3858:96::-;3895:7;3924:24;3942:5;3924:24;:::i;:::-;3913:35;;3858:96;;;:::o;3960:104::-;4005:7;4034:24;4052:5;4034:24;:::i;:::-;4023:35;;3960:104;;;:::o;4070:110::-;4121:7;4150:24;4168:5;4150:24;:::i;:::-;4139:35;;4070:110;;;:::o;4186:126::-;4223:7;4263:42;4256:5;4252:54;4241:65;;4186:126;;;:::o;4318:77::-;4355:7;4384:5;4373:16;;4318:77;;;:::o;4524:117::-;4633:1;4630;4623:12;4647:223;4787:34;4783:1;4775:6;4771:14;4764:58;4856:6;4851:2;4843:6;4839:15;4832:31;4647:223;:::o;4876:170::-;5016:22;5012:1;5004:6;5000:14;4993:46;4876:170;:::o;5052:224::-;5192:34;5188:1;5180:6;5176:14;5169:58;5261:7;5256:2;5248:6;5244:15;5237:32;5052:224;:::o;5282:138::-;5363:32;5389:5;5363:32;:::i;:::-;5356:5;5353:43;5343:71;;5410:1;5407;5400:12;5343:71;5282:138;:::o;5426:150::-;5513:38;5545:5;5513:38;:::i;:::-;5506:5;5503:49;5493:77;;5566:1;5563;5556:12;5493:77;5426:150;:::o;5582:122::-;5655:24;5673:5;5655:24;:::i;:::-;5648:5;5645:35;5635:63;;5694:1;5691;5684:12;5635:63;5582:122;:::o;1071:6325:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_340": {
									"entryPoint": 1298,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deliverTokens_1186": {
									"entryPoint": 1083,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_1235": {
									"entryPoint": 950,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_1223": {
									"entryPoint": 880,
									"id": 1223,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_648": {
									"entryPoint": 306,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_postValidatePurchase_1170": {
									"entryPoint": 1057,
									"id": 1170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_1159": {
									"entryPoint": 696,
									"id": 1159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_1200": {
									"entryPoint": 932,
									"id": 1200,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_rate_996": {
									"entryPoint": 646,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_token_992": {
									"entryPoint": 658,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_updatePurchasingState_1209": {
									"entryPoint": 946,
									"id": 1209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_wallet_994": {
									"entryPoint": 608,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_weiRaised_998": {
									"entryPoint": 652,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_834": {
									"entryPoint": 910,
									"id": 834,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_1131": {
									"entryPoint": 314,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_500": {
									"entryPoint": 1521,
									"id": 500,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_430": {
									"entryPoint": 1497,
									"id": 430,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_359": {
									"entryPoint": 1797,
									"id": 359,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_864": {
									"entryPoint": 1061,
									"id": 864,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransfer_148": {
									"entryPoint": 1164,
									"id": 148,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyCallResult_635": {
									"entryPoint": 1832,
									"id": 635,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2493,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2814,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13646:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "7:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:7",
														"type": ""
													}
												],
												"src": "152:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "361:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "407:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "409:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "409:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "409:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "382:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "391:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "378:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "378:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:32:7"
															},
															"nodeType": "YulIf",
															"src": "371:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "500:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "515:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "529:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "519:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "544:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "579:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "590:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "575:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "575:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "599:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "554:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "554:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "544:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "331:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "342:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "354:6:7",
														"type": ""
													}
												],
												"src": "295:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "704:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "750:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "752:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "752:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "752:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "725:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "734:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "721:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "717:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:32:7"
															},
															"nodeType": "YulIf",
															"src": "714:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "843:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "858:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "862:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "887:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "897:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "897:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "887:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "685:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "697:6:7",
														"type": ""
													}
												],
												"src": "630:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1062:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1079:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1110:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1084:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1084:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1072:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1072:45:7"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1050:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1057:3:7",
														"type": ""
													}
												],
												"src": "981:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1194:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1211:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1234:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1216:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1216:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1204:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1182:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1189:3:7",
														"type": ""
													}
												],
												"src": "1129:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1361:265:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1371:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1417:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1385:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1385:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1375:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1432:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1515:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1520:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1439:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1432:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1562:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1576:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1536:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1597:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1608:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1613:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1604:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1597:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1342:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1349:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1357:3:7",
														"type": ""
													}
												],
												"src": "1253:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1711:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1728:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1778:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1733:44:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1733:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:64:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1721:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1699:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1706:3:7",
														"type": ""
													}
												],
												"src": "1632:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1899:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1946:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1913:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1903:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2027:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2032:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1968:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2074:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2081:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2070:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2070:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2088:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2093:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2048:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2048:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2109:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2147:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2125:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2125:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2116:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1870:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1877:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1885:3:7",
														"type": ""
													}
												],
												"src": "1797:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2313:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2323:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2389:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2394:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2330:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2495:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "2406:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2406:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2508:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2515:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2301:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2309:3:7",
														"type": ""
													}
												],
												"src": "2167:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2685:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2695:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2761:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2766:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2702:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2867:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nodeType": "YulIdentifier",
																	"src": "2778:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2778:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2880:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2891:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2673:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2681:3:7",
														"type": ""
													}
												],
												"src": "2539:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3057:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3067:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3133:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3138:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3074:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3067:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "3150:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3150:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3150:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3252:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3263:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3268:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3252:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3045:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3053:3:7",
														"type": ""
													}
												],
												"src": "2911:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3429:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3439:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3505:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3510:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3446:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3446:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3611:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "3522:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3624:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3635:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3640:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3631:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3624:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3417:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3425:3:7",
														"type": ""
													}
												],
												"src": "3283:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3801:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3811:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3877:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3818:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "3894:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3894:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3996:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4007:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3996:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3789:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3797:3:7",
														"type": ""
													}
												],
												"src": "3655:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4183:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4249:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4254:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4190:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4355:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nodeType": "YulIdentifier",
																	"src": "4266:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4266:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4368:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4379:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4375:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4368:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4161:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4169:3:7",
														"type": ""
													}
												],
												"src": "4027:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4464:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4481:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4504:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4486:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4486:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4474:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4452:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4459:3:7",
														"type": ""
													}
												],
												"src": "4399:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4657:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4668:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4755:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4675:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4778:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4785:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4636:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4642:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4653:3:7",
														"type": ""
													}
												],
												"src": "4523:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4914:140:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4924:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4936:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4947:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4924:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5020:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5033:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5044:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5029:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5029:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4960:59:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4960:87:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4960:87:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4886:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4898:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4909:4:7",
														"type": ""
													}
												],
												"src": "4800:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5186:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5196:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5219:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5196:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5276:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5289:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5300:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5285:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5285:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5232:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5232:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5232:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5357:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5370:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5381:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5313:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5313:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5150:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5162:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5170:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5181:4:7",
														"type": ""
													}
												],
												"src": "5060:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5510:138:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5520:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5532:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5543:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5528:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5528:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5520:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5556:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:85:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5556:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5482:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5494:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5505:4:7",
														"type": ""
													}
												],
												"src": "5398:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5772:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5782:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5794:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5805:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5790:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5782:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5829:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5840:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5825:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5825:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5848:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5854:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5818:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5818:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5874:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5946:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5955:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5882:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5874:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5744:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5756:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5767:4:7",
														"type": ""
													}
												],
												"src": "5654:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6144:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6154:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6166:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6177:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6162:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6154:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6201:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6212:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6197:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6220:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6226:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6216:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6190:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6246:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6380:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6254:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6254:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6246:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6124:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6139:4:7",
														"type": ""
													}
												],
												"src": "5973:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6579:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6591:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6602:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6587:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6579:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6626:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6637:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6622:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6622:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6645:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6651:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6641:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6641:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6615:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6615:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6671:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6805:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6679:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6679:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6671:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6549:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6564:4:7",
														"type": ""
													}
												],
												"src": "6398:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6994:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7004:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7016:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7027:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7012:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7012:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7004:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7051:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7062:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7070:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7076:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7066:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7066:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7040:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7040:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7040:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7096:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7230:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7104:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7104:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7096:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6974:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6989:4:7",
														"type": ""
													}
												],
												"src": "6823:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7419:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7429:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7441:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7452:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7437:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7437:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7429:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7476:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7487:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7472:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7472:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7495:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7501:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7491:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7491:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7465:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7465:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7465:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7521:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7655:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7529:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7529:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7521:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7399:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7414:4:7",
														"type": ""
													}
												],
												"src": "7248:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7844:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7854:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7866:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7877:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7862:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7862:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7854:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7901:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7912:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7897:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7897:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7920:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7926:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7890:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7890:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7946:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7954:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7954:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7946:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7824:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7839:4:7",
														"type": ""
													}
												],
												"src": "7673:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8269:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8279:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8291:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8302:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8279:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8326:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8337:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8322:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8322:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8345:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8351:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8315:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8315:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8315:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8371:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8505:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8379:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8371:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8249:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8264:4:7",
														"type": ""
													}
												],
												"src": "8098:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8621:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8631:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8643:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8654:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8639:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8639:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8631:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8711:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8724:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8735:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8720:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8720:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8667:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8667:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8667:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8593:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8605:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8616:4:7",
														"type": ""
													}
												],
												"src": "8523:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8877:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8887:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8899:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8910:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8895:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8887:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8967:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8980:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8991:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8976:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8923:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8923:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9048:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9004:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9004:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9004:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8841:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8853:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8861:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8872:4:7",
														"type": ""
													}
												],
												"src": "8751:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9129:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9139:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9155:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9149:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9139:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9122:6:7",
														"type": ""
													}
												],
												"src": "9089:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9228:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9239:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9255:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9249:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9239:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9211:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9221:6:7",
														"type": ""
													}
												],
												"src": "9170:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9333:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9360:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9354:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9344:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9316:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9326:6:7",
														"type": ""
													}
												],
												"src": "9274:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9492:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9502:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9517:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9502:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9464:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9469:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9480:11:7",
														"type": ""
													}
												],
												"src": "9379:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9628:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9645:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9650:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9638:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9638:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9666:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9685:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9690:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9681:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9666:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9600:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9605:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9616:11:7",
														"type": ""
													}
												],
												"src": "9532:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9751:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9761:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9784:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9766:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9761:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9795:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9818:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9800:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9800:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9795:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9958:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9960:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9960:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9960:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9879:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9886:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9954:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9882:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9882:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9876:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9876:81:7"
															},
															"nodeType": "YulIf",
															"src": "9873:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9990:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10001:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10004:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9997:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9990:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9738:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9741:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9747:3:7",
														"type": ""
													}
												],
												"src": "9707:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10066:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10076:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10099:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10081:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10081:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10076:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10110:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10133:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10115:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10115:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10110:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10308:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10310:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10310:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10310:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10220:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10213:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10213:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10206:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10206:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10228:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10235:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10303:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10231:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10231:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10225:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10225:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10202:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10202:105:7"
															},
															"nodeType": "YulIf",
															"src": "10199:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10340:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10355:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10358:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10351:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10351:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10340:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10049:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10052:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10058:7:7",
														"type": ""
													}
												],
												"src": "10018:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10417:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10427:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10456:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10438:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10427:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10399:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10409:7:7",
														"type": ""
													}
												],
												"src": "10372:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10527:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10537:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10566:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10548:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10537:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10509:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10519:7:7",
														"type": ""
													}
												],
												"src": "10474:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10626:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10636:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10661:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10654:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10654:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10647:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10636:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10608:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10618:7:7",
														"type": ""
													}
												],
												"src": "10584:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10725:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10735:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10750:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10757:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10746:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10746:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10735:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10707:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10717:7:7",
														"type": ""
													}
												],
												"src": "10680:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10857:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10867:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10878:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10867:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10839:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10849:7:7",
														"type": ""
													}
												],
												"src": "10812:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10969:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10979:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11023:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10992:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10979:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10949:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10959:9:7",
														"type": ""
													}
												],
												"src": "10895:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11101:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11111:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11155:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11124:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11124:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11111:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11081:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11091:9:7",
														"type": ""
													}
												],
												"src": "11041:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11233:53:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11243:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11274:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11256:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11256:24:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11243:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11213:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11223:9:7",
														"type": ""
													}
												],
												"src": "11173:113:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11341:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11351:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11360:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11355:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11420:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11445:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11450:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11441:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11441:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11464:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11469:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11460:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11460:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11454:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11454:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11434:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11434:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11434:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11381:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11384:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11378:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11378:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11392:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11394:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11403:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11406:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11399:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11399:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11394:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11374:3:7",
																"statements": []
															},
															"src": "11370:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11517:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11567:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11572:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11563:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11563:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11581:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11556:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11556:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11556:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11498:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11501:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11495:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:13:7"
															},
															"nodeType": "YulIf",
															"src": "11492:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11323:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11328:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11333:6:7",
														"type": ""
													}
												],
												"src": "11292:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11633:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11650:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11643:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11643:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11747:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11750:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11740:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11740:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11740:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11771:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11774:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11764:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11764:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11764:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11605:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11880:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11900:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11890:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11890:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11890:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11791:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12003:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12020:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12023:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12013:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12013:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12013:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11914:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12085:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12095:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12113:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12120:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12109:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12109:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12129:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12125:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12125:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12105:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12095:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12068:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12078:6:7",
														"type": ""
													}
												],
												"src": "12037:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12251:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12273:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12281:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12269:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12269:14:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12285:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12262:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12262:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12262:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12341:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12349:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12337:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12337:15:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12354:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12330:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12330:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12330:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12243:6:7",
														"type": ""
													}
												],
												"src": "12145:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12482:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12504:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12512:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12500:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12500:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12516:34:7",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12493:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12493:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12572:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12580:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12568:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12568:15:7"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12585:12:7",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12561:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12561:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12561:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12474:6:7",
														"type": ""
													}
												],
												"src": "12376:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12717:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12739:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12747:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12735:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12735:14:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12751:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12728:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12728:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12728:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12709:6:7",
														"type": ""
													}
												],
												"src": "12611:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12902:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12932:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12920:14:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12936:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12913:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12992:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13000:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12988:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12988:15:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13005:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12981:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12981:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12981:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12894:6:7",
														"type": ""
													}
												],
												"src": "12796:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13137:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13159:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13167:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13155:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13155:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13171:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13148:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13148:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13129:6:7",
														"type": ""
													}
												],
												"src": "13031:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13324:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13346:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13354:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13342:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13342:14:7"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13358:27:7",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13335:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13335:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13335:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13316:6:7",
														"type": ""
													}
												],
												"src": "13218:175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13442:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13499:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13508:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13511:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13501:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13501:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13501:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13465:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13490:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13472:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13472:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13462:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13462:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13455:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13455:43:7"
															},
															"nodeType": "YulIf",
															"src": "13452:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13435:5:7",
														"type": ""
													}
												],
												"src": "13399:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13567:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13621:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13630:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13633:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13623:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13623:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13623:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13590:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13612:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13597:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13597:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13587:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13587:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13580:40:7"
															},
															"nodeType": "YulIf",
															"src": "13577:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13560:5:7",
														"type": ""
													}
												],
												"src": "13527:116:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c8063610757e41461006a57806383bebced1461009557806394a5aa8d146100c0578063ec8ac4d8146100eb578063ecd0c0c31461010757610065565b366100655761006361005e610132565b61013a565b005b600080fd5b34801561007657600080fd5b5061007f610260565b60405161008c91906109a2565b60405180910390f35b3480156100a157600080fd5b506100aa610286565b6040516100b79190610ae3565b60405180910390f35b3480156100cc57600080fd5b506100d561028c565b6040516100e29190610ae3565b60405180910390f35b610105600480360381019061010091906107b9565b61013a565b005b34801561011357600080fd5b5061011c610292565b60405161012991906109e6565b60405180910390f35b600033905090565b60026000541415610180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017790610aa3565b60405180910390fd5b6002600081905550600034905061019782826102b8565b60006101a282610370565b90506101b98260045461038e90919063ffffffff16565b6004819055506101c983826103a4565b8273ffffffffffffffffffffffffffffffffffffffff166101e8610132565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b848460405161022f929190610afe565b60405180910390a361024183836103b2565b6102496103b6565b6102538383610421565b5050600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610a43565b60405180910390fd5b600081141561036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610ac3565b60405180910390fd5b5050565b60006103876003548361042590919063ffffffff16565b9050919050565b6000818361039c9190610b59565b905092915050565b6103ae828261043b565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561041e573d6000803e3d6000fd5b50565b5050565b600081836104339190610baf565b905092915050565b6104888282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661048c9092919063ffffffff16565b5050565b61050d8363a9059cbb60e01b84846040516024016104ab9291906109bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610512565b505050565b6000610574826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105d99092919063ffffffff16565b90506000815111156105d4578080602001905181019061059491906107e6565b6105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610a83565b60405180910390fd5b5b505050565b60606105e884846000856105f1565b90509392505050565b606082471015610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d90610a23565b60405180910390fd5b61063f85610705565b61067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590610a63565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516106a7919061098b565b60006040518083038185875af1925050503d80600081146106e4576040519150601f19603f3d011682016040523d82523d6000602084013e6106e9565b606091505b50915091506106f9828286610728565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561073857829050610788565b60008351111561074b5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f9190610a01565b60405180910390fd5b9392505050565b60008135905061079e81610e79565b92915050565b6000815190506107b381610e90565b92915050565b6000602082840312156107cf576107ce610cfb565b5b60006107dd8482850161078f565b91505092915050565b6000602082840312156107fc576107fb610cfb565b5b600061080a848285016107a4565b91505092915050565b61081c81610c1b565b82525050565b61082b81610c09565b82525050565b600061083c82610b27565b6108468185610b3d565b9350610856818560208601610c99565b80840191505092915050565b61086b81610c63565b82525050565b600061087c82610b32565b6108868185610b48565b9350610896818560208601610c99565b61089f81610d00565b840191505092915050565b60006108b7602683610b48565b91506108c282610d11565b604082019050919050565b60006108da602a83610b48565b91506108e582610d60565b604082019050919050565b60006108fd601d83610b48565b915061090882610daf565b602082019050919050565b6000610920602a83610b48565b915061092b82610dd8565b604082019050919050565b6000610943601f83610b48565b915061094e82610e27565b602082019050919050565b6000610966601983610b48565b915061097182610e50565b602082019050919050565b61098581610c59565b82525050565b60006109978284610831565b915081905092915050565b60006020820190506109b76000830184610813565b92915050565b60006040820190506109d26000830185610822565b6109df602083018461097c565b9392505050565b60006020820190506109fb6000830184610862565b92915050565b60006020820190508181036000830152610a1b8184610871565b905092915050565b60006020820190508181036000830152610a3c816108aa565b9050919050565b60006020820190508181036000830152610a5c816108cd565b9050919050565b60006020820190508181036000830152610a7c816108f0565b9050919050565b60006020820190508181036000830152610a9c81610913565b9050919050565b60006020820190508181036000830152610abc81610936565b9050919050565b60006020820190508181036000830152610adc81610959565b9050919050565b6000602082019050610af8600083018461097c565b92915050565b6000604082019050610b13600083018561097c565b610b20602083018461097c565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610b6482610c59565b9150610b6f83610c59565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ba457610ba3610ccc565b5b828201905092915050565b6000610bba82610c59565b9150610bc583610c59565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bfe57610bfd610ccc565b5b828202905092915050565b6000610c1482610c39565b9050919050565b6000610c2682610c39565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c6e82610c75565b9050919050565b6000610c8082610c87565b9050919050565b6000610c9282610c39565b9050919050565b60005b83811015610cb7578082015181840152602081019050610c9c565b83811115610cc6576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f43726f776473616c653a2062656e656669636961727920697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f43726f776473616c653a20776569416d6f756e74206973203000000000000000600082015250565b610e8281610c09565b8114610e8d57600080fd5b50565b610e9981610c2d565b8114610ea457600080fd5b5056fea26469706673582212209970ce7449ad0ebcfc6704f978ab4d35a740ebc1e352d00f40dde6801210c41864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x610757E4 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x83BEBCED EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x94A5AA8D EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xECD0C0C3 EQ PUSH2 0x107 JUMPI PUSH2 0x65 JUMP JUMPDEST CALLDATASIZE PUSH2 0x65 JUMPI PUSH2 0x63 PUSH2 0x5E PUSH2 0x132 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11C PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x197 DUP3 DUP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2 DUP3 PUSH2 0x370 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9 DUP3 PUSH1 0x4 SLOAD PUSH2 0x38E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1C9 DUP4 DUP3 PUSH2 0x3A4 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E8 PUSH2 0x132 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x22F SWAP3 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x241 DUP4 DUP4 PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x253 DUP4 DUP4 PUSH2 0x421 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387 PUSH1 0x3 SLOAD DUP4 PUSH2 0x425 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AE DUP3 DUP3 PUSH2 0x43B JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0xBAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x488 DUP3 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50D DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4AB SWAP3 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x512 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x5D4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CA SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63F DUP6 PUSH2 0x705 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6F9 DUP3 DUP3 DUP7 PUSH2 0x728 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x738 JUMPI DUP3 SWAP1 POP PUSH2 0x788 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x74B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x79E DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7B3 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CF JUMPI PUSH2 0x7CE PUSH2 0xCFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7DD DUP5 DUP3 DUP6 ADD PUSH2 0x78F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0xCFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80A DUP5 DUP3 DUP6 ADD PUSH2 0x7A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x81C DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83C DUP3 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x846 DUP2 DUP6 PUSH2 0xB3D JUMP JUMPDEST SWAP4 POP PUSH2 0x856 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC99 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86B DUP2 PUSH2 0xC63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87C DUP3 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x886 DUP2 DUP6 PUSH2 0xB48 JUMP JUMPDEST SWAP4 POP PUSH2 0x896 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0xD00 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B7 PUSH1 0x26 DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C2 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DA PUSH1 0x2A DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E5 DUP3 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FD PUSH1 0x1D DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x908 DUP3 PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x920 PUSH1 0x2A DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x92B DUP3 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 PUSH1 0x1F DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x94E DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x966 PUSH1 0x19 DUP4 PUSH2 0xB48 JUMP JUMPDEST SWAP2 POP PUSH2 0x971 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x985 DUP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x997 DUP3 DUP5 PUSH2 0x831 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x9DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x97C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1B DUP2 DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA3C DUP2 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA5C DUP2 PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA7C DUP2 PUSH2 0x8F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA9C DUP2 PUSH2 0x913 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xABC DUP2 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADC DUP2 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x97C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x97C JUMP JUMPDEST PUSH2 0xB20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x97C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP4 PUSH2 0xC59 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBA4 JUMPI PUSH2 0xBA3 PUSH2 0xCCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBA DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC5 DUP4 PUSH2 0xC59 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBFE JUMPI PUSH2 0xBFD PUSH2 0xCCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC14 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6E DUP3 PUSH2 0xC75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC80 DUP3 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC92 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC9C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xCC6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE82 DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP2 EQ PUSH2 0xE8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xC2D JUMP JUMPDEST DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 PUSH17 0xCE7449AD0EBCFC6704F978AB4D35A740EB 0xC1 0xE3 MSTORE 0xD0 0xF BLOCKHASH 0xDD 0xE6 DUP1 SLT LT 0xC4 XOR PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1071:6325:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3245:23;3255:12;:10;:12::i;:::-;3245:9;:23::i;:::-;1071:6325;;;;;1293:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1620:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1678:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3541:622;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1222:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:96:4;693:7;719:10;712:17;;640:96;:::o;3541:622:6:-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3620:17:6::1;3640:9;3620:29;;3660:44;3681:11;3694:9;3660:20;:44::i;:::-;3766:14;3783:26;3799:9;3783:15;:26::i;:::-;3766:43;;3860:25;3875:9;3860:10;;:14;;:25;;;;:::i;:::-;3847:10;:38;;;;3898:37;3915:11;3928:6;3898:16;:37::i;:::-;3981:11;3951:61;;3967:12;:10;:12::i;:::-;3951:61;;;3994:9;4005:6;3951:61;;;;;;;:::i;:::-;;;;;;;;4025:46;4048:11;4061:9;4025:22;:46::i;:::-;4084:15;:13;:15::i;:::-;4110:45;4132:11;4145:9;4110:21;:45::i;:::-;3609:554;;1701:1:0::0;2628:7;:22;;;;3541:622:6;:::o;1293:30::-;;;;;;;;;;;;;:::o;1620:20::-;;;;:::o;1678:25::-;;;;:::o;1222:20::-;;;;;;;;;;;;;:::o;4716:388::-;4850:1;4827:25;;:11;:25;;;;4819:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;4931:1;4918:9;:14;;4910:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4716:388;;:::o;7099:122::-;7166:7;7193:20;7207:5;;7193:9;:13;;:20;;;;:::i;:::-;7186:27;;7099:122;;;:::o;2755:96:5:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;6282:136:6:-;6370:40;6385:11;6398;6370:14;:40::i;:::-;6282:136;;:::o;6696:147::-;;;:::o;7313:80::-;7358:7;;;;;;;;;;;:16;;:27;7375:9;7358:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7313:80::o;5407:166::-;;;:::o;3465:96:5:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;5861:147:6:-;5955:45;5975:11;5988;5955:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5861:147;;:::o;701:205:2:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3861:223:3:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:7:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:329::-;354:6;403:2;391:9;382:7;378:23;374:32;371:119;;;409:79;;:::i;:::-;371:119;529:1;554:53;599:7;590:6;579:9;575:22;554:53;:::i;:::-;544:63;;500:117;295:329;;;;:::o;630:345::-;697:6;746:2;734:9;725:7;721:23;717:32;714:119;;;752:79;;:::i;:::-;714:119;872:1;897:61;950:7;941:6;930:9;926:22;897:61;:::i;:::-;887:71;;843:125;630:345;;;;:::o;981:142::-;1084:32;1110:5;1084:32;:::i;:::-;1079:3;1072:45;981:142;;:::o;1129:118::-;1216:24;1234:5;1216:24;:::i;:::-;1211:3;1204:37;1129:118;;:::o;1253:373::-;1357:3;1385:38;1417:5;1385:38;:::i;:::-;1439:88;1520:6;1515:3;1439:88;:::i;:::-;1432:95;;1536:52;1581:6;1576:3;1569:4;1562:5;1558:16;1536:52;:::i;:::-;1613:6;1608:3;1604:16;1597:23;;1361:265;1253:373;;;;:::o;1632:159::-;1733:51;1778:5;1733:51;:::i;:::-;1728:3;1721:64;1632:159;;:::o;1797:364::-;1885:3;1913:39;1946:5;1913:39;:::i;:::-;1968:71;2032:6;2027:3;1968:71;:::i;:::-;1961:78;;2048:52;2093:6;2088:3;2081:4;2074:5;2070:16;2048:52;:::i;:::-;2125:29;2147:6;2125:29;:::i;:::-;2120:3;2116:39;2109:46;;1889:272;1797:364;;;;:::o;2167:366::-;2309:3;2330:67;2394:2;2389:3;2330:67;:::i;:::-;2323:74;;2406:93;2495:3;2406:93;:::i;:::-;2524:2;2519:3;2515:12;2508:19;;2167:366;;;:::o;2539:::-;2681:3;2702:67;2766:2;2761:3;2702:67;:::i;:::-;2695:74;;2778:93;2867:3;2778:93;:::i;:::-;2896:2;2891:3;2887:12;2880:19;;2539:366;;;:::o;2911:::-;3053:3;3074:67;3138:2;3133:3;3074:67;:::i;:::-;3067:74;;3150:93;3239:3;3150:93;:::i;:::-;3268:2;3263:3;3259:12;3252:19;;2911:366;;;:::o;3283:::-;3425:3;3446:67;3510:2;3505:3;3446:67;:::i;:::-;3439:74;;3522:93;3611:3;3522:93;:::i;:::-;3640:2;3635:3;3631:12;3624:19;;3283:366;;;:::o;3655:::-;3797:3;3818:67;3882:2;3877:3;3818:67;:::i;:::-;3811:74;;3894:93;3983:3;3894:93;:::i;:::-;4012:2;4007:3;4003:12;3996:19;;3655:366;;;:::o;4027:::-;4169:3;4190:67;4254:2;4249:3;4190:67;:::i;:::-;4183:74;;4266:93;4355:3;4266:93;:::i;:::-;4384:2;4379:3;4375:12;4368:19;;4027:366;;;:::o;4399:118::-;4486:24;4504:5;4486:24;:::i;:::-;4481:3;4474:37;4399:118;;:::o;4523:271::-;4653:3;4675:93;4764:3;4755:6;4675:93;:::i;:::-;4668:100;;4785:3;4778:10;;4523:271;;;;:::o;4800:254::-;4909:4;4947:2;4936:9;4932:18;4924:26;;4960:87;5044:1;5033:9;5029:17;5020:6;4960:87;:::i;:::-;4800:254;;;;:::o;5060:332::-;5181:4;5219:2;5208:9;5204:18;5196:26;;5232:71;5300:1;5289:9;5285:17;5276:6;5232:71;:::i;:::-;5313:72;5381:2;5370:9;5366:18;5357:6;5313:72;:::i;:::-;5060:332;;;;;:::o;5398:250::-;5505:4;5543:2;5532:9;5528:18;5520:26;;5556:85;5638:1;5627:9;5623:17;5614:6;5556:85;:::i;:::-;5398:250;;;;:::o;5654:313::-;5767:4;5805:2;5794:9;5790:18;5782:26;;5854:9;5848:4;5844:20;5840:1;5829:9;5825:17;5818:47;5882:78;5955:4;5946:6;5882:78;:::i;:::-;5874:86;;5654:313;;;;:::o;5973:419::-;6139:4;6177:2;6166:9;6162:18;6154:26;;6226:9;6220:4;6216:20;6212:1;6201:9;6197:17;6190:47;6254:131;6380:4;6254:131;:::i;:::-;6246:139;;5973:419;;;:::o;6398:::-;6564:4;6602:2;6591:9;6587:18;6579:26;;6651:9;6645:4;6641:20;6637:1;6626:9;6622:17;6615:47;6679:131;6805:4;6679:131;:::i;:::-;6671:139;;6398:419;;;:::o;6823:::-;6989:4;7027:2;7016:9;7012:18;7004:26;;7076:9;7070:4;7066:20;7062:1;7051:9;7047:17;7040:47;7104:131;7230:4;7104:131;:::i;:::-;7096:139;;6823:419;;;:::o;7248:::-;7414:4;7452:2;7441:9;7437:18;7429:26;;7501:9;7495:4;7491:20;7487:1;7476:9;7472:17;7465:47;7529:131;7655:4;7529:131;:::i;:::-;7521:139;;7248:419;;;:::o;7673:::-;7839:4;7877:2;7866:9;7862:18;7854:26;;7926:9;7920:4;7916:20;7912:1;7901:9;7897:17;7890:47;7954:131;8080:4;7954:131;:::i;:::-;7946:139;;7673:419;;;:::o;8098:::-;8264:4;8302:2;8291:9;8287:18;8279:26;;8351:9;8345:4;8341:20;8337:1;8326:9;8322:17;8315:47;8379:131;8505:4;8379:131;:::i;:::-;8371:139;;8098:419;;;:::o;8523:222::-;8616:4;8654:2;8643:9;8639:18;8631:26;;8667:71;8735:1;8724:9;8720:17;8711:6;8667:71;:::i;:::-;8523:222;;;;:::o;8751:332::-;8872:4;8910:2;8899:9;8895:18;8887:26;;8923:71;8991:1;8980:9;8976:17;8967:6;8923:71;:::i;:::-;9004:72;9072:2;9061:9;9057:18;9048:6;9004:72;:::i;:::-;8751:332;;;;;:::o;9170:98::-;9221:6;9255:5;9249:12;9239:22;;9170:98;;;:::o;9274:99::-;9326:6;9360:5;9354:12;9344:22;;9274:99;;;:::o;9379:147::-;9480:11;9517:3;9502:18;;9379:147;;;;:::o;9532:169::-;9616:11;9650:6;9645:3;9638:19;9690:4;9685:3;9681:14;9666:29;;9532:169;;;;:::o;9707:305::-;9747:3;9766:20;9784:1;9766:20;:::i;:::-;9761:25;;9800:20;9818:1;9800:20;:::i;:::-;9795:25;;9954:1;9886:66;9882:74;9879:1;9876:81;9873:107;;;9960:18;;:::i;:::-;9873:107;10004:1;10001;9997:9;9990:16;;9707:305;;;;:::o;10018:348::-;10058:7;10081:20;10099:1;10081:20;:::i;:::-;10076:25;;10115:20;10133:1;10115:20;:::i;:::-;10110:25;;10303:1;10235:66;10231:74;10228:1;10225:81;10220:1;10213:9;10206:17;10202:105;10199:131;;;10310:18;;:::i;:::-;10199:131;10358:1;10355;10351:9;10340:20;;10018:348;;;;:::o;10372:96::-;10409:7;10438:24;10456:5;10438:24;:::i;:::-;10427:35;;10372:96;;;:::o;10474:104::-;10519:7;10548:24;10566:5;10548:24;:::i;:::-;10537:35;;10474:104;;;:::o;10584:90::-;10618:7;10661:5;10654:13;10647:21;10636:32;;10584:90;;;:::o;10680:126::-;10717:7;10757:42;10750:5;10746:54;10735:65;;10680:126;;;:::o;10812:77::-;10849:7;10878:5;10867:16;;10812:77;;;:::o;10895:140::-;10959:9;10992:37;11023:5;10992:37;:::i;:::-;10979:50;;10895:140;;;:::o;11041:126::-;11091:9;11124:37;11155:5;11124:37;:::i;:::-;11111:50;;11041:126;;;:::o;11173:113::-;11223:9;11256:24;11274:5;11256:24;:::i;:::-;11243:37;;11173:113;;;:::o;11292:307::-;11360:1;11370:113;11384:6;11381:1;11378:13;11370:113;;;11469:1;11464:3;11460:11;11454:18;11450:1;11445:3;11441:11;11434:39;11406:2;11403:1;11399:10;11394:15;;11370:113;;;11501:6;11498:1;11495:13;11492:101;;;11581:1;11572:6;11567:3;11563:16;11556:27;11492:101;11341:258;11292:307;;;:::o;11605:180::-;11653:77;11650:1;11643:88;11750:4;11747:1;11740:15;11774:4;11771:1;11764:15;11914:117;12023:1;12020;12013:12;12037:102;12078:6;12129:2;12125:7;12120:2;12113:5;12109:14;12105:28;12095:38;;12037:102;;;:::o;12145:225::-;12285:34;12281:1;12273:6;12269:14;12262:58;12354:8;12349:2;12341:6;12337:15;12330:33;12145:225;:::o;12376:229::-;12516:34;12512:1;12504:6;12500:14;12493:58;12585:12;12580:2;12572:6;12568:15;12561:37;12376:229;:::o;12611:179::-;12751:31;12747:1;12739:6;12735:14;12728:55;12611:179;:::o;12796:229::-;12936:34;12932:1;12924:6;12920:14;12913:58;13005:12;13000:2;12992:6;12988:15;12981:37;12796:229;:::o;13031:181::-;13171:33;13167:1;13159:6;13155:14;13148:57;13031:181;:::o;13218:175::-;13358:27;13354:1;13346:6;13342:14;13335:51;13218:175;:::o;13399:122::-;13472:24;13490:5;13472:24;:::i;:::-;13465:5;13462:35;13452:63;;13511:1;13508;13501:12;13452:63;13399:122;:::o;13527:116::-;13597:21;13612:5;13597:21;:::i;:::-;13590:5;13587:32;13577:60;;13633:1;13630;13623:12;13577:60;13527:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "761000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_rate()": "2429",
								"_token()": "2666",
								"_wallet()": "2492",
								"_weiRaised()": "2451",
								"buyTokens(address)": "infinite"
							},
							"internal": {
								"_deliverTokens(address,uint256)": "infinite",
								"_forwardFunds()": "infinite",
								"_getTokenAmount(uint256)": "infinite",
								"_postValidatePurchase(address,uint256)": "13",
								"_preValidatePurchase(address,uint256)": "infinite",
								"_processPurchase(address,uint256)": "infinite",
								"_updatePurchasingState(address,uint256)": "13"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1071,
									"end": 7396,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2624,
									"end": 2625,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2616,
									"end": 2621,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2616,
									"end": 2625,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2608,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2689,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2676,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2690,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2661,
									"end": 2732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2759,
									"end": 2765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2780,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2743,
									"end": 2821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2842,
									"end": 2847,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2839,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2847,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2868,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2865,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2858,
									"end": 2865,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2892,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2886,
									"end": 2892,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 2901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2529,
									"end": 2909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 166,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 72,
									"end": 77,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 109,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 88,
									"end": 110,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 88,
									"end": 110,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 154,
									"end": 159,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 166,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 166,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 343,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 172,
									"end": 343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 243,
									"end": 248,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 280,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 268,
									"end": 281,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 259,
									"end": 281,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 259,
									"end": 281,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 290,
									"end": 337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 331,
									"end": 336,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 290,
									"end": 337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 290,
									"end": 337,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 290,
									"end": 337,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 290,
									"end": 337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 172,
									"end": 343,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 172,
									"end": 343,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 172,
									"end": 343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 172,
									"end": 343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 172,
									"end": 343,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 349,
									"end": 492,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 349,
									"end": 492,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 406,
									"end": 411,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 431,
									"end": 444,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 422,
									"end": 444,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 422,
									"end": 444,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 453,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 480,
									"end": 485,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 453,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 453,
									"end": 486,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 453,
									"end": 486,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 453,
									"end": 486,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 349,
									"end": 492,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 349,
									"end": 492,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 349,
									"end": 492,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 492,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 349,
									"end": 492,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 608,
									"end": 614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 622,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 624,
									"end": 630,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 675,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 661,
									"end": 670,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 652,
									"end": 659,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 648,
									"end": 671,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 644,
									"end": 676,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 641,
									"end": 760,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 641,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 760,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 679,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 679,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 679,
									"end": 758,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 679,
									"end": 758,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 679,
									"end": 758,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 760,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 760,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 799,
									"end": 800,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 880,
									"end": 887,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 871,
									"end": 877,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 860,
									"end": 869,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 856,
									"end": 878,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 824,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 824,
									"end": 888,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 824,
									"end": 888,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 824,
									"end": 888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 814,
									"end": 888,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 814,
									"end": 888,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 898,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 937,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 963,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1027,
									"end": 1034,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1018,
									"end": 1024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1007,
									"end": 1016,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1003,
									"end": 1025,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 963,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 963,
									"end": 1035,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 963,
									"end": 1035,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 963,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1035,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 908,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1086,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1110,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1180,
									"end": 1187,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1171,
									"end": 1177,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1169,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1178,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1110,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1110,
									"end": 1188,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1110,
									"end": 1188,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1110,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1188,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1055,
									"end": 1198,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 498,
									"end": 1205,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1211,
									"end": 1577,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1211,
									"end": 1577,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1356,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1374,
									"end": 1441,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1438,
									"end": 1440,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1433,
									"end": 1436,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1374,
									"end": 1441,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1374,
									"end": 1441,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1374,
									"end": 1441,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1374,
									"end": 1441,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1367,
									"end": 1441,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1367,
									"end": 1441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1450,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1539,
									"end": 1542,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1450,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1450,
									"end": 1543,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1450,
									"end": 1543,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1450,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1570,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1563,
									"end": 1566,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1559,
									"end": 1571,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1571,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1571,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1211,
									"end": 1577,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1211,
									"end": 1577,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1211,
									"end": 1577,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1211,
									"end": 1577,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1583,
									"end": 1949,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1583,
									"end": 1949,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1728,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1810,
									"end": 1812,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1805,
									"end": 1808,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1746,
									"end": 1813,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1746,
									"end": 1813,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1746,
									"end": 1813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1813,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1813,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1911,
									"end": 1914,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1822,
									"end": 1915,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1822,
									"end": 1915,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1822,
									"end": 1915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1940,
									"end": 1942,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1935,
									"end": 1938,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1931,
									"end": 1943,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1924,
									"end": 1943,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1924,
									"end": 1943,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1949,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1949,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1955,
									"end": 2321,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1955,
									"end": 2321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2097,
									"end": 2100,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2118,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2182,
									"end": 2184,
									"name": "PUSH",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2177,
									"end": 2180,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2118,
									"end": 2185,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2118,
									"end": 2185,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2118,
									"end": 2185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2185,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2194,
									"end": 2287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2283,
									"end": 2286,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2194,
									"end": 2287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2194,
									"end": 2287,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2194,
									"end": 2287,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2194,
									"end": 2287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2307,
									"end": 2310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2315,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2296,
									"end": 2315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2296,
									"end": 2315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1955,
									"end": 2321,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1955,
									"end": 2321,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1955,
									"end": 2321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1955,
									"end": 2321,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2327,
									"end": 2746,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2327,
									"end": 2746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2493,
									"end": 2497,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2531,
									"end": 2533,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2520,
									"end": 2529,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2534,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2589,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2574,
									"end": 2578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2590,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2566,
									"end": 2567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2555,
									"end": 2564,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2551,
									"end": 2568,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2544,
									"end": 2591,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 2739,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2734,
									"end": 2738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 2739,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2608,
									"end": 2739,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2608,
									"end": 2739,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2608,
									"end": 2739,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2600,
									"end": 2739,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2600,
									"end": 2739,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2327,
									"end": 2746,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2327,
									"end": 2746,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2327,
									"end": 2746,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2327,
									"end": 2746,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 2922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2956,
									"end": 2958,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2945,
									"end": 2954,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2941,
									"end": 2959,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2933,
									"end": 2959,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2933,
									"end": 2959,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3005,
									"end": 3014,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3003,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 3015,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 2992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2980,
									"end": 2989,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2976,
									"end": 2993,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2969,
									"end": 3016,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3159,
									"end": 3163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3033,
									"end": 3164,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3025,
									"end": 3164,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3025,
									"end": 3164,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 3171,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3177,
									"end": 3596,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3177,
									"end": 3596,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3347,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3381,
									"end": 3383,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3370,
									"end": 3379,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3366,
									"end": 3384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3358,
									"end": 3384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3358,
									"end": 3384,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3430,
									"end": 3439,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3424,
									"end": 3428,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3420,
									"end": 3440,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3417,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3405,
									"end": 3414,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3441,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3584,
									"end": 3588,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3458,
									"end": 3589,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3458,
									"end": 3589,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3458,
									"end": 3589,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3450,
									"end": 3589,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3450,
									"end": 3589,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3177,
									"end": 3596,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3177,
									"end": 3596,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3177,
									"end": 3596,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3177,
									"end": 3596,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3683,
									"end": 3852,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3683,
									"end": 3852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3778,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3789,
									"end": 3808,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3841,
									"end": 3845,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3836,
									"end": 3839,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3832,
									"end": 3846,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3846,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3846,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3683,
									"end": 3852,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3683,
									"end": 3852,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3683,
									"end": 3852,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3683,
									"end": 3852,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3683,
									"end": 3852,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3858,
									"end": 3954,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3858,
									"end": 3954,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3895,
									"end": 3902,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3924,
									"end": 3948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3942,
									"end": 3947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 3948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3924,
									"end": 3948,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3924,
									"end": 3948,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3924,
									"end": 3948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3913,
									"end": 3948,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3913,
									"end": 3948,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3954,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3954,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3954,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3954,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3960,
									"end": 4064,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3960,
									"end": 4064,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4012,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4034,
									"end": 4058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4034,
									"end": 4058,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4034,
									"end": 4058,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 4034,
									"end": 4058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4023,
									"end": 4058,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4023,
									"end": 4058,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4064,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4064,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4064,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 4064,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4070,
									"end": 4180,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 4070,
									"end": 4180,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4121,
									"end": 4128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4150,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 4168,
									"end": 4173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4150,
									"end": 4174,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4150,
									"end": 4174,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 4150,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4139,
									"end": 4174,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4139,
									"end": 4174,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4070,
									"end": 4180,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4070,
									"end": 4180,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4070,
									"end": 4180,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4070,
									"end": 4180,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4186,
									"end": 4312,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4186,
									"end": 4312,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4223,
									"end": 4230,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4263,
									"end": 4305,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4256,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4252,
									"end": 4306,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4241,
									"end": 4306,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4241,
									"end": 4306,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4186,
									"end": 4312,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4186,
									"end": 4312,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4186,
									"end": 4312,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4186,
									"end": 4312,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4318,
									"end": 4395,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 4318,
									"end": 4395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4355,
									"end": 4362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4389,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4373,
									"end": 4389,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4373,
									"end": 4389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4318,
									"end": 4395,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4318,
									"end": 4395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4318,
									"end": 4395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4318,
									"end": 4395,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4524,
									"end": 4641,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4524,
									"end": 4641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4633,
									"end": 4634,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4630,
									"end": 4631,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4623,
									"end": 4635,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4647,
									"end": 4870,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 4647,
									"end": 4870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4787,
									"end": 4821,
									"name": "PUSH",
									"source": 7,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4783,
									"end": 4784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4775,
									"end": 4781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4771,
									"end": 4785,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4764,
									"end": 4822,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4856,
									"end": 4862,
									"name": "PUSH",
									"source": 7,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4851,
									"end": 4853,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4843,
									"end": 4849,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4839,
									"end": 4854,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4832,
									"end": 4863,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4647,
									"end": 4870,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4647,
									"end": 4870,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4876,
									"end": 5046,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 4876,
									"end": 5046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5016,
									"end": 5038,
									"name": "PUSH",
									"source": 7,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 5012,
									"end": 5013,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5004,
									"end": 5010,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5014,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4993,
									"end": 5039,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4876,
									"end": 5046,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4876,
									"end": 5046,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5052,
									"end": 5276,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 5052,
									"end": 5276,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5192,
									"end": 5226,
									"name": "PUSH",
									"source": 7,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 5188,
									"end": 5189,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5180,
									"end": 5186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5176,
									"end": 5190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5227,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5261,
									"end": 5268,
									"name": "PUSH",
									"source": 7,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5256,
									"end": 5258,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5248,
									"end": 5254,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5244,
									"end": 5259,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5237,
									"end": 5269,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5052,
									"end": 5276,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5052,
									"end": 5276,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5282,
									"end": 5420,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 5282,
									"end": 5420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5389,
									"end": 5394,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5363,
									"end": 5395,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 5363,
									"end": 5395,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5363,
									"end": 5395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5356,
									"end": 5361,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5353,
									"end": 5396,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5343,
									"end": 5414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5343,
									"end": 5414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5410,
									"end": 5411,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5407,
									"end": 5408,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5400,
									"end": 5412,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5343,
									"end": 5414,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5343,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5282,
									"end": 5420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5282,
									"end": 5420,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5426,
									"end": 5576,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 5426,
									"end": 5576,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5513,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5545,
									"end": 5550,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5513,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 5513,
									"end": 5551,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 5513,
									"end": 5551,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5513,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5506,
									"end": 5511,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5503,
									"end": 5552,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5493,
									"end": 5570,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5493,
									"end": 5570,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5566,
									"end": 5567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5563,
									"end": 5564,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5556,
									"end": 5568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5493,
									"end": 5570,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5493,
									"end": 5570,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5426,
									"end": 5576,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5426,
									"end": 5576,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5582,
									"end": 5704,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 5582,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5655,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5673,
									"end": 5678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5655,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 5655,
									"end": 5679,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 5655,
									"end": 5679,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5655,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5653,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5645,
									"end": 5680,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5635,
									"end": 5698,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 5635,
									"end": 5698,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5694,
									"end": 5695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5691,
									"end": 5692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5684,
									"end": 5696,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5635,
									"end": 5698,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 5635,
									"end": 5698,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5704,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 7396,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209970ce7449ad0ebcfc6704f978ab4d35a740ebc1e352d00f40dde6801210c41864736f6c63430008070033",
									".code": [
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "610757E4"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "83BEBCED"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "94A5AA8D"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "EC8AC4D8"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "ECD0C0C3"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 7396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3681,
											"end": 3692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3660,
											"end": 3704,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3660,
											"end": 3704,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3660,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3870,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3860,
											"end": 3870,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3860,
											"end": 3874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3860,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3857,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3847,
											"end": 3885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3885,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3915,
											"end": 3926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3898,
											"end": 3935,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3935,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3898,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 3992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3967,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "PUSH",
											"source": 6,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 3994,
											"end": 4003,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4011,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4012,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4070,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4084,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4132,
											"end": 4143,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4110,
											"end": 4155,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4110,
											"end": 4155,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4110,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 4163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 4163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4163,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1703,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4716,
											"end": 5104,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4716,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4852,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4819,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4932,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4932,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4910,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 5104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 5104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 5104,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7099,
											"end": 7221,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 7099,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7202,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7186,
											"end": 7213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7186,
											"end": 7213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7221,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6282,
											"end": 6418,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 6282,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6385,
											"end": 6396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6418,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6696,
											"end": 6843,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 6696,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6843,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7313,
											"end": 7393,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7313,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7358,
											"end": 7374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 7375,
											"end": 7384,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7313,
											"end": 7393,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5407,
											"end": 5573,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 5407,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5573,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5861,
											"end": 6008,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5861,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5975,
											"end": 5986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 5999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5955,
											"end": 5974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5955,
											"end": 5974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5955,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 6008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 6008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 6008,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 624,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 295,
											"end": 624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 354,
											"end": 360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 389,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 378,
											"end": 401,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 371,
											"end": 490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 371,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 371,
											"end": 490,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 409,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 409,
											"end": 488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 490,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 371,
											"end": 490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 599,
											"end": 606,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 590,
											"end": 596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 579,
											"end": 588,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 575,
											"end": 597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 554,
											"end": 607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 544,
											"end": 607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 544,
											"end": 607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 500,
											"end": 617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 295,
											"end": 624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 295,
											"end": 624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 295,
											"end": 624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 295,
											"end": 624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 295,
											"end": 624,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 630,
											"end": 975,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 630,
											"end": 975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 697,
											"end": 703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 748,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 725,
											"end": 732,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 721,
											"end": 744,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 717,
											"end": 749,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 714,
											"end": 833,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 714,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 714,
											"end": 833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 752,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 752,
											"end": 831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 714,
											"end": 833,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 714,
											"end": 833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 872,
											"end": 873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 897,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 897,
											"end": 958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 887,
											"end": 958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 887,
											"end": 958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 630,
											"end": 975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 630,
											"end": 975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 975,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 981,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1110,
											"end": 1115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1082,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1123,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1129,
											"end": 1247,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1129,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1216,
											"end": 1240,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1216,
											"end": 1240,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1216,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1247,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1253,
											"end": 1626,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1253,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1385,
											"end": 1423,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1423,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1385,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1518,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1439,
											"end": 1527,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1527,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1439,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1527,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1579,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1573,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1567,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1611,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1626,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1626,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1632,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1632,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1733,
											"end": 1784,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1784,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1733,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1791,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1797,
											"end": 2161,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1797,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1885,
											"end": 1888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1946,
											"end": 1951,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1913,
											"end": 1952,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1913,
											"end": 1952,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1913,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1968,
											"end": 2039,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1968,
											"end": 2039,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1968,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2039,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2093,
											"end": 2099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2091,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2048,
											"end": 2100,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2100,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2048,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2147,
											"end": 2153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2125,
											"end": 2154,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2125,
											"end": 2154,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2125,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2155,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 2161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 2161,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 2161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 2161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 2161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 2161,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2167,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2167,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2394,
											"end": 2396,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2389,
											"end": 2392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2330,
											"end": 2397,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2397,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2330,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2397,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2495,
											"end": 2498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2406,
											"end": 2499,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2499,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2406,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2533,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2539,
											"end": 2905,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2539,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 2761,
											"end": 2764,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2702,
											"end": 2769,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2702,
											"end": 2769,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2702,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2769,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2778,
											"end": 2871,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2778,
											"end": 2871,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2778,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2894,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2905,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2905,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2911,
											"end": 3277,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2911,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 3133,
											"end": 3136,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3074,
											"end": 3141,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3141,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3074,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3277,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3283,
											"end": 3649,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3283,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3425,
											"end": 3428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 3505,
											"end": 3508,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3446,
											"end": 3513,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 3513,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3446,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3611,
											"end": 3614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3522,
											"end": 3615,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3615,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3522,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3642,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3649,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3655,
											"end": 4021,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3655,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3877,
											"end": 3880,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3818,
											"end": 3885,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3885,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3818,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3983,
											"end": 3986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3894,
											"end": 3987,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3894,
											"end": 3987,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3894,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 4021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 4021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 4021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 4021,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4027,
											"end": 4393,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4027,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4169,
											"end": 4172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4249,
											"end": 4252,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4190,
											"end": 4257,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4257,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4190,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4355,
											"end": 4358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4266,
											"end": 4359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4266,
											"end": 4359,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4266,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4379,
											"end": 4382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4027,
											"end": 4393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4027,
											"end": 4393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4027,
											"end": 4393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4027,
											"end": 4393,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4399,
											"end": 4517,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4399,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4504,
											"end": 4509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4486,
											"end": 4510,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4486,
											"end": 4510,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4486,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 4511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4517,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4523,
											"end": 4794,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 4523,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4653,
											"end": 4656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4764,
											"end": 4767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4675,
											"end": 4768,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4675,
											"end": 4768,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4675,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4778,
											"end": 4788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4778,
											"end": 4788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4794,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4794,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4800,
											"end": 5054,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4800,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4909,
											"end": 4913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4936,
											"end": 4945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5029,
											"end": 5046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5026,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4960,
											"end": 5047,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4960,
											"end": 5047,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4960,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 5054,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 5054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 5054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 5054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 5054,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5221,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5232,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5300,
											"end": 5301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5298,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5285,
											"end": 5302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5232,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5232,
											"end": 5303,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5232,
											"end": 5303,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5232,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5381,
											"end": 5383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5370,
											"end": 5379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5313,
											"end": 5385,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5313,
											"end": 5385,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5313,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5392,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5398,
											"end": 5648,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5398,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5545,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5556,
											"end": 5641,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5556,
											"end": 5641,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5556,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5648,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5648,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5654,
											"end": 5967,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5654,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5767,
											"end": 5771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5794,
											"end": 5803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5864,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5882,
											"end": 5960,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5882,
											"end": 5960,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5882,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5967,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5967,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5973,
											"end": 6392,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5973,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6139,
											"end": 6143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6179,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6226,
											"end": 6235,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6220,
											"end": 6224,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6236,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6213,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6210,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6254,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6380,
											"end": 6384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6254,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6254,
											"end": 6385,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6254,
											"end": 6385,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6254,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6392,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6398,
											"end": 6817,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6398,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6637,
											"end": 6638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6635,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6615,
											"end": 6662,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6679,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6805,
											"end": 6809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6679,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 6679,
											"end": 6810,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6679,
											"end": 6810,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6679,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6817,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6823,
											"end": 7242,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 6823,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6989,
											"end": 6993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7029,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7025,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7076,
											"end": 7085,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7060,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7047,
											"end": 7064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7104,
											"end": 7235,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7104,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7104,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7096,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7096,
											"end": 7235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 7242,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7248,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 7248,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7452,
											"end": 7454,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7429,
											"end": 7455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7429,
											"end": 7455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 7499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7511,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7485,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7472,
											"end": 7489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7529,
											"end": 7660,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7529,
											"end": 7660,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7529,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7667,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7673,
											"end": 8092,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7673,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7839,
											"end": 7843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7854,
											"end": 7880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7854,
											"end": 7880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7920,
											"end": 7924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7936,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 7910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7897,
											"end": 7914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7890,
											"end": 7937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7954,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7954,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7954,
											"end": 8085,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7954,
											"end": 8085,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 7954,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 8092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 8092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 8092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 8092,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8304,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8291,
											"end": 8300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8351,
											"end": 8360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8341,
											"end": 8361,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8322,
											"end": 8339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8315,
											"end": 8362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 8505,
											"end": 8509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8523,
											"end": 8745,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 8523,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8656,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8631,
											"end": 8657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8631,
											"end": 8657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 8735,
											"end": 8736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8733,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 8667,
											"end": 8738,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8667,
											"end": 8738,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 8667,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8523,
											"end": 8745,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8912,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8991,
											"end": 8992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8989,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 8993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8967,
											"end": 8973,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 8923,
											"end": 8994,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8923,
											"end": 8994,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8923,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9004,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9072,
											"end": 9074,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9061,
											"end": 9070,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9004,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 9004,
											"end": 9076,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9004,
											"end": 9076,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9004,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 9083,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9170,
											"end": 9268,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9170,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9221,
											"end": 9227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9260,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9249,
											"end": 9261,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9268,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9274,
											"end": 9373,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 9274,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9326,
											"end": 9332,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9344,
											"end": 9366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9344,
											"end": 9366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9373,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9379,
											"end": 9526,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9379,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9480,
											"end": 9491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9520,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9526,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9532,
											"end": 9701,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 9532,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9645,
											"end": 9648,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9638,
											"end": 9657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9694,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9685,
											"end": 9688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9666,
											"end": 9695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9666,
											"end": 9695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9701,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9701,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9707,
											"end": 10012,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9707,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9766,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9766,
											"end": 9786,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9766,
											"end": 9786,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 9766,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9786,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9800,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9818,
											"end": 9819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9800,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9800,
											"end": 9820,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9800,
											"end": 9820,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9800,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9795,
											"end": 9820,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9795,
											"end": 9820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9952,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9882,
											"end": 9956,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9876,
											"end": 9957,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 9980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9873,
											"end": 9980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 9980,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9873,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10001,
											"end": 10002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9997,
											"end": 10006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9707,
											"end": 10012,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9707,
											"end": 10012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9707,
											"end": 10012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9707,
											"end": 10012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9707,
											"end": 10012,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10018,
											"end": 10366,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 10018,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10099,
											"end": 10100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10081,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10081,
											"end": 10101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10081,
											"end": 10101,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10081,
											"end": 10101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 10133,
											"end": 10134,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10115,
											"end": 10135,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10115,
											"end": 10135,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 10115,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10110,
											"end": 10135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10110,
											"end": 10135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10304,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10301,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10231,
											"end": 10305,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10225,
											"end": 10306,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10220,
											"end": 10221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10222,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 10223,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10202,
											"end": 10307,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10330,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10199,
											"end": 10330,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10310,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10310,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 10310,
											"end": 10328,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10310,
											"end": 10328,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 10310,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10330,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10199,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10358,
											"end": 10359,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10355,
											"end": 10356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10351,
											"end": 10360,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10366,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10366,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10372,
											"end": 10468,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10372,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10456,
											"end": 10461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10438,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10438,
											"end": 10462,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10438,
											"end": 10462,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10438,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10427,
											"end": 10462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10427,
											"end": 10462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10372,
											"end": 10468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10372,
											"end": 10468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10372,
											"end": 10468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10372,
											"end": 10468,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10474,
											"end": 10578,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 10474,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 10566,
											"end": 10571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10548,
											"end": 10572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10548,
											"end": 10572,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10548,
											"end": 10572,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 10548,
											"end": 10572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10578,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10584,
											"end": 10674,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 10584,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10654,
											"end": 10667,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10647,
											"end": 10668,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10636,
											"end": 10668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10636,
											"end": 10668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10674,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10680,
											"end": 10806,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 10680,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10717,
											"end": 10724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10799,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10746,
											"end": 10800,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10735,
											"end": 10800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10735,
											"end": 10800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10806,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10680,
											"end": 10806,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10812,
											"end": 10889,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10812,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10878,
											"end": 10883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10812,
											"end": 10889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10812,
											"end": 10889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10812,
											"end": 10889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10812,
											"end": 10889,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10895,
											"end": 11035,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10895,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10959,
											"end": 10968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10992,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 11023,
											"end": 11028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10992,
											"end": 11029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10992,
											"end": 11029,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10992,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10979,
											"end": 11029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10979,
											"end": 11029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 11035,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11041,
											"end": 11167,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 11041,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11091,
											"end": 11100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 11155,
											"end": 11160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 11124,
											"end": 11161,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11124,
											"end": 11161,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 11124,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11111,
											"end": 11161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11111,
											"end": 11161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11167,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11173,
											"end": 11286,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 11173,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 11274,
											"end": 11279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 11256,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11243,
											"end": 11280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11243,
											"end": 11280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11173,
											"end": 11286,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11292,
											"end": 11599,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 11292,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11360,
											"end": 11361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11390,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11381,
											"end": 11382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11378,
											"end": 11391,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11469,
											"end": 11470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11464,
											"end": 11467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11460,
											"end": 11471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11448,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11441,
											"end": 11452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11434,
											"end": 11473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11408,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11403,
											"end": 11404,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11399,
											"end": 11409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 11370,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11498,
											"end": 11499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11495,
											"end": 11508,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11492,
											"end": 11593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11492,
											"end": 11593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11492,
											"end": 11593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11581,
											"end": 11582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11572,
											"end": 11578,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11567,
											"end": 11570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11556,
											"end": 11583,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11492,
											"end": 11593,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11492,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 11599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 11599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 11599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 11599,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11605,
											"end": 11785,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 11605,
											"end": 11785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11653,
											"end": 11730,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11650,
											"end": 11651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11643,
											"end": 11731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11750,
											"end": 11754,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11747,
											"end": 11748,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11740,
											"end": 11755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11774,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11779,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11914,
											"end": 12031,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 11914,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12021,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12025,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12037,
											"end": 12139,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 12037,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12078,
											"end": 12084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12131,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12125,
											"end": 12132,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 12120,
											"end": 12122,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12113,
											"end": 12118,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12105,
											"end": 12133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12037,
											"end": 12139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12037,
											"end": 12139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12037,
											"end": 12139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12037,
											"end": 12139,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12145,
											"end": 12370,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 12145,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 12319,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12273,
											"end": 12279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12269,
											"end": 12283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12262,
											"end": 12320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12354,
											"end": 12362,
											"name": "PUSH",
											"source": 7,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12349,
											"end": 12351,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12341,
											"end": 12347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12330,
											"end": 12363,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12145,
											"end": 12370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12145,
											"end": 12370,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12376,
											"end": 12605,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 12376,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12516,
											"end": 12550,
											"name": "PUSH",
											"source": 7,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 12512,
											"end": 12513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12500,
											"end": 12514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12493,
											"end": 12551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "PUSH",
											"source": 7,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 12580,
											"end": 12582,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12572,
											"end": 12578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12568,
											"end": 12583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12561,
											"end": 12598,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12376,
											"end": 12605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12376,
											"end": 12605,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12611,
											"end": 12790,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 12611,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12751,
											"end": 12782,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 12747,
											"end": 12748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12739,
											"end": 12745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12735,
											"end": 12749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12728,
											"end": 12783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12611,
											"end": 12790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12611,
											"end": 12790,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12796,
											"end": 13025,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 12796,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12936,
											"end": 12970,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 12932,
											"end": 12933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12920,
											"end": 12934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12913,
											"end": 12971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 7,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 13000,
											"end": 13002,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12988,
											"end": 13003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12981,
											"end": 13018,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12796,
											"end": 13025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12796,
											"end": 13025,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13031,
											"end": 13212,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 13031,
											"end": 13212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13204,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13159,
											"end": 13165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13155,
											"end": 13169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13148,
											"end": 13205,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13212,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13218,
											"end": 13393,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13218,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13358,
											"end": 13385,
											"name": "PUSH",
											"source": 7,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 13354,
											"end": 13355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13346,
											"end": 13352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13342,
											"end": 13356,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13335,
											"end": 13386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13393,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13399,
											"end": 13521,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 13399,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13472,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 13490,
											"end": 13495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13472,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 13472,
											"end": 13496,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13472,
											"end": 13496,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 13472,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13465,
											"end": 13470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13497,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13452,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13452,
											"end": 13515,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13511,
											"end": 13512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13508,
											"end": 13509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13501,
											"end": 13513,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13452,
											"end": 13515,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13452,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13399,
											"end": 13521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13399,
											"end": 13521,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13527,
											"end": 13643,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 13527,
											"end": 13643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13597,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 13612,
											"end": 13617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13597,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 13597,
											"end": 13618,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13597,
											"end": 13618,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 13597,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13587,
											"end": 13619,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13577,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 13577,
											"end": 13637,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13630,
											"end": 13631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13635,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13577,
											"end": 13637,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 13577,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13527,
											"end": 13643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13527,
											"end": 13643,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_rate()": "83bebced",
							"_token()": "ecd0c0c3",
							"_wallet()": "610757e4",
							"_weiRaised()": "94a5aa8d",
							"buyTokens(address)": "ec8ac4d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"wallet_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate_\":\"Number of token units a buyer gets per wei\",\"token_\":\"Address of the token being sold\",\"wallet_\":\"Address where collected funds will be forwarded to\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/crowdsale-contracts/Crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/crowdsale-contracts/Crowdsale.sol\":{\"keccak256\":\"0x4caae4e4846d676316991d27f0fa2440ac76c7bcb872303b79f84b322bc982b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c56299fd63f4e4eec266f72e513d43ab3a1896d23d5e9e10d5a4f06f3004bb1\",\"dweb:/ipfs/QmVQ6Tv38HT9GoUgw5E1bzNiU24uYDqfijrFSNFGjzpPMj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 992,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 994,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 996,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 998,
								"contract": "contracts/crowdsale-contracts/Crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/crowdsale-contracts/Crowdsale.sol:124:36:\n    |\n124 |     function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n    |                                    ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5457,
					"file": "contracts/crowdsale-contracts/Crowdsale.sol",
					"start": 5438
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/crowdsale-contracts/Crowdsale.sol:124:57:\n    |\n124 |     function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n    |                                                         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5476,
					"file": "contracts/crowdsale-contracts/Crowdsale.sol",
					"start": 5459
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							636
						],
						"IERC20": [
							117
						],
						"SafeERC20": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 118,
							"src": "125:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 637,
							"src": "149:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 341,
							"linearizedBaseContracts": [
								341
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 636,
										"src": "675:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "803:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 136,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "833:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 139,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 128,
																			"src": "863:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 84,
																		"src": "863:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 142,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "888:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "892:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 137,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 135,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "813:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "813:86:2"
											}
										]
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "732:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 126,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "732:6:2"
													},
													"referencedDeclaration": 117,
													"src": "732:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "754:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "774:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:2"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:2"
									},
									"scope": 341,
									"src": "701:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1040:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1070:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 164,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "1100:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 116,
																		"src": "1100:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 167,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1129:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 168,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1135:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 169,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "1139:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 162,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 160,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1050:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:2"
											}
										]
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "947:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 149,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "947:6:2"
													},
													"referencedDeclaration": 117,
													"src": "947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "969:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "991:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1011:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:2"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:2"
									},
									"scope": 341,
									"src": "912:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1519:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 182,
																			"src": "1768:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 194,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$341",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$341",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 193,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 192,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 196,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 180,
																					"src": "1815:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 190,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "1784:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$117",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 94,
																				"src": "1784:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 200,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1939:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 209,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "1969:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "1969:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 212,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "1993:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "2002:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 207,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 205,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1919:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:2"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1443:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 176,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "1443:6:2"
													},
													"referencedDeclaration": 117,
													"src": "1443:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1465:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:2"
									},
									"scope": 341,
									"src": "1413:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2138:194:2",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "2148:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 234,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$341",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$341",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 232,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 236,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "2202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 230,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2171:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$117",
																	"typeString": "contract IERC20"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 94,
															"src": "2171:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 238,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2213:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 245,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "2278:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$117",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "2278:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 248,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "2302:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 249,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2311:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 243,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 241,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2228:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2062:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 219,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "2062:6:2"
													},
													"referencedDeclaration": 117,
													"src": "2062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2084:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2109:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:2"
									},
									"scope": 341,
									"src": "2022:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2454:370:2",
										"statements": [
											{
												"id": 300,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:2",
												"statements": [
													{
														"assignments": [
															265
														],
														"declarations": [
															{
																"constant": false,
																"id": 265,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 300,
																"src": "2488:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 264,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 274,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 270,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$341",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$341",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 268,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 272,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "2542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2511:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 94,
																"src": "2511:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 276,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "2572:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 277,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "2588:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 275,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 281,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:2"
													},
													{
														"assignments": [
															283
														],
														"declarations": [
															{
																"constant": false,
																"id": 283,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 300,
																"src": "2653:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 282,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 287,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 284,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "2676:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 285,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "2691:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 289,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2730:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 292,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2760:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$117",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 104,
																				"src": "2760:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 295,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "2784:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 296,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "2793:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 290,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 288,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2710:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 299,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:2"
													}
												]
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2378:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "2378:6:2"
													},
													"referencedDeclaration": 117,
													"src": "2378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:2"
									},
									"scope": 341,
									"src": "2338:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3277:636:2",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "3626:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 311,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"arguments": [
														{
															"id": 318,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 315,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3660:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$117",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 430,
														"src": "3652:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 322,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3735:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "3731:176:2",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "3758:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 329,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 312,
																				"src": "3830:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 331,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 330,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 332,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 327,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 326,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3236:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 305,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 304,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "3236:6:2"
													},
													"referencedDeclaration": 117,
													"src": "3236:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3250:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:2"
									},
									"scope": 341,
									"src": "3207:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 342,
							"src": "645:3270:2",
							"usedErrors": []
						}
					],
					"src": "100:3816:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							636
						]
					},
					"id": 637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 344,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 636,
							"linearizedBaseContracts": [
								636
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 352,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 636,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 370,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		],
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 368,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 373,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													379,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 378,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 380,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 382,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 636,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 403,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															430
														],
														"referencedDeclaration": 430,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 636,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 426,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 422,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															450,
															500
														],
														"referencedDeclaration": 500,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 428,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 636,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 443,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 445,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 442,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															450,
															500
														],
														"referencedDeclaration": 500,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 441,
												"id": 448,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 636,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 467,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$636",
																				"typeString": "library Address"
																			}
																		],
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 465,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 470,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 476,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													483,
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 482,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 484,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"id": 490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 486,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 495,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 496,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 493,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 498,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 636,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 510,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															517,
															552
														],
														"referencedDeclaration": 552,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 509,
												"id": 515,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 636,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 531,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 530,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													537,
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 536,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 538,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [
														{
															"id": 542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 547,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 548,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 545,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 550,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 636,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 562,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															569,
															604
														],
														"referencedDeclaration": 604,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 561,
												"id": 567,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 636,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 583,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 582,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													589,
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 588,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 591,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 590,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"arguments": [
														{
															"id": 594,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 592,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 598,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 599,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 600,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 597,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 580,
												"id": 602,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 636,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "7721:532:3",
										"statements": [
											{
												"condition": {
													"id": 616,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 607,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "7792:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 620,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "8184:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 627,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 611,
																					"src": "8209:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 626,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:3"
																	}
																]
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "7872:365:3",
															"trueBody": {
																"id": 625,
																"nodeType": "Block",
																"src": "7899:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 609,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 609,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 624,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "7731:516:3",
												"trueBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 617,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 615,
															"id": 618,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 636,
									"src": "7561:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 637,
							"src": "194:8061:3",
							"usedErrors": []
						}
					],
					"src": "101:8155:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							658
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 644,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 643,
												"id": 646,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 658,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 653,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 652,
												"id": 655,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 658,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 659,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							970
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 970,
							"linearizedBaseContracts": [
								970
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 691,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															674
														],
														"declarations": [
															{
																"constant": false,
																"id": 674,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 691,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 673,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 678,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 676,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 679,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 680,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 686,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 672,
															"id": 685,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 688,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 689,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 672,
														"id": 690,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 970,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 719,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 706,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 712,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 710,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 704,
															"id": 711,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 714,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 715,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 717,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 704,
														"id": 718,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 970,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 761,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 733,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 740,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 738,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 732,
															"id": 739,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															742
														],
														"declarations": [
															{
																"constant": false,
																"id": 742,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 761,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 741,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 746,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 743,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 744,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 747,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 748,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 750,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 756,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 732,
															"id": 755,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 758,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 759,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 732,
														"id": 760,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 970,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 789,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 782,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 774,
															"id": 781,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 784,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 785,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 787,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 774,
														"id": 788,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 970,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 817,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 810,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 802,
															"id": 809,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 812,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 813,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 815,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 802,
														"id": 816,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 970,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 830,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 828,
												"id": 832,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 970,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 844,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 845,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 843,
												"id": 847,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 970,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 858,
												"id": 862,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 970,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 877,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 970,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 890,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 892,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 970,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "5084:106:5",
										"statements": [
											{
												"id": 917,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 907,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "5126:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 908,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "5131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 910,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "5134:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 906,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 912,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 913,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "5168:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 914,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 905,
														"id": 916,
														"nodeType": "Return",
														"src": "5161:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "4981:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "5000:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "5019:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "5075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:5"
									},
									"scope": 970,
									"src": "4959:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "5799:105:5",
										"statements": [
											{
												"id": 942,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 932,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "5841:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 935,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "5848:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 931,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 937,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "5882:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 939,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "5886:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 930,
														"id": 941,
														"nodeType": "Return",
														"src": "5875:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5734:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:5"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "5790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:5"
									},
									"scope": 970,
									"src": "5674:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "6675:105:5",
										"statements": [
											{
												"id": 967,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 957,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "6717:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 960,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "6724:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 956,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 962,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 963,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "6758:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 964,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "6762:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 955,
														"id": 966,
														"nodeType": "Return",
														"src": "6751:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6572:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6591:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:5"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6666:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:5"
									},
									"scope": 970,
									"src": "6550:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 971,
							"src": "482:6300:5",
							"usedErrors": []
						}
					],
					"src": "107:6676:5"
				},
				"id": 5
			},
			"contracts/crowdsale-contracts/Crowdsale.sol": {
				"ast": {
					"absolutePath": "contracts/crowdsale-contracts/Crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							636
						],
						"Context": [
							658
						],
						"Crowdsale": [
							1236
						],
						"IERC20": [
							117
						],
						"ReentrancyGuard": [
							39
						],
						"SafeERC20": [
							341
						],
						"SafeMath": [
							970
						]
					},
					"id": 1237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 659,
							"src": "60:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 118,
							"src": "113:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 971,
							"src": "171:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 342,
							"src": "230:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 40,
							"src": "297:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 979,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 658,
										"src": "1093:7:6"
									},
									"id": 980,
									"nodeType": "InheritanceSpecifier",
									"src": "1093:7:6"
								},
								{
									"baseName": {
										"id": 981,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "1102:15:6"
									},
									"id": 982,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:15:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 978,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:6",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 1236,
							"linearizedBaseContracts": [
								1236,
								39,
								658
							],
							"name": "Crowdsale",
							"nameLocation": "1080:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 985,
									"libraryName": {
										"id": 983,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "1131:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1125:27:6",
									"typeName": {
										"id": 984,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1144:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 989,
									"libraryName": {
										"id": 986,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 341,
										"src": "1164:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1158:27:6",
									"typeName": {
										"id": 988,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 987,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "1178:6:6"
										},
										"referencedDeclaration": 117,
										"src": "1178:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ecd0c0c3",
									"id": 992,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1236:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "1222:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 991,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 990,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "1222:6:6"
										},
										"referencedDeclaration": 117,
										"src": "1222:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "610757e4",
									"id": 994,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1316:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "1293:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 993,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1293:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83bebced",
									"id": 996,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1635:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "1620:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1620:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94a5aa8d",
									"id": 998,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1693:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "1678:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 997,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1678:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "1712:241:6",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"id": 1009,
									"name": "TokensPurchased",
									"nameLocation": "1965:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "1997:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1981:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2024:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2008:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2045:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2037:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2060:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "2052:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:87:6"
									},
									"src": "1959:109:6"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "2597:312:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1021,
																"name": "rate_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "2616:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2624:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2616:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2627:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2608:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2608:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2608:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "wallet_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "2669:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2688:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2680:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2680:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2680:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2669:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2692:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2661:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2661:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "2661:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1040,
																		"name": "token_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "2759:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$117",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$117",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2751:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2751:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2778:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2770:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2770:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2770:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2751:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2782:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 1037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2743:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2743:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "2743:78:6"
											},
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1050,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "2834:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1051,
														"name": "rate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "2842:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2834:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "2834:13:6"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1055,
														"name": "wallet_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "2868:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2858:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:6"
											},
											{
												"expression": {
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2886:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1059,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "2895:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "2886:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "2886:15:6"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "2076:447:6",
										"text": " @param rate_ Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param wallet_ Address where collected funds will be forwarded to\n @param token_ Address of the token being sold"
									},
									"id": 1063,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "rate_",
												"nameLocation": "2550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "wallet_",
												"nameLocation": "2573:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2557:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2557:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "token_",
												"nameLocation": "2589:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2582:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$117",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1015,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 117,
														"src": "2582:6:6"
													},
													"referencedDeclaration": 117,
													"src": "2582:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:55:6"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2597:0:6"
									},
									"scope": 1236,
									"src": "2529:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "3234:42:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1068,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "3255:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3255:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1067,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "3245:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "3245:23:6"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "2917:283:6",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 1073,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3214:2:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3234:0:6"
									},
									"scope": 1236,
									"src": "3206:70:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "3609:554:6",
										"statements": [
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "3628:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "3620:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3620:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"expression": {
														"id": 1083,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3640:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "3640:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3620:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3681:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "3694:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1086,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "3660:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3660:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "3660:44:6"
											},
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "3774:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "3766:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "3799:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "3783:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3783:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3766:43:6"
											},
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1097,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "3847:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1100,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "3875:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1098,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "3860:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 834,
															"src": "3860:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3860:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3847:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "3847:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1105,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3915:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "3928:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1104,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "3898:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3898:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "3898:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1110,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "3967:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3967:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3981:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "3994:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1114,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "4005:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "3951:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "EmitStatement",
												"src": "3946:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "4048:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "4061:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "4025:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "4025:46:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1122,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "4084:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "4084:15:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1126,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "4132:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "4145:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4110:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4110:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "4110:45:6"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "3284:251:6",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1079,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1078,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "3588:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3588:12:6"
										}
									],
									"name": "buyTokens",
									"nameLocation": "3550:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "3568:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "3560:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:21:6"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3609:0:6"
									},
									"scope": 1236,
									"src": "3541:622:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "4808:296:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1140,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "4827:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4850:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4842:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4842:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4842:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4827:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4854:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 1139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4819:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4819:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "4819:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1150,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "4918:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4931:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4918:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4934:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 1149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4910:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "4910:52:6"
											},
											{
												"expression": {
													"id": 1156,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "4973:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$1236",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "4973:4:6"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "4171:539:6",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "4725:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4754:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4746:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "4775:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4767:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4767:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4745:40:6"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4808:0:6"
									},
									"scope": 1236,
									"src": "4716:388:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "5492:81:6",
										"statements": [
											{
												"expression": {
													"id": 1167,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5561:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$1236",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "5561:4:6"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "5112:289:6",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "5416:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5446:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5438:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5467:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "5459:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5437:40:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5492:0:6"
									},
									"scope": 1236,
									"src": "5407:166:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "5944:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "5975:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "5988:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1178,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "5955:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 148,
														"src": "5955:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$117_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$117_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5955:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "5955:45:6"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "5581:274:6",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "5870:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5893:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "5885:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5885:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "5914:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "5906:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:42:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5944:0:6"
									},
									"scope": 1236,
									"src": "5861:147:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "6359:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "6385:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "6398:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1194,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "6370:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6370:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "6370:40:6"
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "6016:260:6",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "6291:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6316:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "6308:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6308:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6337:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "6329:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6307:42:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6359:0:6"
									},
									"scope": 1236,
									"src": "6282:136:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "6777:66:6",
										"statements": []
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "6426:264:6",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "6705:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6736:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "6728:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6728:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6757:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "6749:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6727:40:6"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6777:0:6"
									},
									"scope": 1236,
									"src": "6696:147:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "7175:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1219,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "7207:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1217,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "7193:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "7193:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7193:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1216,
												"id": 1221,
												"nodeType": "Return",
												"src": "7186:27:6"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "6851:242:6",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7108:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7132:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "7124:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7124:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7123:19:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "7166:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7165:9:6"
									},
									"scope": 1236,
									"src": "7099:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "7347:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1230,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7375:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7375:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1227,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "7358:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7358:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7358:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "7358:27:6"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "7229:78:6",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "7322:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7335:2:6"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7347:0:6"
									},
									"scope": 1236,
									"src": "7313:80:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1237,
							"src": "1071:6325:6",
							"usedErrors": []
						}
					],
					"src": "33:7363:6"
				},
				"id": 6
			}
		}
	}
}